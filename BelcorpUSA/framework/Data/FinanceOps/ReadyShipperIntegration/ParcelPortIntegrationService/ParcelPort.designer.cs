#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParcelPortIntegrationService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ItWorksCore")]
	public partial class ParcelPortDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertLogisticsCommunication(LogisticsCommunication instance);
    partial void UpdateLogisticsCommunication(LogisticsCommunication instance);
    partial void DeleteLogisticsCommunication(LogisticsCommunication instance);
    partial void InsertParcelPortShipment(ParcelPortShipment instance);
    partial void UpdateParcelPortShipment(ParcelPortShipment instance);
    partial void DeleteParcelPortShipment(ParcelPortShipment instance);
    #endregion
		
		public ParcelPortDataContext() : 
				base(global::ParcelPortIntegrationService.Properties.Settings.Default.ItWorksCoreConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ParcelPortDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParcelPortDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParcelPortDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParcelPortDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItems
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<LogisticsCommunication> LogisticsCommunications
		{
			get
			{
				return this.GetTable<LogisticsCommunication>();
			}
		}
		
		public System.Data.Linq.Table<ParcelPortShipment> ParcelPortShipments
		{
			get
			{
				return this.GetTable<ParcelPortShipment>();
			}
		}
		
		public System.Data.Linq.Table<VwParcelPortOrder> VwParcelPortOrders
		{
			get
			{
				return this.GetTable<VwParcelPortOrder>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLogisticsGetOrderItemsParcelPort")]
		public ISingleResult<OrderItem> uspLogisticsGetOrderItemsParcelPort([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderCustomerID", DbType="Int")] System.Nullable<int> orderCustomerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderCustomerID);
			return ((ISingleResult<OrderItem>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLogisticsRecordTrackingNumberByOrderCustomerID")]
		public int uspLogisticsRecordTrackingNumberByOrderCustomerID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderCustomerID", DbType="Int")] System.Nullable<int> orderCustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackingNumber", DbType="NVarChar(1000)")] string trackingNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderCustomerID, trackingNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLogisticsMarkOrderPrintedByOrderCustomerID")]
		public int uspLogisticsMarkOrderPrintedByOrderCustomerID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderCustomerID", DbType="Int")] System.Nullable<int> orderCustomerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderCustomerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLogisticsRecordTrackingNumberByOrderNumber")]
		public int uspLogisticsRecordTrackingNumberByOrderNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderNumber", DbType="NVarChar(100)")] string orderNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackingNumber", DbType="NVarChar(1000)")] string trackingNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackingUrl", DbType="NVarChar(1000)")] string trackingUrl)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderNumber, trackingNumber, trackingUrl);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLogisticsGetOrdersParcelPort")]
		public ISingleResult<VwParcelPortOrder> uspLogisticsGetOrdersParcelPort()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<VwParcelPortOrder>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItems")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderItemID;
		
		private int _OrderCustomerID;
		
		private short _OrderItemTypeID;
		
		private System.Nullable<int> _HostessRewardRuleID;
		
		private System.Nullable<int> _ParentOrderItemID;
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _ProductPriceTypeID;
		
		private string _ProductName;
		
		private string _SKU;
		
		private System.Nullable<int> _CatalogID;
		
		private int _Quantity;
		
		private decimal _ItemPrice;
		
		private System.Nullable<decimal> _ShippingTotal;
		
		private System.Nullable<decimal> _ShippingTotalOverride;
		
		private System.Nullable<decimal> _HandlingTotal;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _DiscountPercent;
		
		private System.Nullable<decimal> _AdjustedPrice;
		
		private System.Nullable<decimal> _CommissionableTotal;
		
		private System.Nullable<decimal> _CommissionableTotalOverride;
		
		private bool _ChargeTax;
		
		private bool _ChargeShipping;
		
		private System.Nullable<int> _Points;
		
		private System.Nullable<decimal> _MinCustomerSubtotal;
		
		private System.Nullable<decimal> _MaxCustomerSubtotal;
		
		private System.Nullable<decimal> _TaxPercent;
		
		private System.Nullable<decimal> _TaxAmount;
		
		private System.Nullable<decimal> _TaxPercentCity;
		
		private System.Nullable<decimal> _TaxAmountCity;
		
		private System.Nullable<decimal> _TaxAmountCityLocal;
		
		private System.Nullable<decimal> _TaxPercentState;
		
		private System.Nullable<decimal> _TaxAmountState;
		
		private System.Nullable<decimal> _TaxPercentCounty;
		
		private System.Nullable<decimal> _TaxAmountCounty;
		
		private System.Nullable<decimal> _TaxAmountCountyLocal;
		
		private System.Nullable<decimal> _TaxPercentDistrict;
		
		private System.Nullable<decimal> _TaxAmountDistrict;
		
		private System.Nullable<decimal> _TaxPercentCountry;
		
		private System.Nullable<decimal> _TaxAmountCountry;
		
		private System.Nullable<decimal> _TaxableTotal;
		
		private System.Data.Linq.Binary _DataVersion;
		
		private System.Nullable<int> _ModifiedByUserID;
		
		private System.Nullable<int> _DynamicKitGroupID;
		
		private EntitySet<OrderItem> _OrderItems;
		
		private EntityRef<OrderItem> _OrderItem1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderItemIDChanging(int value);
    partial void OnOrderItemIDChanged();
    partial void OnOrderCustomerIDChanging(int value);
    partial void OnOrderCustomerIDChanged();
    partial void OnOrderItemTypeIDChanging(short value);
    partial void OnOrderItemTypeIDChanged();
    partial void OnHostessRewardRuleIDChanging(System.Nullable<int> value);
    partial void OnHostessRewardRuleIDChanged();
    partial void OnParentOrderItemIDChanging(System.Nullable<int> value);
    partial void OnParentOrderItemIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnProductPriceTypeIDChanging(System.Nullable<int> value);
    partial void OnProductPriceTypeIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnCatalogIDChanging(System.Nullable<int> value);
    partial void OnCatalogIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnItemPriceChanging(decimal value);
    partial void OnItemPriceChanged();
    partial void OnShippingTotalChanging(System.Nullable<decimal> value);
    partial void OnShippingTotalChanged();
    partial void OnShippingTotalOverrideChanging(System.Nullable<decimal> value);
    partial void OnShippingTotalOverrideChanged();
    partial void OnHandlingTotalChanging(System.Nullable<decimal> value);
    partial void OnHandlingTotalChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnDiscountPercentChanging(System.Nullable<decimal> value);
    partial void OnDiscountPercentChanged();
    partial void OnAdjustedPriceChanging(System.Nullable<decimal> value);
    partial void OnAdjustedPriceChanged();
    partial void OnCommissionableTotalChanging(System.Nullable<decimal> value);
    partial void OnCommissionableTotalChanged();
    partial void OnCommissionableTotalOverrideChanging(System.Nullable<decimal> value);
    partial void OnCommissionableTotalOverrideChanged();
    partial void OnChargeTaxChanging(bool value);
    partial void OnChargeTaxChanged();
    partial void OnChargeShippingChanging(bool value);
    partial void OnChargeShippingChanged();
    partial void OnPointsChanging(System.Nullable<int> value);
    partial void OnPointsChanged();
    partial void OnMinCustomerSubtotalChanging(System.Nullable<decimal> value);
    partial void OnMinCustomerSubtotalChanged();
    partial void OnMaxCustomerSubtotalChanging(System.Nullable<decimal> value);
    partial void OnMaxCustomerSubtotalChanged();
    partial void OnTaxPercentChanging(System.Nullable<decimal> value);
    partial void OnTaxPercentChanged();
    partial void OnTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountChanged();
    partial void OnTaxPercentCityChanging(System.Nullable<decimal> value);
    partial void OnTaxPercentCityChanged();
    partial void OnTaxAmountCityChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountCityChanged();
    partial void OnTaxAmountCityLocalChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountCityLocalChanged();
    partial void OnTaxPercentStateChanging(System.Nullable<decimal> value);
    partial void OnTaxPercentStateChanged();
    partial void OnTaxAmountStateChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountStateChanged();
    partial void OnTaxPercentCountyChanging(System.Nullable<decimal> value);
    partial void OnTaxPercentCountyChanged();
    partial void OnTaxAmountCountyChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountCountyChanged();
    partial void OnTaxAmountCountyLocalChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountCountyLocalChanged();
    partial void OnTaxPercentDistrictChanging(System.Nullable<decimal> value);
    partial void OnTaxPercentDistrictChanged();
    partial void OnTaxAmountDistrictChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountDistrictChanged();
    partial void OnTaxPercentCountryChanging(System.Nullable<decimal> value);
    partial void OnTaxPercentCountryChanged();
    partial void OnTaxAmountCountryChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountCountryChanged();
    partial void OnTaxableTotalChanging(System.Nullable<decimal> value);
    partial void OnTaxableTotalChanged();
    partial void OnDataVersionChanging(System.Data.Linq.Binary value);
    partial void OnDataVersionChanged();
    partial void OnModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIDChanged();
    partial void OnDynamicKitGroupIDChanging(System.Nullable<int> value);
    partial void OnDynamicKitGroupIDChanged();
    #endregion
		
		public OrderItem()
		{
			this._OrderItems = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItems), new Action<OrderItem>(this.detach_OrderItems));
			this._OrderItem1 = default(EntityRef<OrderItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCustomerID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OrderCustomerID
		{
			get
			{
				return this._OrderCustomerID;
			}
			set
			{
				if ((this._OrderCustomerID != value))
				{
					this.OnOrderCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCustomerID = value;
					this.SendPropertyChanged("OrderCustomerID");
					this.OnOrderCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemTypeID", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short OrderItemTypeID
		{
			get
			{
				return this._OrderItemTypeID;
			}
			set
			{
				if ((this._OrderItemTypeID != value))
				{
					this.OnOrderItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemTypeID = value;
					this.SendPropertyChanged("OrderItemTypeID");
					this.OnOrderItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostessRewardRuleID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HostessRewardRuleID
		{
			get
			{
				return this._HostessRewardRuleID;
			}
			set
			{
				if ((this._HostessRewardRuleID != value))
				{
					this.OnHostessRewardRuleIDChanging(value);
					this.SendPropertyChanging();
					this._HostessRewardRuleID = value;
					this.SendPropertyChanged("HostessRewardRuleID");
					this.OnHostessRewardRuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentOrderItemID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentOrderItemID
		{
			get
			{
				return this._ParentOrderItemID;
			}
			set
			{
				if ((this._ParentOrderItemID != value))
				{
					if (this._OrderItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._ParentOrderItemID = value;
					this.SendPropertyChanged("ParentOrderItemID");
					this.OnParentOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPriceTypeID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ProductPriceTypeID
		{
			get
			{
				return this._ProductPriceTypeID;
			}
			set
			{
				if ((this._ProductPriceTypeID != value))
				{
					this.OnProductPriceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductPriceTypeID = value;
					this.SendPropertyChanged("ProductPriceTypeID");
					this.OnProductPriceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CatalogID
		{
			get
			{
				return this._CatalogID;
			}
			set
			{
				if ((this._CatalogID != value))
				{
					this.OnCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogID = value;
					this.SendPropertyChanged("CatalogID");
					this.OnCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ItemPrice
		{
			get
			{
				return this._ItemPrice;
			}
			set
			{
				if ((this._ItemPrice != value))
				{
					this.OnItemPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemPrice = value;
					this.SendPropertyChanged("ItemPrice");
					this.OnItemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingTotal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ShippingTotal
		{
			get
			{
				return this._ShippingTotal;
			}
			set
			{
				if ((this._ShippingTotal != value))
				{
					this.OnShippingTotalChanging(value);
					this.SendPropertyChanging();
					this._ShippingTotal = value;
					this.SendPropertyChanged("ShippingTotal");
					this.OnShippingTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingTotalOverride", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ShippingTotalOverride
		{
			get
			{
				return this._ShippingTotalOverride;
			}
			set
			{
				if ((this._ShippingTotalOverride != value))
				{
					this.OnShippingTotalOverrideChanging(value);
					this.SendPropertyChanging();
					this._ShippingTotalOverride = value;
					this.SendPropertyChanged("ShippingTotalOverride");
					this.OnShippingTotalOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingTotal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> HandlingTotal
		{
			get
			{
				return this._HandlingTotal;
			}
			set
			{
				if ((this._HandlingTotal != value))
				{
					this.OnHandlingTotalChanging(value);
					this.SendPropertyChanging();
					this._HandlingTotal = value;
					this.SendPropertyChanged("HandlingTotal");
					this.OnHandlingTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercent", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountPercent
		{
			get
			{
				return this._DiscountPercent;
			}
			set
			{
				if ((this._DiscountPercent != value))
				{
					this.OnDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercent = value;
					this.SendPropertyChanged("DiscountPercent");
					this.OnDiscountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustedPrice", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AdjustedPrice
		{
			get
			{
				return this._AdjustedPrice;
			}
			set
			{
				if ((this._AdjustedPrice != value))
				{
					this.OnAdjustedPriceChanging(value);
					this.SendPropertyChanging();
					this._AdjustedPrice = value;
					this.SendPropertyChanged("AdjustedPrice");
					this.OnAdjustedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionableTotal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CommissionableTotal
		{
			get
			{
				return this._CommissionableTotal;
			}
			set
			{
				if ((this._CommissionableTotal != value))
				{
					this.OnCommissionableTotalChanging(value);
					this.SendPropertyChanging();
					this._CommissionableTotal = value;
					this.SendPropertyChanged("CommissionableTotal");
					this.OnCommissionableTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionableTotalOverride", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CommissionableTotalOverride
		{
			get
			{
				return this._CommissionableTotalOverride;
			}
			set
			{
				if ((this._CommissionableTotalOverride != value))
				{
					this.OnCommissionableTotalOverrideChanging(value);
					this.SendPropertyChanging();
					this._CommissionableTotalOverride = value;
					this.SendPropertyChanged("CommissionableTotalOverride");
					this.OnCommissionableTotalOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeTax", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ChargeTax
		{
			get
			{
				return this._ChargeTax;
			}
			set
			{
				if ((this._ChargeTax != value))
				{
					this.OnChargeTaxChanging(value);
					this.SendPropertyChanging();
					this._ChargeTax = value;
					this.SendPropertyChanged("ChargeTax");
					this.OnChargeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeShipping", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ChargeShipping
		{
			get
			{
				return this._ChargeShipping;
			}
			set
			{
				if ((this._ChargeShipping != value))
				{
					this.OnChargeShippingChanging(value);
					this.SendPropertyChanging();
					this._ChargeShipping = value;
					this.SendPropertyChanged("ChargeShipping");
					this.OnChargeShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCustomerSubtotal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MinCustomerSubtotal
		{
			get
			{
				return this._MinCustomerSubtotal;
			}
			set
			{
				if ((this._MinCustomerSubtotal != value))
				{
					this.OnMinCustomerSubtotalChanging(value);
					this.SendPropertyChanging();
					this._MinCustomerSubtotal = value;
					this.SendPropertyChanged("MinCustomerSubtotal");
					this.OnMinCustomerSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCustomerSubtotal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MaxCustomerSubtotal
		{
			get
			{
				return this._MaxCustomerSubtotal;
			}
			set
			{
				if ((this._MaxCustomerSubtotal != value))
				{
					this.OnMaxCustomerSubtotalChanging(value);
					this.SendPropertyChanging();
					this._MaxCustomerSubtotal = value;
					this.SendPropertyChanged("MaxCustomerSubtotal");
					this.OnMaxCustomerSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercent", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxPercent
		{
			get
			{
				return this._TaxPercent;
			}
			set
			{
				if ((this._TaxPercent != value))
				{
					this.OnTaxPercentChanging(value);
					this.SendPropertyChanging();
					this._TaxPercent = value;
					this.SendPropertyChanged("TaxPercent");
					this.OnTaxPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercentCity", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxPercentCity
		{
			get
			{
				return this._TaxPercentCity;
			}
			set
			{
				if ((this._TaxPercentCity != value))
				{
					this.OnTaxPercentCityChanging(value);
					this.SendPropertyChanging();
					this._TaxPercentCity = value;
					this.SendPropertyChanged("TaxPercentCity");
					this.OnTaxPercentCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountCity", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmountCity
		{
			get
			{
				return this._TaxAmountCity;
			}
			set
			{
				if ((this._TaxAmountCity != value))
				{
					this.OnTaxAmountCityChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountCity = value;
					this.SendPropertyChanged("TaxAmountCity");
					this.OnTaxAmountCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountCityLocal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmountCityLocal
		{
			get
			{
				return this._TaxAmountCityLocal;
			}
			set
			{
				if ((this._TaxAmountCityLocal != value))
				{
					this.OnTaxAmountCityLocalChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountCityLocal = value;
					this.SendPropertyChanged("TaxAmountCityLocal");
					this.OnTaxAmountCityLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercentState", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxPercentState
		{
			get
			{
				return this._TaxPercentState;
			}
			set
			{
				if ((this._TaxPercentState != value))
				{
					this.OnTaxPercentStateChanging(value);
					this.SendPropertyChanging();
					this._TaxPercentState = value;
					this.SendPropertyChanged("TaxPercentState");
					this.OnTaxPercentStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountState", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmountState
		{
			get
			{
				return this._TaxAmountState;
			}
			set
			{
				if ((this._TaxAmountState != value))
				{
					this.OnTaxAmountStateChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountState = value;
					this.SendPropertyChanged("TaxAmountState");
					this.OnTaxAmountStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercentCounty", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxPercentCounty
		{
			get
			{
				return this._TaxPercentCounty;
			}
			set
			{
				if ((this._TaxPercentCounty != value))
				{
					this.OnTaxPercentCountyChanging(value);
					this.SendPropertyChanging();
					this._TaxPercentCounty = value;
					this.SendPropertyChanged("TaxPercentCounty");
					this.OnTaxPercentCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountCounty", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmountCounty
		{
			get
			{
				return this._TaxAmountCounty;
			}
			set
			{
				if ((this._TaxAmountCounty != value))
				{
					this.OnTaxAmountCountyChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountCounty = value;
					this.SendPropertyChanged("TaxAmountCounty");
					this.OnTaxAmountCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountCountyLocal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmountCountyLocal
		{
			get
			{
				return this._TaxAmountCountyLocal;
			}
			set
			{
				if ((this._TaxAmountCountyLocal != value))
				{
					this.OnTaxAmountCountyLocalChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountCountyLocal = value;
					this.SendPropertyChanged("TaxAmountCountyLocal");
					this.OnTaxAmountCountyLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercentDistrict", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxPercentDistrict
		{
			get
			{
				return this._TaxPercentDistrict;
			}
			set
			{
				if ((this._TaxPercentDistrict != value))
				{
					this.OnTaxPercentDistrictChanging(value);
					this.SendPropertyChanging();
					this._TaxPercentDistrict = value;
					this.SendPropertyChanged("TaxPercentDistrict");
					this.OnTaxPercentDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountDistrict", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmountDistrict
		{
			get
			{
				return this._TaxAmountDistrict;
			}
			set
			{
				if ((this._TaxAmountDistrict != value))
				{
					this.OnTaxAmountDistrictChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountDistrict = value;
					this.SendPropertyChanged("TaxAmountDistrict");
					this.OnTaxAmountDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercentCountry", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxPercentCountry
		{
			get
			{
				return this._TaxPercentCountry;
			}
			set
			{
				if ((this._TaxPercentCountry != value))
				{
					this.OnTaxPercentCountryChanging(value);
					this.SendPropertyChanging();
					this._TaxPercentCountry = value;
					this.SendPropertyChanged("TaxPercentCountry");
					this.OnTaxPercentCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountCountry", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxAmountCountry
		{
			get
			{
				return this._TaxAmountCountry;
			}
			set
			{
				if ((this._TaxAmountCountry != value))
				{
					this.OnTaxAmountCountryChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountCountry = value;
					this.SendPropertyChanged("TaxAmountCountry");
					this.OnTaxAmountCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableTotal", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TaxableTotal
		{
			get
			{
				return this._TaxableTotal;
			}
			set
			{
				if ((this._TaxableTotal != value))
				{
					this.OnTaxableTotalChanging(value);
					this.SendPropertyChanging();
					this._TaxableTotal = value;
					this.SendPropertyChanged("TaxableTotal");
					this.OnTaxableTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DataVersion
		{
			get
			{
				return this._DataVersion;
			}
			set
			{
				if ((this._DataVersion != value))
				{
					this.OnDataVersionChanging(value);
					this.SendPropertyChanging();
					this._DataVersion = value;
					this.SendPropertyChanged("DataVersion");
					this.OnDataVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ModifiedByUserID
		{
			get
			{
				return this._ModifiedByUserID;
			}
			set
			{
				if ((this._ModifiedByUserID != value))
				{
					this.OnModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserID = value;
					this.SendPropertyChanged("ModifiedByUserID");
					this.OnModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynamicKitGroupID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DynamicKitGroupID
		{
			get
			{
				return this._DynamicKitGroupID;
			}
			set
			{
				if ((this._DynamicKitGroupID != value))
				{
					this.OnDynamicKitGroupIDChanging(value);
					this.SendPropertyChanging();
					this._DynamicKitGroupID = value;
					this.SendPropertyChanged("DynamicKitGroupID");
					this.OnDynamicKitGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItem_OrderItem", Storage="_OrderItems", ThisKey="OrderItemID", OtherKey="ParentOrderItemID")]
		public EntitySet<OrderItem> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItem_OrderItem", Storage="_OrderItem1", ThisKey="ParentOrderItemID", OtherKey="OrderItemID", IsForeignKey=true)]
		public OrderItem OrderItem1
		{
			get
			{
				return this._OrderItem1.Entity;
			}
			set
			{
				OrderItem previousValue = this._OrderItem1.Entity;
				if (((previousValue != value) 
							|| (this._OrderItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItem1.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._OrderItem1.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._ParentOrderItemID = value.OrderItemID;
					}
					else
					{
						this._ParentOrderItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderItem1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderItem1 = this;
		}
		
		private void detach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderItem1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogisticsCommunication")]
	public partial class LogisticsCommunication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogisticsCommunicationID;
		
		private string _Message;
		
		private System.DateTime _CreatedOn;
		
		private System.DateTime _UpdatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogisticsCommunicationIDChanging(int value);
    partial void OnLogisticsCommunicationIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnUpdatedOnChanging(System.DateTime value);
    partial void OnUpdatedOnChanged();
    #endregion
		
		public LogisticsCommunication()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogisticsCommunicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogisticsCommunicationID
		{
			get
			{
				return this._LogisticsCommunicationID;
			}
			set
			{
				if ((this._LogisticsCommunicationID != value))
				{
					this.OnLogisticsCommunicationIDChanging(value);
					this.SendPropertyChanging();
					this._LogisticsCommunicationID = value;
					this.SendPropertyChanged("LogisticsCommunicationID");
					this.OnLogisticsCommunicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime2 NOT NULL")]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParcelPortShipments")]
	public partial class ParcelPortShipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParcelPortShipmentID;
		
		private string _OrderNumber;
		
		private string _TrackingNumber;
		
		private System.DateTime _DateCreatedUTC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParcelPortShipmentIDChanging(int value);
    partial void OnParcelPortShipmentIDChanged();
    partial void OnOrderNumberChanging(string value);
    partial void OnOrderNumberChanged();
    partial void OnTrackingNumberChanging(string value);
    partial void OnTrackingNumberChanged();
    partial void OnDateCreatedUTCChanging(System.DateTime value);
    partial void OnDateCreatedUTCChanged();
    #endregion
		
		public ParcelPortShipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcelPortShipmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ParcelPortShipmentID
		{
			get
			{
				return this._ParcelPortShipmentID;
			}
			set
			{
				if ((this._ParcelPortShipmentID != value))
				{
					this.OnParcelPortShipmentIDChanging(value);
					this.SendPropertyChanging();
					this._ParcelPortShipmentID = value;
					this.SendPropertyChanged("ParcelPortShipmentID");
					this.OnParcelPortShipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrackingNumber
		{
			get
			{
				return this._TrackingNumber;
			}
			set
			{
				if ((this._TrackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreatedUTC", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreatedUTC
		{
			get
			{
				return this._DateCreatedUTC;
			}
			set
			{
				if ((this._DateCreatedUTC != value))
				{
					this.OnDateCreatedUTCChanging(value);
					this.SendPropertyChanging();
					this._DateCreatedUTC = value;
					this.SendPropertyChanged("DateCreatedUTC");
					this.OnDateCreatedUTCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwParcelPortOrders")]
	public partial class VwParcelPortOrder
	{
		
		private int _OrderCustomerID;
		
		private string _OrderNumber;
		
		private System.Nullable<long> _OrderCustomerVersion;
		
		private string _OrderDate;
		
		private string _Carrier;
		
		private int _CustomerNum;
		
		private string _Payment;
		
		private System.Nullable<char> _OrderClass;
		
		private System.Nullable<decimal> _SubTotal;
		
		private System.Nullable<decimal> _Tax;
		
		private System.Nullable<decimal> _Shipping;
		
		private System.Nullable<decimal> _Total;
		
		private string _BillToAttention;
		
		private string _BillToAddress1;
		
		private string _BillToAddress2;
		
		private string _BillToCity;
		
		private string _BillToState;
		
		private string _BillToPostalCode;
		
		private string _BillToCountry;
		
		private string _BillToPhone;
		
		private string _ShipToAttention;
		
		private string _ShipToAddress1;
		
		private string _ShipToAddress2;
		
		private string _ShipToCity;
		
		private string _ShipToState;
		
		private string _ShipToPostalCode;
		
		private string _ShipToCountry;
		
		private string _ShipToPhone;
		
		private string _LifeTimeRanking;
		
		public VwParcelPortOrder()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCustomerID", DbType="Int NOT NULL")]
		public int OrderCustomerID
		{
			get
			{
				return this._OrderCustomerID;
			}
			set
			{
				if ((this._OrderCustomerID != value))
				{
					this._OrderCustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="NVarChar(101)")]
		public string OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this._OrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCustomerVersion", DbType="BigInt")]
		public System.Nullable<long> OrderCustomerVersion
		{
			get
			{
				return this._OrderCustomerVersion;
			}
			set
			{
				if ((this._OrderCustomerVersion != value))
				{
					this._OrderCustomerVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="Char(8)")]
		public string OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this._OrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carrier", DbType="NVarChar(4)")]
		public string Carrier
		{
			get
			{
				return this._Carrier;
			}
			set
			{
				if ((this._Carrier != value))
				{
					this._Carrier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNum", DbType="Int NOT NULL")]
		public int CustomerNum
		{
			get
			{
				return this._CustomerNum;
			}
			set
			{
				if ((this._CustomerNum != value))
				{
					this._CustomerNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="VarChar(16)")]
		public string Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this._Payment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderClass", DbType="Char(1)")]
		public System.Nullable<char> OrderClass
		{
			get
			{
				return this._OrderClass;
			}
			set
			{
				if ((this._OrderClass != value))
				{
					this._OrderClass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money")]
		public System.Nullable<decimal> SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this._SubTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipping", DbType="Money")]
		public System.Nullable<decimal> Shipping
		{
			get
			{
				return this._Shipping;
			}
			set
			{
				if ((this._Shipping != value))
				{
					this._Shipping = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAttention", DbType="NVarChar(40)")]
		public string BillToAttention
		{
			get
			{
				return this._BillToAttention;
			}
			set
			{
				if ((this._BillToAttention != value))
				{
					this._BillToAttention = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddress1", DbType="NVarChar(40)")]
		public string BillToAddress1
		{
			get
			{
				return this._BillToAddress1;
			}
			set
			{
				if ((this._BillToAddress1 != value))
				{
					this._BillToAddress1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddress2", DbType="NVarChar(40)")]
		public string BillToAddress2
		{
			get
			{
				return this._BillToAddress2;
			}
			set
			{
				if ((this._BillToAddress2 != value))
				{
					this._BillToAddress2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToCity", DbType="NVarChar(40)")]
		public string BillToCity
		{
			get
			{
				return this._BillToCity;
			}
			set
			{
				if ((this._BillToCity != value))
				{
					this._BillToCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToState", DbType="NVarChar(40)")]
		public string BillToState
		{
			get
			{
				return this._BillToState;
			}
			set
			{
				if ((this._BillToState != value))
				{
					this._BillToState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToPostalCode", DbType="NVarChar(15)")]
		public string BillToPostalCode
		{
			get
			{
				return this._BillToPostalCode;
			}
			set
			{
				if ((this._BillToPostalCode != value))
				{
					this._BillToPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToCountry", DbType="NVarChar(2)")]
		public string BillToCountry
		{
			get
			{
				return this._BillToCountry;
			}
			set
			{
				if ((this._BillToCountry != value))
				{
					this._BillToCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToPhone", DbType="NVarChar(40)")]
		public string BillToPhone
		{
			get
			{
				return this._BillToPhone;
			}
			set
			{
				if ((this._BillToPhone != value))
				{
					this._BillToPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAttention", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ShipToAttention
		{
			get
			{
				return this._ShipToAttention;
			}
			set
			{
				if ((this._ShipToAttention != value))
				{
					this._ShipToAttention = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddress1", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ShipToAddress1
		{
			get
			{
				return this._ShipToAddress1;
			}
			set
			{
				if ((this._ShipToAddress1 != value))
				{
					this._ShipToAddress1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddress2", DbType="NVarChar(40)")]
		public string ShipToAddress2
		{
			get
			{
				return this._ShipToAddress2;
			}
			set
			{
				if ((this._ShipToAddress2 != value))
				{
					this._ShipToAddress2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToCity", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ShipToCity
		{
			get
			{
				return this._ShipToCity;
			}
			set
			{
				if ((this._ShipToCity != value))
				{
					this._ShipToCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToState", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ShipToState
		{
			get
			{
				return this._ShipToState;
			}
			set
			{
				if ((this._ShipToState != value))
				{
					this._ShipToState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToPostalCode", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string ShipToPostalCode
		{
			get
			{
				return this._ShipToPostalCode;
			}
			set
			{
				if ((this._ShipToPostalCode != value))
				{
					this._ShipToPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToCountry", DbType="NVarChar(2)")]
		public string ShipToCountry
		{
			get
			{
				return this._ShipToCountry;
			}
			set
			{
				if ((this._ShipToCountry != value))
				{
					this._ShipToCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToPhone", DbType="NVarChar(50)")]
		public string ShipToPhone
		{
			get
			{
				return this._ShipToPhone;
			}
			set
			{
				if ((this._ShipToPhone != value))
				{
					this._ShipToPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LifeTimeRanking", DbType="NVarChar(2000)")]
		public string LifeTimeRanking
		{
			get
			{
				return this._LifeTimeRanking;
			}
			set
			{
				if ((this._LifeTimeRanking != value))
				{
					this._LifeTimeRanking = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
