//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountSponsorsAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "AccountSponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountSponsor), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountSponsorsSponsorID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "AccountSponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountSponsor), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountTitleOverridesAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "AccountTitleOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitleOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountTitlesAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "AccountTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitle), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountTitlesOverriddenAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "AccountTitlesOverridden", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitlesOverridden), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_AccountSponsors_AccountSponsorTypes", "AccountSponsorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountSponsorType), "AccountSponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountSponsor), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerBonusTypes", "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerBonusValues", "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusDetailsDownlineID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "BonusDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusDetailsSponsorID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "BonusDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusValuesAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationOverridesAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "CalculationOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationsAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "Calculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Calculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimeAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "CalculationsRealTime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationsRealTime), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCheckHoldsAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "CheckHold", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CheckHold), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusDetailsAccountSponsorTypeID", "AccountSponsorType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountSponsorType), "BonusDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusDetailsBonusTypeBonusTypes", "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), "BonusDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_BonusRequirements_BonusTypes", "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), "BonusRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusRequirement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationOverridesCalculationTypes", "CalculationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationType), "CalculationOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_CalculationsOverriden_Calculations", "Calculation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Calculation), "CalculationsOverridden", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationsOverridden), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "CalculationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationType), "Calculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Calculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimeCalculationTypeID", "CalculationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationType), "CalculationsRealTime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationsRealTime), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerCurrencyTypes", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerDisbursementID", "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Disbursement), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_Accounts_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementProfilesAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "DisbursementProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfile), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementsAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Disbursement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkGarnishmentsAccounts", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "Garnishment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Garnishment), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkChecksAddressID", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Address), "Check", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Check), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_EFTDetails_BankAccountTypes", "BankAccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.BankAccountType), "EFTDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.EFTDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusDetailsCorpCurrencyTypeID", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "BonusDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusDetailsCurrencyTypeCurrencyTypes", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "BonusDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusRequirementsCountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), "BonusRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusRequirement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusRequirementsCurrencyTypeID", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "BonusRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusRequirement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_BonusTypes_EarningsTypes", "EarningsType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.EarningsType), "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_EnrolleeBonusRequirements_BonusTypes", "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), "EnrolleeBonusRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.EnrolleeBonusRequirement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_BonusValues_CurrencyTypes", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusValuesCorpCurrencyTypeID", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusValuesCountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_Checks_CheckStatuses", "CheckStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CheckStatus), "Check", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Check), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkChecksDisbursementDetailID", "DisbursementDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementDetail), "Check", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Check), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fk_CurrencyCurrencyID_CountriesCurrencyID", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_EnrolleeBonusRequirements_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), "EnrolleeBonusRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.EnrolleeBonusRequirement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementFeesCountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), "DisbursementFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementFee), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementMinimumsCountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), "DisbursementMinimum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementMinimum), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementTypeCountriesCountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Country), "DisbursementTypeCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementTypeCountry), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_CurrencyExchanges_CurrencyTypes", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "CurrencyExchanx", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyExchanx), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_CurrencyExchanges_CurrencyTypes1", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "CurrencyExchanx", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyExchanx), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_CurrencyTypes", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "DisbursementFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementFee), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementMinimums_CurrencyTypes", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "DisbursementMinimum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementMinimum), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementsCurrencyTypeID", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Disbursement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementAttributes_DisbursementTypes", "DisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementType), "DisbursementAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementAttribute), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementAttribute), "DisbursementProfileAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfileAttribute), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementDetails_DisbursementProfiles", "DisbursementProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfile), "DisbursementDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementDetails_DisbursementTypes", "DisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementType), "DisbursementDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementDetailsDisbursementID", "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Disbursement), "DisbursementDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementDetailssDisbursementStatusID", "DisbursementStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementStatus), "DisbursementDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFeeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementFeeType), "DisbursementFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementFee), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkDisbursementMinimumsDisbursementTypes", "DisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementType), "DisbursementMinimum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementMinimum), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfile), "DisbursementProfileAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfileAttribute), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementProfilesDisbursementTypeID", "DisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementType), "DisbursementProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfile), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementsDisbursementProfileID", "DisbursementProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfile), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Disbursement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementsDisbursementStatusID", "DisbursementStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementStatus), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Disbursement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementType), "DisbursementTypeCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementTypeCountry), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_EFTBatches_EFTFiles", "EFTFile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.EFTFile), "EFTBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.EFTBatch), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_EFTs_EFTStatusTypes", "EFTStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.EFTStatus), "EFT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.EFT), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkGarnishmentsGarnishmentCalculationTypes", "GarnishmentCalculationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.GarnishmentCalculationType), "Garnishment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Garnishment), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkGarnishmentsGarnishmentTypes", "GarnishmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.GarnishmentType), "Garnishment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Garnishment), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryOrigins", "LedgerEntryOrigin", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.LedgerEntryOrigin), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryReasons", "LedgerEntryReason", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.LedgerEntryReason), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryTypes", "LedgerEntryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.LedgerEntryType), "AccountLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkOrderCalculationsAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "OrderCalculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.OrderCalculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkOrderItemCalculationsAccounts", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "OrderItemCalculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.OrderItemCalculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkStatusOverridesOverrideReasons", "OverrideReason", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.OverrideReason), "AccountTitleOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitleOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountTitlesPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "AccountTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitle), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountTitlesOverriddenPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "AccountTitlesOverridden", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitlesOverridden), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusDetailsPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "BonusDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusTypesPlanID", "Plan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Plan), "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkBonusValuesPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationOverridesOverrideReasons", "OverrideReason", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.OverrideReason), "CalculationOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationOverridesOverrideTypes", "OverrideType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.OverrideType), "CalculationOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationOverridesPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "CalculationOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationsPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "Calculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Calculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationsOverriddenPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "CalculationsOverridden", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationsOverridden), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimePeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "CalculationsRealTime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationsRealTime), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_OrderCalculations_CalculationTypes", "CalculationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationType), "OrderCalculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.OrderCalculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PeriodCalculationsCalculationTypes", "CalculationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationType), "PeriodCalculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PeriodCalculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkOrderItemCalculationsCalculationTypes", "CalculationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CalculationType), "OrderItemCalculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.OrderItemCalculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_CheckHolds_CheckHoldReasons", "OverrideReason", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.OverrideReason), "CheckHold", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.CheckHold), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_DisbursementProfiles", "DisbursementProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfile), "PayCardBatchDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatchDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PayCards_DisbursementProfiles", "DisbursementProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementProfile), "PayCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCard), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkDisbursementsPeriodID", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Disbursement), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_OverrideReasons_ReasonSourceID", "OverrideReasonSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.OverrideReasonSource), "OverrideReason", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.OverrideReason), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardErrorCode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardErrorCode), "PayCardBatchDetailErrorCode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatchDetailErrorCode), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetailStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatchDetailStatus), "PayCardBatchDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatchDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_PayCardBatches", "PayCardBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatch), "PayCardBatchDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatchDetail), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PayCardBatches_PayCardBatchStatus", "PayCardBatchStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatchStatus), "PayCardBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardBatch), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PayCardStatus", "PayCardStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCardStatus), "PayCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PayCard), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_PeriodCalculationsPeriods", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "PeriodCalculation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.PeriodCalculation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_Periods_Plan", "Plan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Plan), "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkProductCreditLedgerAccountID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "ProductCreditLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.ProductCreditLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_BonusTypes", "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusType), "ProductCreditLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.ProductCreditLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_BonusValues", "BonusValue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.BonusValue), "ProductCreditLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.ProductCreditLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_CurrencyTypes", "CurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.CurrencyType), "ProductCreditLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.ProductCreditLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryOrigins", "LedgerEntryOrigin", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.LedgerEntryOrigin), "ProductCreditLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.ProductCreditLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryReasons", "LedgerEntryReason", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.LedgerEntryReason), "ProductCreditLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.ProductCreditLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryTypes", "LedgerEntryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.LedgerEntryType), "ProductCreditLedger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.ProductCreditLedger), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkTreeDownlineID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "Tree", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Tree), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkTreeSponsorID", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Account), "Tree", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.Tree), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkAccountTitleOverridesTitleTypes", "TitleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.TitleType), "AccountTitleOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitleOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fkStatusOverridesStatusTypes", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Title), "AccountTitleOverride", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitleOverride), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_AccountTitles_TitleTypes", "TitleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.TitleType), "AccountTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitle), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "fk_StatusTypeStatusTypeID_AccountStatusStatusID", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Title), "AccountTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitle), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_Titles", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Title), "AccountTitlesOverridden", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitlesOverridden), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_Titles1", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.Title), "AccountTitlesOverridden", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitlesOverridden), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_TitleTypes", "TitleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.TitleType), "AccountTitlesOverridden", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.AccountTitlesOverridden), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventApplication), "SystemEventApplicaitonStep", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventApplicaitonStep), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkSystemEventLogSystemEventApplications", "SystemEventApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventApplication), "SystemEventLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventLog), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkSystemEventSystemEventApplications", "SystemEventApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventApplication), "SystemEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEvent), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkSystemEventLogSystemEvent", "SystemEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEvent), "SystemEventLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventLog), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FkSystemEventLogTypes", "SystemEventLogType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventLogType), "SystemEventLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEventLog), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssueType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.TreeValidationIssueType), "TreeValidationIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.TreeValidationIssue), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_TreeValidations_TreeValidationResultTypes", "TreeValidationResultType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.TreeValidationResultType), "TreeValidation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.TreeValidation), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_DisbursementTypes", "DisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementType), "DisbursementFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.DisbursementFee), true)]
[assembly: EdmRelationshipAttribute("NetStepsCommissionsDB", "FK_SystemEvents_Periods", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetstepsDataAccess.DataEntities.Commissions.Period), "SystemEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetstepsDataAccess.DataEntities.Commissions.SystemEvent), true)]

#endregion

namespace NetstepsDataAccess.DataEntities.Commissions
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NetStepsCommissionsDBContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NetStepsCommissionsDBContainer object using the connection string found in the 'NetStepsCommissionsDBContainer' section of the application configuration file.
        /// </summary>
        public NetStepsCommissionsDBContainer() : base("name=NetStepsCommissionsDBContainer", "NetStepsCommissionsDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NetStepsCommissionsDBContainer object.
        /// </summary>
        public NetStepsCommissionsDBContainer(string connectionString) : base(connectionString, "NetStepsCommissionsDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NetStepsCommissionsDBContainer object.
        /// </summary>
        public NetStepsCommissionsDBContainer(EntityConnection connection) : base(connection, "NetStepsCommissionsDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountLedger> AccountLedgers
        {
            get
            {
                if ((_AccountLedgers == null))
                {
                    _AccountLedgers = base.CreateObjectSet<AccountLedger>("AccountLedgers");
                }
                return _AccountLedgers;
            }
        }
        private ObjectSet<AccountLedger> _AccountLedgers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountSponsor> AccountSponsors
        {
            get
            {
                if ((_AccountSponsors == null))
                {
                    _AccountSponsors = base.CreateObjectSet<AccountSponsor>("AccountSponsors");
                }
                return _AccountSponsors;
            }
        }
        private ObjectSet<AccountSponsor> _AccountSponsors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountSponsorType> AccountSponsorTypes
        {
            get
            {
                if ((_AccountSponsorTypes == null))
                {
                    _AccountSponsorTypes = base.CreateObjectSet<AccountSponsorType>("AccountSponsorTypes");
                }
                return _AccountSponsorTypes;
            }
        }
        private ObjectSet<AccountSponsorType> _AccountSponsorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountStatusType> AccountStatusTypes
        {
            get
            {
                if ((_AccountStatusTypes == null))
                {
                    _AccountStatusTypes = base.CreateObjectSet<AccountStatusType>("AccountStatusTypes");
                }
                return _AccountStatusTypes;
            }
        }
        private ObjectSet<AccountStatusType> _AccountStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountTitleOverride> AccountTitleOverrides
        {
            get
            {
                if ((_AccountTitleOverrides == null))
                {
                    _AccountTitleOverrides = base.CreateObjectSet<AccountTitleOverride>("AccountTitleOverrides");
                }
                return _AccountTitleOverrides;
            }
        }
        private ObjectSet<AccountTitleOverride> _AccountTitleOverrides;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountTitleOverridesAudit> AccountTitleOverridesAudits
        {
            get
            {
                if ((_AccountTitleOverridesAudits == null))
                {
                    _AccountTitleOverridesAudits = base.CreateObjectSet<AccountTitleOverridesAudit>("AccountTitleOverridesAudits");
                }
                return _AccountTitleOverridesAudits;
            }
        }
        private ObjectSet<AccountTitleOverridesAudit> _AccountTitleOverridesAudits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountTitle> AccountTitles
        {
            get
            {
                if ((_AccountTitles == null))
                {
                    _AccountTitles = base.CreateObjectSet<AccountTitle>("AccountTitles");
                }
                return _AccountTitles;
            }
        }
        private ObjectSet<AccountTitle> _AccountTitles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountTitlesOverridden> AccountTitlesOverriddens
        {
            get
            {
                if ((_AccountTitlesOverriddens == null))
                {
                    _AccountTitlesOverriddens = base.CreateObjectSet<AccountTitlesOverridden>("AccountTitlesOverriddens");
                }
                return _AccountTitlesOverriddens;
            }
        }
        private ObjectSet<AccountTitlesOverridden> _AccountTitlesOverriddens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankAccountType> BankAccountTypes
        {
            get
            {
                if ((_BankAccountTypes == null))
                {
                    _BankAccountTypes = base.CreateObjectSet<BankAccountType>("BankAccountTypes");
                }
                return _BankAccountTypes;
            }
        }
        private ObjectSet<BankAccountType> _BankAccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BonusDetail> BonusDetails
        {
            get
            {
                if ((_BonusDetails == null))
                {
                    _BonusDetails = base.CreateObjectSet<BonusDetail>("BonusDetails");
                }
                return _BonusDetails;
            }
        }
        private ObjectSet<BonusDetail> _BonusDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BonusRequirement> BonusRequirements
        {
            get
            {
                if ((_BonusRequirements == null))
                {
                    _BonusRequirements = base.CreateObjectSet<BonusRequirement>("BonusRequirements");
                }
                return _BonusRequirements;
            }
        }
        private ObjectSet<BonusRequirement> _BonusRequirements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BonusType> BonusTypes
        {
            get
            {
                if ((_BonusTypes == null))
                {
                    _BonusTypes = base.CreateObjectSet<BonusType>("BonusTypes");
                }
                return _BonusTypes;
            }
        }
        private ObjectSet<BonusType> _BonusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BonusValue> BonusValues
        {
            get
            {
                if ((_BonusValues == null))
                {
                    _BonusValues = base.CreateObjectSet<BonusValue>("BonusValues");
                }
                return _BonusValues;
            }
        }
        private ObjectSet<BonusValue> _BonusValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationOverride> CalculationOverrides
        {
            get
            {
                if ((_CalculationOverrides == null))
                {
                    _CalculationOverrides = base.CreateObjectSet<CalculationOverride>("CalculationOverrides");
                }
                return _CalculationOverrides;
            }
        }
        private ObjectSet<CalculationOverride> _CalculationOverrides;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationOverridesAudit> CalculationOverridesAudits
        {
            get
            {
                if ((_CalculationOverridesAudits == null))
                {
                    _CalculationOverridesAudits = base.CreateObjectSet<CalculationOverridesAudit>("CalculationOverridesAudits");
                }
                return _CalculationOverridesAudits;
            }
        }
        private ObjectSet<CalculationOverridesAudit> _CalculationOverridesAudits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calculation> Calculations
        {
            get
            {
                if ((_Calculations == null))
                {
                    _Calculations = base.CreateObjectSet<Calculation>("Calculations");
                }
                return _Calculations;
            }
        }
        private ObjectSet<Calculation> _Calculations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationsOverridden> CalculationsOverriddens
        {
            get
            {
                if ((_CalculationsOverriddens == null))
                {
                    _CalculationsOverriddens = base.CreateObjectSet<CalculationsOverridden>("CalculationsOverriddens");
                }
                return _CalculationsOverriddens;
            }
        }
        private ObjectSet<CalculationsOverridden> _CalculationsOverriddens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationsRealTime> CalculationsRealTimes
        {
            get
            {
                if ((_CalculationsRealTimes == null))
                {
                    _CalculationsRealTimes = base.CreateObjectSet<CalculationsRealTime>("CalculationsRealTimes");
                }
                return _CalculationsRealTimes;
            }
        }
        private ObjectSet<CalculationsRealTime> _CalculationsRealTimes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationType> CalculationTypes
        {
            get
            {
                if ((_CalculationTypes == null))
                {
                    _CalculationTypes = base.CreateObjectSet<CalculationType>("CalculationTypes");
                }
                return _CalculationTypes;
            }
        }
        private ObjectSet<CalculationType> _CalculationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckHoldReason> CheckHoldReasons
        {
            get
            {
                if ((_CheckHoldReasons == null))
                {
                    _CheckHoldReasons = base.CreateObjectSet<CheckHoldReason>("CheckHoldReasons");
                }
                return _CheckHoldReasons;
            }
        }
        private ObjectSet<CheckHoldReason> _CheckHoldReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckHold> CheckHolds
        {
            get
            {
                if ((_CheckHolds == null))
                {
                    _CheckHolds = base.CreateObjectSet<CheckHold>("CheckHolds");
                }
                return _CheckHolds;
            }
        }
        private ObjectSet<CheckHold> _CheckHolds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckHoldsAudit> CheckHoldsAudits
        {
            get
            {
                if ((_CheckHoldsAudits == null))
                {
                    _CheckHoldsAudits = base.CreateObjectSet<CheckHoldsAudit>("CheckHoldsAudits");
                }
                return _CheckHoldsAudits;
            }
        }
        private ObjectSet<CheckHoldsAudit> _CheckHoldsAudits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Check> Checks
        {
            get
            {
                if ((_Checks == null))
                {
                    _Checks = base.CreateObjectSet<Check>("Checks");
                }
                return _Checks;
            }
        }
        private ObjectSet<Check> _Checks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckStatus> CheckStatuses
        {
            get
            {
                if ((_CheckStatuses == null))
                {
                    _CheckStatuses = base.CreateObjectSet<CheckStatus>("CheckStatuses");
                }
                return _CheckStatuses;
            }
        }
        private ObjectSet<CheckStatus> _CheckStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyExchanx> CurrencyExchanges
        {
            get
            {
                if ((_CurrencyExchanges == null))
                {
                    _CurrencyExchanges = base.CreateObjectSet<CurrencyExchanx>("CurrencyExchanges");
                }
                return _CurrencyExchanges;
            }
        }
        private ObjectSet<CurrencyExchanx> _CurrencyExchanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyType> CurrencyTypes
        {
            get
            {
                if ((_CurrencyTypes == null))
                {
                    _CurrencyTypes = base.CreateObjectSet<CurrencyType>("CurrencyTypes");
                }
                return _CurrencyTypes;
            }
        }
        private ObjectSet<CurrencyType> _CurrencyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Diagnostic> Diagnostics
        {
            get
            {
                if ((_Diagnostics == null))
                {
                    _Diagnostics = base.CreateObjectSet<Diagnostic>("Diagnostics");
                }
                return _Diagnostics;
            }
        }
        private ObjectSet<Diagnostic> _Diagnostics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementAttribute> DisbursementAttributes
        {
            get
            {
                if ((_DisbursementAttributes == null))
                {
                    _DisbursementAttributes = base.CreateObjectSet<DisbursementAttribute>("DisbursementAttributes");
                }
                return _DisbursementAttributes;
            }
        }
        private ObjectSet<DisbursementAttribute> _DisbursementAttributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementDetail> DisbursementDetails
        {
            get
            {
                if ((_DisbursementDetails == null))
                {
                    _DisbursementDetails = base.CreateObjectSet<DisbursementDetail>("DisbursementDetails");
                }
                return _DisbursementDetails;
            }
        }
        private ObjectSet<DisbursementDetail> _DisbursementDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementFee> DisbursementFees
        {
            get
            {
                if ((_DisbursementFees == null))
                {
                    _DisbursementFees = base.CreateObjectSet<DisbursementFee>("DisbursementFees");
                }
                return _DisbursementFees;
            }
        }
        private ObjectSet<DisbursementFee> _DisbursementFees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementFeeType> DisbursementFeeTypes
        {
            get
            {
                if ((_DisbursementFeeTypes == null))
                {
                    _DisbursementFeeTypes = base.CreateObjectSet<DisbursementFeeType>("DisbursementFeeTypes");
                }
                return _DisbursementFeeTypes;
            }
        }
        private ObjectSet<DisbursementFeeType> _DisbursementFeeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementMinimum> DisbursementMinimums
        {
            get
            {
                if ((_DisbursementMinimums == null))
                {
                    _DisbursementMinimums = base.CreateObjectSet<DisbursementMinimum>("DisbursementMinimums");
                }
                return _DisbursementMinimums;
            }
        }
        private ObjectSet<DisbursementMinimum> _DisbursementMinimums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementProfileAttribute> DisbursementProfileAttributes
        {
            get
            {
                if ((_DisbursementProfileAttributes == null))
                {
                    _DisbursementProfileAttributes = base.CreateObjectSet<DisbursementProfileAttribute>("DisbursementProfileAttributes");
                }
                return _DisbursementProfileAttributes;
            }
        }
        private ObjectSet<DisbursementProfileAttribute> _DisbursementProfileAttributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementProfileAttributesAudit> DisbursementProfileAttributesAudits
        {
            get
            {
                if ((_DisbursementProfileAttributesAudits == null))
                {
                    _DisbursementProfileAttributesAudits = base.CreateObjectSet<DisbursementProfileAttributesAudit>("DisbursementProfileAttributesAudits");
                }
                return _DisbursementProfileAttributesAudits;
            }
        }
        private ObjectSet<DisbursementProfileAttributesAudit> _DisbursementProfileAttributesAudits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementProfile> DisbursementProfiles
        {
            get
            {
                if ((_DisbursementProfiles == null))
                {
                    _DisbursementProfiles = base.CreateObjectSet<DisbursementProfile>("DisbursementProfiles");
                }
                return _DisbursementProfiles;
            }
        }
        private ObjectSet<DisbursementProfile> _DisbursementProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementProfilesAudit> DisbursementProfilesAudits
        {
            get
            {
                if ((_DisbursementProfilesAudits == null))
                {
                    _DisbursementProfilesAudits = base.CreateObjectSet<DisbursementProfilesAudit>("DisbursementProfilesAudits");
                }
                return _DisbursementProfilesAudits;
            }
        }
        private ObjectSet<DisbursementProfilesAudit> _DisbursementProfilesAudits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Disbursement> Disbursements
        {
            get
            {
                if ((_Disbursements == null))
                {
                    _Disbursements = base.CreateObjectSet<Disbursement>("Disbursements");
                }
                return _Disbursements;
            }
        }
        private ObjectSet<Disbursement> _Disbursements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementStatus> DisbursementStatuses
        {
            get
            {
                if ((_DisbursementStatuses == null))
                {
                    _DisbursementStatuses = base.CreateObjectSet<DisbursementStatus>("DisbursementStatuses");
                }
                return _DisbursementStatuses;
            }
        }
        private ObjectSet<DisbursementStatus> _DisbursementStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementTypeCountry> DisbursementTypeCountries
        {
            get
            {
                if ((_DisbursementTypeCountries == null))
                {
                    _DisbursementTypeCountries = base.CreateObjectSet<DisbursementTypeCountry>("DisbursementTypeCountries");
                }
                return _DisbursementTypeCountries;
            }
        }
        private ObjectSet<DisbursementTypeCountry> _DisbursementTypeCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementType> DisbursementTypes
        {
            get
            {
                if ((_DisbursementTypes == null))
                {
                    _DisbursementTypes = base.CreateObjectSet<DisbursementType>("DisbursementTypes");
                }
                return _DisbursementTypes;
            }
        }
        private ObjectSet<DisbursementType> _DisbursementTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EarningsType> EarningsTypes
        {
            get
            {
                if ((_EarningsTypes == null))
                {
                    _EarningsTypes = base.CreateObjectSet<EarningsType>("EarningsTypes");
                }
                return _EarningsTypes;
            }
        }
        private ObjectSet<EarningsType> _EarningsTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EFTBatch> EFTBatches
        {
            get
            {
                if ((_EFTBatches == null))
                {
                    _EFTBatches = base.CreateObjectSet<EFTBatch>("EFTBatches");
                }
                return _EFTBatches;
            }
        }
        private ObjectSet<EFTBatch> _EFTBatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EFTDetail> EFTDetails
        {
            get
            {
                if ((_EFTDetails == null))
                {
                    _EFTDetails = base.CreateObjectSet<EFTDetail>("EFTDetails");
                }
                return _EFTDetails;
            }
        }
        private ObjectSet<EFTDetail> _EFTDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EFTFile> EFTFiles
        {
            get
            {
                if ((_EFTFiles == null))
                {
                    _EFTFiles = base.CreateObjectSet<EFTFile>("EFTFiles");
                }
                return _EFTFiles;
            }
        }
        private ObjectSet<EFTFile> _EFTFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EFT> EFTs
        {
            get
            {
                if ((_EFTs == null))
                {
                    _EFTs = base.CreateObjectSet<EFT>("EFTs");
                }
                return _EFTs;
            }
        }
        private ObjectSet<EFT> _EFTs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EFTStatus> EFTStatuses
        {
            get
            {
                if ((_EFTStatuses == null))
                {
                    _EFTStatuses = base.CreateObjectSet<EFTStatus>("EFTStatuses");
                }
                return _EFTStatuses;
            }
        }
        private ObjectSet<EFTStatus> _EFTStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnrolleeBonusRequirement> EnrolleeBonusRequirements
        {
            get
            {
                if ((_EnrolleeBonusRequirements == null))
                {
                    _EnrolleeBonusRequirements = base.CreateObjectSet<EnrolleeBonusRequirement>("EnrolleeBonusRequirements");
                }
                return _EnrolleeBonusRequirements;
            }
        }
        private ObjectSet<EnrolleeBonusRequirement> _EnrolleeBonusRequirements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GarnishmentCalculationType> GarnishmentCalculationTypes
        {
            get
            {
                if ((_GarnishmentCalculationTypes == null))
                {
                    _GarnishmentCalculationTypes = base.CreateObjectSet<GarnishmentCalculationType>("GarnishmentCalculationTypes");
                }
                return _GarnishmentCalculationTypes;
            }
        }
        private ObjectSet<GarnishmentCalculationType> _GarnishmentCalculationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Garnishment> Garnishments
        {
            get
            {
                if ((_Garnishments == null))
                {
                    _Garnishments = base.CreateObjectSet<Garnishment>("Garnishments");
                }
                return _Garnishments;
            }
        }
        private ObjectSet<Garnishment> _Garnishments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GarnishmentType> GarnishmentTypes
        {
            get
            {
                if ((_GarnishmentTypes == null))
                {
                    _GarnishmentTypes = base.CreateObjectSet<GarnishmentType>("GarnishmentTypes");
                }
                return _GarnishmentTypes;
            }
        }
        private ObjectSet<GarnishmentType> _GarnishmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeneralExciseTax> GeneralExciseTaxes
        {
            get
            {
                if ((_GeneralExciseTaxes == null))
                {
                    _GeneralExciseTaxes = base.CreateObjectSet<GeneralExciseTax>("GeneralExciseTaxes");
                }
                return _GeneralExciseTaxes;
            }
        }
        private ObjectSet<GeneralExciseTax> _GeneralExciseTaxes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HyperWalletAccountStatus> HyperWalletAccountStatuses
        {
            get
            {
                if ((_HyperWalletAccountStatuses == null))
                {
                    _HyperWalletAccountStatuses = base.CreateObjectSet<HyperWalletAccountStatus>("HyperWalletAccountStatuses");
                }
                return _HyperWalletAccountStatuses;
            }
        }
        private ObjectSet<HyperWalletAccountStatus> _HyperWalletAccountStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HyperWalletAccountType> HyperWalletAccountTypes
        {
            get
            {
                if ((_HyperWalletAccountTypes == null))
                {
                    _HyperWalletAccountTypes = base.CreateObjectSet<HyperWalletAccountType>("HyperWalletAccountTypes");
                }
                return _HyperWalletAccountTypes;
            }
        }
        private ObjectSet<HyperWalletAccountType> _HyperWalletAccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HyperWalletBatchDetail> HyperWalletBatchDetails
        {
            get
            {
                if ((_HyperWalletBatchDetails == null))
                {
                    _HyperWalletBatchDetails = base.CreateObjectSet<HyperWalletBatchDetail>("HyperWalletBatchDetails");
                }
                return _HyperWalletBatchDetails;
            }
        }
        private ObjectSet<HyperWalletBatchDetail> _HyperWalletBatchDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HyperWalletBatch> HyperWalletBatches
        {
            get
            {
                if ((_HyperWalletBatches == null))
                {
                    _HyperWalletBatches = base.CreateObjectSet<HyperWalletBatch>("HyperWalletBatches");
                }
                return _HyperWalletBatches;
            }
        }
        private ObjectSet<HyperWalletBatch> _HyperWalletBatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HyperWalletBatchStatus> HyperWalletBatchStatuses
        {
            get
            {
                if ((_HyperWalletBatchStatuses == null))
                {
                    _HyperWalletBatchStatuses = base.CreateObjectSet<HyperWalletBatchStatus>("HyperWalletBatchStatuses");
                }
                return _HyperWalletBatchStatuses;
            }
        }
        private ObjectSet<HyperWalletBatchStatus> _HyperWalletBatchStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HyperWalletProfile> HyperWalletProfiles
        {
            get
            {
                if ((_HyperWalletProfiles == null))
                {
                    _HyperWalletProfiles = base.CreateObjectSet<HyperWalletProfile>("HyperWalletProfiles");
                }
                return _HyperWalletProfiles;
            }
        }
        private ObjectSet<HyperWalletProfile> _HyperWalletProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HyperWalletResponseCode> HyperWalletResponseCodes
        {
            get
            {
                if ((_HyperWalletResponseCodes == null))
                {
                    _HyperWalletResponseCodes = base.CreateObjectSet<HyperWalletResponseCode>("HyperWalletResponseCodes");
                }
                return _HyperWalletResponseCodes;
            }
        }
        private ObjectSet<HyperWalletResponseCode> _HyperWalletResponseCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LedgerEntryOrigin> LedgerEntryOrigins
        {
            get
            {
                if ((_LedgerEntryOrigins == null))
                {
                    _LedgerEntryOrigins = base.CreateObjectSet<LedgerEntryOrigin>("LedgerEntryOrigins");
                }
                return _LedgerEntryOrigins;
            }
        }
        private ObjectSet<LedgerEntryOrigin> _LedgerEntryOrigins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LedgerEntryReason> LedgerEntryReasons
        {
            get
            {
                if ((_LedgerEntryReasons == null))
                {
                    _LedgerEntryReasons = base.CreateObjectSet<LedgerEntryReason>("LedgerEntryReasons");
                }
                return _LedgerEntryReasons;
            }
        }
        private ObjectSet<LedgerEntryReason> _LedgerEntryReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LedgerEntryType> LedgerEntryTypes
        {
            get
            {
                if ((_LedgerEntryTypes == null))
                {
                    _LedgerEntryTypes = base.CreateObjectSet<LedgerEntryType>("LedgerEntryTypes");
                }
                return _LedgerEntryTypes;
            }
        }
        private ObjectSet<LedgerEntryType> _LedgerEntryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderCalculation> OrderCalculations
        {
            get
            {
                if ((_OrderCalculations == null))
                {
                    _OrderCalculations = base.CreateObjectSet<OrderCalculation>("OrderCalculations");
                }
                return _OrderCalculations;
            }
        }
        private ObjectSet<OrderCalculation> _OrderCalculations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderItemCalculation> OrderItemCalculations
        {
            get
            {
                if ((_OrderItemCalculations == null))
                {
                    _OrderItemCalculations = base.CreateObjectSet<OrderItemCalculation>("OrderItemCalculations");
                }
                return _OrderItemCalculations;
            }
        }
        private ObjectSet<OrderItemCalculation> _OrderItemCalculations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrdersToProcess> OrdersToProcesses
        {
            get
            {
                if ((_OrdersToProcesses == null))
                {
                    _OrdersToProcesses = base.CreateObjectSet<OrdersToProcess>("OrdersToProcesses");
                }
                return _OrdersToProcesses;
            }
        }
        private ObjectSet<OrdersToProcess> _OrdersToProcesses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverrideReason> OverrideReasons
        {
            get
            {
                if ((_OverrideReasons == null))
                {
                    _OverrideReasons = base.CreateObjectSet<OverrideReason>("OverrideReasons");
                }
                return _OverrideReasons;
            }
        }
        private ObjectSet<OverrideReason> _OverrideReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverrideReasonSource> OverrideReasonSources
        {
            get
            {
                if ((_OverrideReasonSources == null))
                {
                    _OverrideReasonSources = base.CreateObjectSet<OverrideReasonSource>("OverrideReasonSources");
                }
                return _OverrideReasonSources;
            }
        }
        private ObjectSet<OverrideReasonSource> _OverrideReasonSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverrideType> OverrideTypes
        {
            get
            {
                if ((_OverrideTypes == null))
                {
                    _OverrideTypes = base.CreateObjectSet<OverrideType>("OverrideTypes");
                }
                return _OverrideTypes;
            }
        }
        private ObjectSet<OverrideType> _OverrideTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardBatchDetailErrorCode> PayCardBatchDetailErrorCodes
        {
            get
            {
                if ((_PayCardBatchDetailErrorCodes == null))
                {
                    _PayCardBatchDetailErrorCodes = base.CreateObjectSet<PayCardBatchDetailErrorCode>("PayCardBatchDetailErrorCodes");
                }
                return _PayCardBatchDetailErrorCodes;
            }
        }
        private ObjectSet<PayCardBatchDetailErrorCode> _PayCardBatchDetailErrorCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardBatchDetail> PayCardBatchDetails
        {
            get
            {
                if ((_PayCardBatchDetails == null))
                {
                    _PayCardBatchDetails = base.CreateObjectSet<PayCardBatchDetail>("PayCardBatchDetails");
                }
                return _PayCardBatchDetails;
            }
        }
        private ObjectSet<PayCardBatchDetail> _PayCardBatchDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardBatchDetailStatus> PayCardBatchDetailStatuses
        {
            get
            {
                if ((_PayCardBatchDetailStatuses == null))
                {
                    _PayCardBatchDetailStatuses = base.CreateObjectSet<PayCardBatchDetailStatus>("PayCardBatchDetailStatuses");
                }
                return _PayCardBatchDetailStatuses;
            }
        }
        private ObjectSet<PayCardBatchDetailStatus> _PayCardBatchDetailStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardBatch> PayCardBatches
        {
            get
            {
                if ((_PayCardBatches == null))
                {
                    _PayCardBatches = base.CreateObjectSet<PayCardBatch>("PayCardBatches");
                }
                return _PayCardBatches;
            }
        }
        private ObjectSet<PayCardBatch> _PayCardBatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardBatchStatus> PayCardBatchStatuses
        {
            get
            {
                if ((_PayCardBatchStatuses == null))
                {
                    _PayCardBatchStatuses = base.CreateObjectSet<PayCardBatchStatus>("PayCardBatchStatuses");
                }
                return _PayCardBatchStatuses;
            }
        }
        private ObjectSet<PayCardBatchStatus> _PayCardBatchStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardEnrollmentStatus> PayCardEnrollmentStatuses
        {
            get
            {
                if ((_PayCardEnrollmentStatuses == null))
                {
                    _PayCardEnrollmentStatuses = base.CreateObjectSet<PayCardEnrollmentStatus>("PayCardEnrollmentStatuses");
                }
                return _PayCardEnrollmentStatuses;
            }
        }
        private ObjectSet<PayCardEnrollmentStatus> _PayCardEnrollmentStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardErrorCode> PayCardErrorCodes
        {
            get
            {
                if ((_PayCardErrorCodes == null))
                {
                    _PayCardErrorCodes = base.CreateObjectSet<PayCardErrorCode>("PayCardErrorCodes");
                }
                return _PayCardErrorCodes;
            }
        }
        private ObjectSet<PayCardErrorCode> _PayCardErrorCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardFileSequence> PayCardFileSequences
        {
            get
            {
                if ((_PayCardFileSequences == null))
                {
                    _PayCardFileSequences = base.CreateObjectSet<PayCardFileSequence>("PayCardFileSequences");
                }
                return _PayCardFileSequences;
            }
        }
        private ObjectSet<PayCardFileSequence> _PayCardFileSequences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCard> PayCards
        {
            get
            {
                if ((_PayCards == null))
                {
                    _PayCards = base.CreateObjectSet<PayCard>("PayCards");
                }
                return _PayCards;
            }
        }
        private ObjectSet<PayCard> _PayCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayCardStatus> PayCardStatuses
        {
            get
            {
                if ((_PayCardStatuses == null))
                {
                    _PayCardStatuses = base.CreateObjectSet<PayCardStatus>("PayCardStatuses");
                }
                return _PayCardStatuses;
            }
        }
        private ObjectSet<PayCardStatus> _PayCardStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PeriodCalculation> PeriodCalculations
        {
            get
            {
                if ((_PeriodCalculations == null))
                {
                    _PeriodCalculations = base.CreateObjectSet<PeriodCalculation>("PeriodCalculations");
                }
                return _PeriodCalculations;
            }
        }
        private ObjectSet<PeriodCalculation> _PeriodCalculations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Period> Periods
        {
            get
            {
                if ((_Periods == null))
                {
                    _Periods = base.CreateObjectSet<Period>("Periods");
                }
                return _Periods;
            }
        }
        private ObjectSet<Period> _Periods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plan> Plans
        {
            get
            {
                if ((_Plans == null))
                {
                    _Plans = base.CreateObjectSet<Plan>("Plans");
                }
                return _Plans;
            }
        }
        private ObjectSet<Plan> _Plans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                if ((_ProductCreditLedgers == null))
                {
                    _ProductCreditLedgers = base.CreateObjectSet<ProductCreditLedger>("ProductCreditLedgers");
                }
                return _ProductCreditLedgers;
            }
        }
        private ObjectSet<ProductCreditLedger> _ProductCreditLedgers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductPrice> ProductPrices
        {
            get
            {
                if ((_ProductPrices == null))
                {
                    _ProductPrices = base.CreateObjectSet<ProductPrice>("ProductPrices");
                }
                return _ProductPrices;
            }
        }
        private ObjectSet<ProductPrice> _ProductPrices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemConfig> SystemConfigs
        {
            get
            {
                if ((_SystemConfigs == null))
                {
                    _SystemConfigs = base.CreateObjectSet<SystemConfig>("SystemConfigs");
                }
                return _SystemConfigs;
            }
        }
        private ObjectSet<SystemConfig> _SystemConfigs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemEventApplicaitonStep> SystemEventApplicaitonSteps
        {
            get
            {
                if ((_SystemEventApplicaitonSteps == null))
                {
                    _SystemEventApplicaitonSteps = base.CreateObjectSet<SystemEventApplicaitonStep>("SystemEventApplicaitonSteps");
                }
                return _SystemEventApplicaitonSteps;
            }
        }
        private ObjectSet<SystemEventApplicaitonStep> _SystemEventApplicaitonSteps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemEventApplication> SystemEventApplications
        {
            get
            {
                if ((_SystemEventApplications == null))
                {
                    _SystemEventApplications = base.CreateObjectSet<SystemEventApplication>("SystemEventApplications");
                }
                return _SystemEventApplications;
            }
        }
        private ObjectSet<SystemEventApplication> _SystemEventApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemEventLog> SystemEventLogs
        {
            get
            {
                if ((_SystemEventLogs == null))
                {
                    _SystemEventLogs = base.CreateObjectSet<SystemEventLog>("SystemEventLogs");
                }
                return _SystemEventLogs;
            }
        }
        private ObjectSet<SystemEventLog> _SystemEventLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemEventLogType> SystemEventLogTypes
        {
            get
            {
                if ((_SystemEventLogTypes == null))
                {
                    _SystemEventLogTypes = base.CreateObjectSet<SystemEventLogType>("SystemEventLogTypes");
                }
                return _SystemEventLogTypes;
            }
        }
        private ObjectSet<SystemEventLogType> _SystemEventLogTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemEvent> SystemEvents
        {
            get
            {
                if ((_SystemEvents == null))
                {
                    _SystemEvents = base.CreateObjectSet<SystemEvent>("SystemEvents");
                }
                return _SystemEvents;
            }
        }
        private ObjectSet<SystemEvent> _SystemEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TitleType> TitleTypes
        {
            get
            {
                if ((_TitleTypes == null))
                {
                    _TitleTypes = base.CreateObjectSet<TitleType>("TitleTypes");
                }
                return _TitleTypes;
            }
        }
        private ObjectSet<TitleType> _TitleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tree> Trees
        {
            get
            {
                if ((_Trees == null))
                {
                    _Trees = base.CreateObjectSet<Tree>("Trees");
                }
                return _Trees;
            }
        }
        private ObjectSet<Tree> _Trees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreeType> TreeTypes
        {
            get
            {
                if ((_TreeTypes == null))
                {
                    _TreeTypes = base.CreateObjectSet<TreeType>("TreeTypes");
                }
                return _TreeTypes;
            }
        }
        private ObjectSet<TreeType> _TreeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreeValidationIssue> TreeValidationIssues
        {
            get
            {
                if ((_TreeValidationIssues == null))
                {
                    _TreeValidationIssues = base.CreateObjectSet<TreeValidationIssue>("TreeValidationIssues");
                }
                return _TreeValidationIssues;
            }
        }
        private ObjectSet<TreeValidationIssue> _TreeValidationIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreeValidationIssueType> TreeValidationIssueTypes
        {
            get
            {
                if ((_TreeValidationIssueTypes == null))
                {
                    _TreeValidationIssueTypes = base.CreateObjectSet<TreeValidationIssueType>("TreeValidationIssueTypes");
                }
                return _TreeValidationIssueTypes;
            }
        }
        private ObjectSet<TreeValidationIssueType> _TreeValidationIssueTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreeValidationResultType> TreeValidationResultTypes
        {
            get
            {
                if ((_TreeValidationResultTypes == null))
                {
                    _TreeValidationResultTypes = base.CreateObjectSet<TreeValidationResultType>("TreeValidationResultTypes");
                }
                return _TreeValidationResultTypes;
            }
        }
        private ObjectSet<TreeValidationResultType> _TreeValidationResultTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreeValidation> TreeValidations
        {
            get
            {
                if ((_TreeValidations == null))
                {
                    _TreeValidations = base.CreateObjectSet<TreeValidation>("TreeValidations");
                }
                return _TreeValidations;
            }
        }
        private ObjectSet<TreeValidation> _TreeValidations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UniqueKey> UniqueKeys
        {
            get
            {
                if ((_UniqueKeys == null))
                {
                    _UniqueKeys = base.CreateObjectSet<UniqueKey>("UniqueKeys");
                }
                return _UniqueKeys;
            }
        }
        private ObjectSet<UniqueKey> _UniqueKeys;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountLedgers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountLedgers(AccountLedger accountLedger)
        {
            base.AddObject("AccountLedgers", accountLedger);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountSponsors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountSponsors(AccountSponsor accountSponsor)
        {
            base.AddObject("AccountSponsors", accountSponsor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountSponsorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountSponsorTypes(AccountSponsorType accountSponsorType)
        {
            base.AddObject("AccountSponsorTypes", accountSponsorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountStatusTypes(AccountStatusType accountStatusType)
        {
            base.AddObject("AccountStatusTypes", accountStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTitleOverrides EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTitleOverrides(AccountTitleOverride accountTitleOverride)
        {
            base.AddObject("AccountTitleOverrides", accountTitleOverride);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTitleOverridesAudits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTitleOverridesAudits(AccountTitleOverridesAudit accountTitleOverridesAudit)
        {
            base.AddObject("AccountTitleOverridesAudits", accountTitleOverridesAudit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTitles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTitles(AccountTitle accountTitle)
        {
            base.AddObject("AccountTitles", accountTitle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTitlesOverriddens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTitlesOverriddens(AccountTitlesOverridden accountTitlesOverridden)
        {
            base.AddObject("AccountTitlesOverriddens", accountTitlesOverridden);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankAccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankAccountTypes(BankAccountType bankAccountType)
        {
            base.AddObject("BankAccountTypes", bankAccountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BonusDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBonusDetails(BonusDetail bonusDetail)
        {
            base.AddObject("BonusDetails", bonusDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BonusRequirements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBonusRequirements(BonusRequirement bonusRequirement)
        {
            base.AddObject("BonusRequirements", bonusRequirement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BonusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBonusTypes(BonusType bonusType)
        {
            base.AddObject("BonusTypes", bonusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BonusValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBonusValues(BonusValue bonusValue)
        {
            base.AddObject("BonusValues", bonusValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationOverrides EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationOverrides(CalculationOverride calculationOverride)
        {
            base.AddObject("CalculationOverrides", calculationOverride);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationOverridesAudits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationOverridesAudits(CalculationOverridesAudit calculationOverridesAudit)
        {
            base.AddObject("CalculationOverridesAudits", calculationOverridesAudit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calculations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculations(Calculation calculation)
        {
            base.AddObject("Calculations", calculation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationsOverriddens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationsOverriddens(CalculationsOverridden calculationsOverridden)
        {
            base.AddObject("CalculationsOverriddens", calculationsOverridden);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationsRealTimes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationsRealTimes(CalculationsRealTime calculationsRealTime)
        {
            base.AddObject("CalculationsRealTimes", calculationsRealTime);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationTypes(CalculationType calculationType)
        {
            base.AddObject("CalculationTypes", calculationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CheckHoldReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheckHoldReasons(CheckHoldReason checkHoldReason)
        {
            base.AddObject("CheckHoldReasons", checkHoldReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CheckHolds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheckHolds(CheckHold checkHold)
        {
            base.AddObject("CheckHolds", checkHold);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CheckHoldsAudits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheckHoldsAudits(CheckHoldsAudit checkHoldsAudit)
        {
            base.AddObject("CheckHoldsAudits", checkHoldsAudit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Checks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChecks(Check check)
        {
            base.AddObject("Checks", check);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CheckStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheckStatuses(CheckStatus checkStatus)
        {
            base.AddObject("CheckStatuses", checkStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrencyExchanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencyExchanges(CurrencyExchanx currencyExchanx)
        {
            base.AddObject("CurrencyExchanges", currencyExchanx);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrencyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencyTypes(CurrencyType currencyType)
        {
            base.AddObject("CurrencyTypes", currencyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Diagnostics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiagnostics(Diagnostic diagnostic)
        {
            base.AddObject("Diagnostics", diagnostic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementAttributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementAttributes(DisbursementAttribute disbursementAttribute)
        {
            base.AddObject("DisbursementAttributes", disbursementAttribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementDetails(DisbursementDetail disbursementDetail)
        {
            base.AddObject("DisbursementDetails", disbursementDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementFees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementFees(DisbursementFee disbursementFee)
        {
            base.AddObject("DisbursementFees", disbursementFee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementFeeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementFeeTypes(DisbursementFeeType disbursementFeeType)
        {
            base.AddObject("DisbursementFeeTypes", disbursementFeeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementMinimums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementMinimums(DisbursementMinimum disbursementMinimum)
        {
            base.AddObject("DisbursementMinimums", disbursementMinimum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementProfileAttributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementProfileAttributes(DisbursementProfileAttribute disbursementProfileAttribute)
        {
            base.AddObject("DisbursementProfileAttributes", disbursementProfileAttribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementProfileAttributesAudits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementProfileAttributesAudits(DisbursementProfileAttributesAudit disbursementProfileAttributesAudit)
        {
            base.AddObject("DisbursementProfileAttributesAudits", disbursementProfileAttributesAudit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementProfiles(DisbursementProfile disbursementProfile)
        {
            base.AddObject("DisbursementProfiles", disbursementProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementProfilesAudits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementProfilesAudits(DisbursementProfilesAudit disbursementProfilesAudit)
        {
            base.AddObject("DisbursementProfilesAudits", disbursementProfilesAudit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Disbursements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursements(Disbursement disbursement)
        {
            base.AddObject("Disbursements", disbursement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementStatuses(DisbursementStatus disbursementStatus)
        {
            base.AddObject("DisbursementStatuses", disbursementStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementTypeCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementTypeCountries(DisbursementTypeCountry disbursementTypeCountry)
        {
            base.AddObject("DisbursementTypeCountries", disbursementTypeCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementTypes(DisbursementType disbursementType)
        {
            base.AddObject("DisbursementTypes", disbursementType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EarningsTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEarningsTypes(EarningsType earningsType)
        {
            base.AddObject("EarningsTypes", earningsType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EFTBatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEFTBatches(EFTBatch eFTBatch)
        {
            base.AddObject("EFTBatches", eFTBatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EFTDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEFTDetails(EFTDetail eFTDetail)
        {
            base.AddObject("EFTDetails", eFTDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EFTFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEFTFiles(EFTFile eFTFile)
        {
            base.AddObject("EFTFiles", eFTFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EFTs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEFTs(EFT eFT)
        {
            base.AddObject("EFTs", eFT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EFTStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEFTStatuses(EFTStatus eFTStatus)
        {
            base.AddObject("EFTStatuses", eFTStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EnrolleeBonusRequirements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnrolleeBonusRequirements(EnrolleeBonusRequirement enrolleeBonusRequirement)
        {
            base.AddObject("EnrolleeBonusRequirements", enrolleeBonusRequirement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GarnishmentCalculationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGarnishmentCalculationTypes(GarnishmentCalculationType garnishmentCalculationType)
        {
            base.AddObject("GarnishmentCalculationTypes", garnishmentCalculationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Garnishments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGarnishments(Garnishment garnishment)
        {
            base.AddObject("Garnishments", garnishment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GarnishmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGarnishmentTypes(GarnishmentType garnishmentType)
        {
            base.AddObject("GarnishmentTypes", garnishmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeneralExciseTaxes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeneralExciseTaxes(GeneralExciseTax generalExciseTax)
        {
            base.AddObject("GeneralExciseTaxes", generalExciseTax);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HyperWalletAccountStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHyperWalletAccountStatuses(HyperWalletAccountStatus hyperWalletAccountStatus)
        {
            base.AddObject("HyperWalletAccountStatuses", hyperWalletAccountStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HyperWalletAccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHyperWalletAccountTypes(HyperWalletAccountType hyperWalletAccountType)
        {
            base.AddObject("HyperWalletAccountTypes", hyperWalletAccountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HyperWalletBatchDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHyperWalletBatchDetails(HyperWalletBatchDetail hyperWalletBatchDetail)
        {
            base.AddObject("HyperWalletBatchDetails", hyperWalletBatchDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HyperWalletBatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHyperWalletBatches(HyperWalletBatch hyperWalletBatch)
        {
            base.AddObject("HyperWalletBatches", hyperWalletBatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HyperWalletBatchStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHyperWalletBatchStatuses(HyperWalletBatchStatus hyperWalletBatchStatus)
        {
            base.AddObject("HyperWalletBatchStatuses", hyperWalletBatchStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HyperWalletProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHyperWalletProfiles(HyperWalletProfile hyperWalletProfile)
        {
            base.AddObject("HyperWalletProfiles", hyperWalletProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HyperWalletResponseCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHyperWalletResponseCodes(HyperWalletResponseCode hyperWalletResponseCode)
        {
            base.AddObject("HyperWalletResponseCodes", hyperWalletResponseCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LedgerEntryOrigins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLedgerEntryOrigins(LedgerEntryOrigin ledgerEntryOrigin)
        {
            base.AddObject("LedgerEntryOrigins", ledgerEntryOrigin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LedgerEntryReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLedgerEntryReasons(LedgerEntryReason ledgerEntryReason)
        {
            base.AddObject("LedgerEntryReasons", ledgerEntryReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LedgerEntryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLedgerEntryTypes(LedgerEntryType ledgerEntryType)
        {
            base.AddObject("LedgerEntryTypes", ledgerEntryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderCalculations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderCalculations(OrderCalculation orderCalculation)
        {
            base.AddObject("OrderCalculations", orderCalculation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderItemCalculations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderItemCalculations(OrderItemCalculation orderItemCalculation)
        {
            base.AddObject("OrderItemCalculations", orderItemCalculation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrdersToProcesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrdersToProcesses(OrdersToProcess ordersToProcess)
        {
            base.AddObject("OrdersToProcesses", ordersToProcess);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverrideReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverrideReasons(OverrideReason overrideReason)
        {
            base.AddObject("OverrideReasons", overrideReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverrideReasonSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverrideReasonSources(OverrideReasonSource overrideReasonSource)
        {
            base.AddObject("OverrideReasonSources", overrideReasonSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverrideTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverrideTypes(OverrideType overrideType)
        {
            base.AddObject("OverrideTypes", overrideType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardBatchDetailErrorCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardBatchDetailErrorCodes(PayCardBatchDetailErrorCode payCardBatchDetailErrorCode)
        {
            base.AddObject("PayCardBatchDetailErrorCodes", payCardBatchDetailErrorCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardBatchDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardBatchDetails(PayCardBatchDetail payCardBatchDetail)
        {
            base.AddObject("PayCardBatchDetails", payCardBatchDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardBatchDetailStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardBatchDetailStatuses(PayCardBatchDetailStatus payCardBatchDetailStatus)
        {
            base.AddObject("PayCardBatchDetailStatuses", payCardBatchDetailStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardBatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardBatches(PayCardBatch payCardBatch)
        {
            base.AddObject("PayCardBatches", payCardBatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardBatchStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardBatchStatuses(PayCardBatchStatus payCardBatchStatus)
        {
            base.AddObject("PayCardBatchStatuses", payCardBatchStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardEnrollmentStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardEnrollmentStatuses(PayCardEnrollmentStatus payCardEnrollmentStatus)
        {
            base.AddObject("PayCardEnrollmentStatuses", payCardEnrollmentStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardErrorCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardErrorCodes(PayCardErrorCode payCardErrorCode)
        {
            base.AddObject("PayCardErrorCodes", payCardErrorCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardFileSequences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardFileSequences(PayCardFileSequence payCardFileSequence)
        {
            base.AddObject("PayCardFileSequences", payCardFileSequence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCards(PayCard payCard)
        {
            base.AddObject("PayCards", payCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayCardStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayCardStatuses(PayCardStatus payCardStatus)
        {
            base.AddObject("PayCardStatuses", payCardStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PeriodCalculations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriodCalculations(PeriodCalculation periodCalculation)
        {
            base.AddObject("PeriodCalculations", periodCalculation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Periods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriods(Period period)
        {
            base.AddObject("Periods", period);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlans(Plan plan)
        {
            base.AddObject("Plans", plan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCreditLedgers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCreditLedgers(ProductCreditLedger productCreditLedger)
        {
            base.AddObject("ProductCreditLedgers", productCreditLedger);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductPrices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductPrices(ProductPrice productPrice)
        {
            base.AddObject("ProductPrices", productPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemConfigs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemConfigs(SystemConfig systemConfig)
        {
            base.AddObject("SystemConfigs", systemConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemEventApplicaitonSteps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemEventApplicaitonSteps(SystemEventApplicaitonStep systemEventApplicaitonStep)
        {
            base.AddObject("SystemEventApplicaitonSteps", systemEventApplicaitonStep);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemEventApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemEventApplications(SystemEventApplication systemEventApplication)
        {
            base.AddObject("SystemEventApplications", systemEventApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemEventLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemEventLogs(SystemEventLog systemEventLog)
        {
            base.AddObject("SystemEventLogs", systemEventLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemEventLogTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemEventLogTypes(SystemEventLogType systemEventLogType)
        {
            base.AddObject("SystemEventLogTypes", systemEventLogType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemEvents(SystemEvent systemEvent)
        {
            base.AddObject("SystemEvents", systemEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TitleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitleTypes(TitleType titleType)
        {
            base.AddObject("TitleTypes", titleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrees(Tree tree)
        {
            base.AddObject("Trees", tree);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreeTypes(TreeType treeType)
        {
            base.AddObject("TreeTypes", treeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreeValidationIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreeValidationIssues(TreeValidationIssue treeValidationIssue)
        {
            base.AddObject("TreeValidationIssues", treeValidationIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreeValidationIssueTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreeValidationIssueTypes(TreeValidationIssueType treeValidationIssueType)
        {
            base.AddObject("TreeValidationIssueTypes", treeValidationIssueType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreeValidationResultTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreeValidationResultTypes(TreeValidationResultType treeValidationResultType)
        {
            base.AddObject("TreeValidationResultTypes", treeValidationResultType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreeValidations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreeValidations(TreeValidation treeValidation)
        {
            base.AddObject("TreeValidations", treeValidation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UniqueKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniqueKeys(UniqueKey uniqueKey)
        {
            base.AddObject("UniqueKeys", uniqueKey);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="periodID">No Metadata Documentation available.</param>
        /// <param name="succeeded">No Metadata Documentation available.</param>
        /// <param name="errorMessage">No Metadata Documentation available.</param>
        public int uspIntegrationsValidateDisbursementsRetrieval(Nullable<global::System.Int32> periodID, ObjectParameter succeeded, ObjectParameter errorMessage)
        {
            ObjectParameter periodIDParameter;
            if (periodID.HasValue)
            {
                periodIDParameter = new ObjectParameter("PeriodID", periodID);
            }
            else
            {
                periodIDParameter = new ObjectParameter("PeriodID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("uspIntegrationsValidateDisbursementsRetrieval", periodIDParameter, succeeded, errorMessage);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="disbursementDetailID">No Metadata Documentation available.</param>
        public ObjectResult<uspIntegrationsGetDisbursementProfileDataResult> uspIntegrationsGetDisbursementProfileData(Nullable<global::System.Int32> disbursementDetailID)
        {
            ObjectParameter disbursementDetailIDParameter;
            if (disbursementDetailID.HasValue)
            {
                disbursementDetailIDParameter = new ObjectParameter("DisbursementDetailID", disbursementDetailID);
            }
            else
            {
                disbursementDetailIDParameter = new ObjectParameter("DisbursementDetailID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<uspIntegrationsGetDisbursementProfileDataResult>("uspIntegrationsGetDisbursementProfileData", disbursementDetailIDParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="accountTypeID">Initial value of the AccountTypeID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        /// <param name="isEntity">Initial value of the IsEntity property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static Account CreateAccount(global::System.Int32 accountID, global::System.Int32 accountTypeID, global::System.Byte[] dataVersion, global::System.Boolean isEntity, global::System.Int32 countryID)
        {
            Account account = new Account();
            account.AccountID = accountID;
            account.AccountTypeID = accountTypeID;
            account.DataVersion = dataVersion;
            account.IsEntity = isEntity;
            account.CountryID = countryID;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountTypeID
        {
            get
            {
                return _AccountTypeID;
            }
            set
            {
                OnAccountTypeIDChanging(value);
                ReportPropertyChanging("AccountTypeID");
                _AccountTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTypeID");
                OnAccountTypeIDChanged();
            }
        }
        private global::System.Int32 _AccountTypeID;
        partial void OnAccountTypeIDChanging(global::System.Int32 value);
        partial void OnAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SponsorID
        {
            get
            {
                return _SponsorID;
            }
            set
            {
                OnSponsorIDChanging(value);
                ReportPropertyChanging("SponsorID");
                _SponsorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SponsorID");
                OnSponsorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SponsorID;
        partial void OnSponsorIDChanging(Nullable<global::System.Int32> value);
        partial void OnSponsorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EnrollerID
        {
            get
            {
                return _EnrollerID;
            }
            set
            {
                OnEnrollerIDChanging(value);
                ReportPropertyChanging("EnrollerID");
                _EnrollerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrollerID");
                OnEnrollerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EnrollerID;
        partial void OnEnrollerIDChanging(Nullable<global::System.Int32> value);
        partial void OnEnrollerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EnrollmentDateUTC
        {
            get
            {
                return _EnrollmentDateUTC;
            }
            set
            {
                OnEnrollmentDateUTCChanging(value);
                ReportPropertyChanging("EnrollmentDateUTC");
                _EnrollmentDateUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrollmentDateUTC");
                OnEnrollmentDateUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _EnrollmentDateUTC;
        partial void OnEnrollmentDateUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnEnrollmentDateUTCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTaxExempt
        {
            get
            {
                return _IsTaxExempt;
            }
            set
            {
                OnIsTaxExemptChanging(value);
                ReportPropertyChanging("IsTaxExempt");
                _IsTaxExempt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTaxExempt");
                OnIsTaxExemptChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTaxExempt;
        partial void OnIsTaxExemptChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTaxExemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxNumber
        {
            get
            {
                return _TaxNumber;
            }
            set
            {
                OnTaxNumberChanging(value);
                ReportPropertyChanging("TaxNumber");
                _TaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxNumber");
                OnTaxNumberChanged();
            }
        }
        private global::System.String _TaxNumber;
        partial void OnTaxNumberChanging(global::System.String value);
        partial void OnTaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEntity
        {
            get
            {
                return _IsEntity;
            }
            set
            {
                OnIsEntityChanging(value);
                ReportPropertyChanging("IsEntity");
                _IsEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEntity");
                OnIsEntityChanged();
            }
        }
        private global::System.Boolean _IsEntity;
        partial void OnIsEntityChanging(global::System.Boolean value);
        partial void OnIsEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountStatusChangeReasonID
        {
            get
            {
                return _AccountStatusChangeReasonID;
            }
            set
            {
                OnAccountStatusChangeReasonIDChanging(value);
                ReportPropertyChanging("AccountStatusChangeReasonID");
                _AccountStatusChangeReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountStatusChangeReasonID");
                OnAccountStatusChangeReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountStatusChangeReasonID;
        partial void OnAccountStatusChangeReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountStatusChangeReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountStatusID
        {
            get
            {
                return _AccountStatusID;
            }
            set
            {
                OnAccountStatusIDChanging(value);
                ReportPropertyChanging("AccountStatusID");
                _AccountStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountStatusID");
                OnAccountStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountStatusID;
        partial void OnAccountStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityName
        {
            get
            {
                return _EntityName;
            }
            set
            {
                OnEntityNameChanging(value);
                ReportPropertyChanging("EntityName");
                _EntityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityName");
                OnEntityNameChanged();
            }
        }
        private global::System.String _EntityName;
        partial void OnEntityNameChanging(global::System.String value);
        partial void OnEntityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoApplicant
        {
            get
            {
                return _CoApplicant;
            }
            set
            {
                OnCoApplicantChanging(value);
                ReportPropertyChanging("CoApplicant");
                _CoApplicant = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoApplicant");
                OnCoApplicantChanged();
            }
        }
        private global::System.String _CoApplicant;
        partial void OnCoApplicantChanging(global::System.String value);
        partial void OnCoApplicantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessCenterOwnerID
        {
            get
            {
                return _BusinessCenterOwnerID;
            }
            set
            {
                OnBusinessCenterOwnerIDChanging(value);
                ReportPropertyChanging("BusinessCenterOwnerID");
                _BusinessCenterOwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessCenterOwnerID");
                OnBusinessCenterOwnerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessCenterOwnerID;
        partial void OnBusinessCenterOwnerIDChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessCenterOwnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastRenewalUTC
        {
            get
            {
                return _LastRenewalUTC;
            }
            set
            {
                OnLastRenewalUTCChanging(value);
                ReportPropertyChanging("LastRenewalUTC");
                _LastRenewalUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRenewalUTC");
                OnLastRenewalUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastRenewalUTC;
        partial void OnLastRenewalUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnLastRenewalUTCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextRenewalUTC
        {
            get
            {
                return _NextRenewalUTC;
            }
            set
            {
                OnNextRenewalUTCChanging(value);
                ReportPropertyChanging("NextRenewalUTC");
                _NextRenewalUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextRenewalUTC");
                OnNextRenewalUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextRenewalUTC;
        partial void OnNextRenewalUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnNextRenewalUTCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthdayUTC
        {
            get
            {
                return _BirthdayUTC;
            }
            set
            {
                OnBirthdayUTCChanging(value);
                ReportPropertyChanging("BirthdayUTC");
                _BirthdayUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthdayUTC");
                OnBirthdayUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthdayUTC;
        partial void OnBirthdayUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayUTCChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerAccountID", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerAccountID", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerAccountID", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountSponsorsAccountID", "AccountSponsor")]
        public EntityCollection<AccountSponsor> AccountSponsors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountSponsor>("NetStepsCommissionsDB.fkAccountSponsorsAccountID", "AccountSponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountSponsor>("NetStepsCommissionsDB.fkAccountSponsorsAccountID", "AccountSponsor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountSponsorsSponsorID", "AccountSponsor")]
        public EntityCollection<AccountSponsor> AccountSponsors1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountSponsor>("NetStepsCommissionsDB.fkAccountSponsorsSponsorID", "AccountSponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountSponsor>("NetStepsCommissionsDB.fkAccountSponsorsSponsorID", "AccountSponsor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitleOverridesAccountID", "AccountTitleOverride")]
        public EntityCollection<AccountTitleOverride> AccountTitleOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkAccountTitleOverridesAccountID", "AccountTitleOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkAccountTitleOverridesAccountID", "AccountTitleOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesAccountID", "AccountTitle")]
        public EntityCollection<AccountTitle> AccountTitles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitle>("NetStepsCommissionsDB.fkAccountTitlesAccountID", "AccountTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitle>("NetStepsCommissionsDB.fkAccountTitlesAccountID", "AccountTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesOverriddenAccountID", "AccountTitlesOverridden")]
        public EntityCollection<AccountTitlesOverridden> AccountTitlesOverriddens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.fkAccountTitlesOverriddenAccountID", "AccountTitlesOverridden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.fkAccountTitlesOverriddenAccountID", "AccountTitlesOverridden", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsDownlineID", "BonusDetail")]
        public EntityCollection<BonusDetail> BonusDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsDownlineID", "BonusDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsDownlineID", "BonusDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsSponsorID", "BonusDetail")]
        public EntityCollection<BonusDetail> BonusDetails1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsSponsorID", "BonusDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsSponsorID", "BonusDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesAccountID", "BonusValue")]
        public EntityCollection<BonusValue> BonusValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesAccountID", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesAccountID", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesAccountID", "CalculationOverride")]
        public EntityCollection<CalculationOverride> CalculationOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesAccountID", "CalculationOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesAccountID", "CalculationOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsAccountID", "Calculation")]
        public EntityCollection<Calculation> Calculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Calculation>("NetStepsCommissionsDB.fkCalculationsAccountID", "Calculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Calculation>("NetStepsCommissionsDB.fkCalculationsAccountID", "Calculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimeAccountID", "CalculationsRealTime")]
        public EntityCollection<CalculationsRealTime> CalculationsRealTimes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationsRealTime>("NetStepsCommissionsDB.fkCalculationsRealTimeAccountID", "CalculationsRealTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationsRealTime>("NetStepsCommissionsDB.fkCalculationsRealTimeAccountID", "CalculationsRealTime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCheckHoldsAccountID", "CheckHold")]
        public EntityCollection<CheckHold> CheckHolds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CheckHold>("NetStepsCommissionsDB.fkCheckHoldsAccountID", "CheckHold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CheckHold>("NetStepsCommissionsDB.fkCheckHoldsAccountID", "CheckHold", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_Accounts_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.FK_Accounts_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.FK_Accounts_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.FK_Accounts_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("NetStepsCommissionsDB.FK_Accounts_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementProfilesAccountID", "DisbursementProfile")]
        public EntityCollection<DisbursementProfile> DisbursementProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementProfilesAccountID", "DisbursementProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementProfilesAccountID", "DisbursementProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsAccountID", "Disbursement")]
        public EntityCollection<Disbursement> Disbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsAccountID", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsAccountID", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkGarnishmentsAccounts", "Garnishment")]
        public EntityCollection<Garnishment> Garnishments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Garnishment>("NetStepsCommissionsDB.FkGarnishmentsAccounts", "Garnishment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Garnishment>("NetStepsCommissionsDB.FkGarnishmentsAccounts", "Garnishment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkOrderCalculationsAccountID", "OrderCalculation")]
        public EntityCollection<OrderCalculation> OrderCalculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderCalculation>("NetStepsCommissionsDB.fkOrderCalculationsAccountID", "OrderCalculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderCalculation>("NetStepsCommissionsDB.fkOrderCalculationsAccountID", "OrderCalculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkOrderItemCalculationsAccounts", "OrderItemCalculation")]
        public EntityCollection<OrderItemCalculation> OrderItemCalculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItemCalculation>("NetStepsCommissionsDB.fkOrderItemCalculationsAccounts", "OrderItemCalculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItemCalculation>("NetStepsCommissionsDB.fkOrderItemCalculationsAccounts", "OrderItemCalculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkProductCreditLedgerAccountID", "ProductCreditLedger")]
        public EntityCollection<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.fkProductCreditLedgerAccountID", "ProductCreditLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.fkProductCreditLedgerAccountID", "ProductCreditLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkTreeDownlineID", "Tree")]
        public EntityCollection<Tree> Trees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tree>("NetStepsCommissionsDB.fkTreeDownlineID", "Tree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tree>("NetStepsCommissionsDB.fkTreeDownlineID", "Tree", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkTreeSponsorID", "Tree")]
        public EntityCollection<Tree> Trees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tree>("NetStepsCommissionsDB.fkTreeSponsorID", "Tree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tree>("NetStepsCommissionsDB.fkTreeSponsorID", "Tree", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountLedger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountLedger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountLedger object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="entryID">Initial value of the EntryID property.</param>
        /// <param name="entryDescription">Initial value of the EntryDescription property.</param>
        /// <param name="entryReasonID">Initial value of the EntryReasonID property.</param>
        /// <param name="entryOriginID">Initial value of the EntryOriginID property.</param>
        /// <param name="entryTypeID">Initial value of the EntryTypeID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="entryAmount">Initial value of the EntryAmount property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="currencyTypeID">Initial value of the CurrencyTypeID property.</param>
        public static AccountLedger CreateAccountLedger(global::System.Int32 accountID, global::System.Int32 entryID, global::System.String entryDescription, global::System.Int32 entryReasonID, global::System.Int32 entryOriginID, global::System.Int32 entryTypeID, global::System.Int32 userID, global::System.Decimal entryAmount, global::System.DateTime entryDate, global::System.DateTime effectiveDate, global::System.Int32 currencyTypeID)
        {
            AccountLedger accountLedger = new AccountLedger();
            accountLedger.AccountID = accountID;
            accountLedger.EntryID = entryID;
            accountLedger.EntryDescription = entryDescription;
            accountLedger.EntryReasonID = entryReasonID;
            accountLedger.EntryOriginID = entryOriginID;
            accountLedger.EntryTypeID = entryTypeID;
            accountLedger.UserID = userID;
            accountLedger.EntryAmount = entryAmount;
            accountLedger.EntryDate = entryDate;
            accountLedger.EffectiveDate = effectiveDate;
            accountLedger.CurrencyTypeID = currencyTypeID;
            return accountLedger;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryID
        {
            get
            {
                return _EntryID;
            }
            set
            {
                if (_EntryID != value)
                {
                    OnEntryIDChanging(value);
                    ReportPropertyChanging("EntryID");
                    _EntryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryID");
                    OnEntryIDChanged();
                }
            }
        }
        private global::System.Int32 _EntryID;
        partial void OnEntryIDChanging(global::System.Int32 value);
        partial void OnEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EntryDescription
        {
            get
            {
                return _EntryDescription;
            }
            set
            {
                OnEntryDescriptionChanging(value);
                ReportPropertyChanging("EntryDescription");
                _EntryDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EntryDescription");
                OnEntryDescriptionChanged();
            }
        }
        private global::System.String _EntryDescription;
        partial void OnEntryDescriptionChanging(global::System.String value);
        partial void OnEntryDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryReasonID
        {
            get
            {
                return _EntryReasonID;
            }
            set
            {
                OnEntryReasonIDChanging(value);
                ReportPropertyChanging("EntryReasonID");
                _EntryReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryReasonID");
                OnEntryReasonIDChanged();
            }
        }
        private global::System.Int32 _EntryReasonID;
        partial void OnEntryReasonIDChanging(global::System.Int32 value);
        partial void OnEntryReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryOriginID
        {
            get
            {
                return _EntryOriginID;
            }
            set
            {
                OnEntryOriginIDChanging(value);
                ReportPropertyChanging("EntryOriginID");
                _EntryOriginID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryOriginID");
                OnEntryOriginIDChanged();
            }
        }
        private global::System.Int32 _EntryOriginID;
        partial void OnEntryOriginIDChanging(global::System.Int32 value);
        partial void OnEntryOriginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryTypeID
        {
            get
            {
                return _EntryTypeID;
            }
            set
            {
                OnEntryTypeIDChanging(value);
                ReportPropertyChanging("EntryTypeID");
                _EntryTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTypeID");
                OnEntryTypeIDChanged();
            }
        }
        private global::System.Int32 _EntryTypeID;
        partial void OnEntryTypeIDChanging(global::System.Int32 value);
        partial void OnEntryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntryNotes
        {
            get
            {
                return _EntryNotes;
            }
            set
            {
                OnEntryNotesChanging(value);
                ReportPropertyChanging("EntryNotes");
                _EntryNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntryNotes");
                OnEntryNotesChanged();
            }
        }
        private global::System.String _EntryNotes;
        partial void OnEntryNotesChanging(global::System.String value);
        partial void OnEntryNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EntryAmount
        {
            get
            {
                return _EntryAmount;
            }
            set
            {
                OnEntryAmountChanging(value);
                ReportPropertyChanging("EntryAmount");
                _EntryAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryAmount");
                OnEntryAmountChanged();
            }
        }
        private global::System.Decimal _EntryAmount;
        partial void OnEntryAmountChanging(global::System.Decimal value);
        partial void OnEntryAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BonusTypeID
        {
            get
            {
                return _BonusTypeID;
            }
            set
            {
                OnBonusTypeIDChanging(value);
                ReportPropertyChanging("BonusTypeID");
                _BonusTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusTypeID");
                OnBonusTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BonusTypeID;
        partial void OnBonusTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnBonusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisbursementID
        {
            get
            {
                return _DisbursementID;
            }
            set
            {
                OnDisbursementIDChanging(value);
                ReportPropertyChanging("DisbursementID");
                _DisbursementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementID");
                OnDisbursementIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DisbursementID;
        partial void OnDisbursementIDChanging(Nullable<global::System.Int32> value);
        partial void OnDisbursementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BonusValueID
        {
            get
            {
                return _BonusValueID;
            }
            set
            {
                OnBonusValueIDChanging(value);
                ReportPropertyChanging("BonusValueID");
                _BonusValueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusValueID");
                OnBonusValueIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BonusValueID;
        partial void OnBonusValueIDChanging(Nullable<global::System.Int32> value);
        partial void OnBonusValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EndingBalance
        {
            get
            {
                return _EndingBalance;
            }
            set
            {
                OnEndingBalanceChanging(value);
                ReportPropertyChanging("EndingBalance");
                _EndingBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndingBalance");
                OnEndingBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _EndingBalance;
        partial void OnEndingBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnEndingBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountLedgerAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountLedgerAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountLedgerAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkAccountLedgerAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerBonusTypes", "BonusType")]
        public BonusType BonusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fkAccountLedgerBonusTypes", "BonusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fkAccountLedgerBonusTypes", "BonusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusType> BonusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fkAccountLedgerBonusTypes", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusType>("NetStepsCommissionsDB.fkAccountLedgerBonusTypes", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerBonusValues", "BonusValue")]
        public BonusValue BonusValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusValue>("NetStepsCommissionsDB.fkAccountLedgerBonusValues", "BonusValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusValue>("NetStepsCommissionsDB.fkAccountLedgerBonusValues", "BonusValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusValue> BonusValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusValue>("NetStepsCommissionsDB.fkAccountLedgerBonusValues", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusValue>("NetStepsCommissionsDB.fkAccountLedgerBonusValues", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerCurrencyTypes", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkAccountLedgerCurrencyTypes", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkAccountLedgerCurrencyTypes", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkAccountLedgerCurrencyTypes", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkAccountLedgerCurrencyTypes", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerDisbursementID", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("NetStepsCommissionsDB.fkAccountLedgerDisbursementID", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("NetStepsCommissionsDB.fkAccountLedgerDisbursementID", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("NetStepsCommissionsDB.fkAccountLedgerDisbursementID", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("NetStepsCommissionsDB.fkAccountLedgerDisbursementID", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryOrigins", "LedgerEntryOrigin")]
        public LedgerEntryOrigin LedgerEntryOrigin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryOrigins", "LedgerEntryOrigin").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryOrigins", "LedgerEntryOrigin").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LedgerEntryOrigin> LedgerEntryOriginReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryOrigins", "LedgerEntryOrigin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryOrigins", "LedgerEntryOrigin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryReasons", "LedgerEntryReason")]
        public LedgerEntryReason LedgerEntryReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryReasons", "LedgerEntryReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryReasons", "LedgerEntryReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LedgerEntryReason> LedgerEntryReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryReasons", "LedgerEntryReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryReasons", "LedgerEntryReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryTypes", "LedgerEntryType")]
        public LedgerEntryType LedgerEntryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryTypes", "LedgerEntryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryTypes", "LedgerEntryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LedgerEntryType> LedgerEntryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryTypes", "LedgerEntryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryTypes", "LedgerEntryType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountSponsor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountSponsor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountSponsor object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="accountSponsorTypeID">Initial value of the AccountSponsorTypeID property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static AccountSponsor CreateAccountSponsor(global::System.Int32 accountID, global::System.Int32 accountSponsorTypeID, global::System.Int32 position, global::System.DateTime effectiveDate)
        {
            AccountSponsor accountSponsor = new AccountSponsor();
            accountSponsor.AccountID = accountID;
            accountSponsor.AccountSponsorTypeID = accountSponsorTypeID;
            accountSponsor.Position = position;
            accountSponsor.EffectiveDate = effectiveDate;
            return accountSponsor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SponsorID
        {
            get
            {
                return _SponsorID;
            }
            set
            {
                OnSponsorIDChanging(value);
                ReportPropertyChanging("SponsorID");
                _SponsorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SponsorID");
                OnSponsorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SponsorID;
        partial void OnSponsorIDChanging(Nullable<global::System.Int32> value);
        partial void OnSponsorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountSponsorTypeID
        {
            get
            {
                return _AccountSponsorTypeID;
            }
            set
            {
                if (_AccountSponsorTypeID != value)
                {
                    OnAccountSponsorTypeIDChanging(value);
                    ReportPropertyChanging("AccountSponsorTypeID");
                    _AccountSponsorTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountSponsorTypeID");
                    OnAccountSponsorTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountSponsorTypeID;
        partial void OnAccountSponsorTypeIDChanging(global::System.Int32 value);
        partial void OnAccountSponsorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                if (_EffectiveDate != value)
                {
                    OnEffectiveDateChanging(value);
                    ReportPropertyChanging("EffectiveDate");
                    _EffectiveDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectiveDate");
                    OnEffectiveDateChanged();
                }
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountSponsorsAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountSponsorsSponsorID", "Account")]
        public Account Account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsSponsorID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsSponsorID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> Account1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsSponsorID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkAccountSponsorsSponsorID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountSponsors_AccountSponsorTypes", "AccountSponsorType")]
        public AccountSponsorType AccountSponsorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.FK_AccountSponsors_AccountSponsorTypes", "AccountSponsorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.FK_AccountSponsors_AccountSponsorTypes", "AccountSponsorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountSponsorType> AccountSponsorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.FK_AccountSponsors_AccountSponsorTypes", "AccountSponsorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.FK_AccountSponsors_AccountSponsorTypes", "AccountSponsorType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountSponsorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountSponsorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountSponsorType object.
        /// </summary>
        /// <param name="accountSponsorTypeID">Initial value of the AccountSponsorTypeID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="maxChildNodes">Initial value of the MaxChildNodes property.</param>
        public static AccountSponsorType CreateAccountSponsorType(global::System.Int32 accountSponsorTypeID, global::System.String code, global::System.Boolean editable, global::System.Boolean maxChildNodes)
        {
            AccountSponsorType accountSponsorType = new AccountSponsorType();
            accountSponsorType.AccountSponsorTypeID = accountSponsorTypeID;
            accountSponsorType.Code = code;
            accountSponsorType.Editable = editable;
            accountSponsorType.MaxChildNodes = maxChildNodes;
            return accountSponsorType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountSponsorTypeID
        {
            get
            {
                return _AccountSponsorTypeID;
            }
            set
            {
                if (_AccountSponsorTypeID != value)
                {
                    OnAccountSponsorTypeIDChanging(value);
                    ReportPropertyChanging("AccountSponsorTypeID");
                    _AccountSponsorTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountSponsorTypeID");
                    OnAccountSponsorTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountSponsorTypeID;
        partial void OnAccountSponsorTypeIDChanging(global::System.Int32 value);
        partial void OnAccountSponsorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MaxChildNodes
        {
            get
            {
                return _MaxChildNodes;
            }
            set
            {
                OnMaxChildNodesChanging(value);
                ReportPropertyChanging("MaxChildNodes");
                _MaxChildNodes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxChildNodes");
                OnMaxChildNodesChanged();
            }
        }
        private global::System.Boolean _MaxChildNodes;
        partial void OnMaxChildNodesChanging(global::System.Boolean value);
        partial void OnMaxChildNodesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountSponsors_AccountSponsorTypes", "AccountSponsor")]
        public EntityCollection<AccountSponsor> AccountSponsors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountSponsor>("NetStepsCommissionsDB.FK_AccountSponsors_AccountSponsorTypes", "AccountSponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountSponsor>("NetStepsCommissionsDB.FK_AccountSponsors_AccountSponsorTypes", "AccountSponsor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsAccountSponsorTypeID", "BonusDetail")]
        public EntityCollection<BonusDetail> BonusDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsAccountSponsorTypeID", "BonusDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsAccountSponsorTypeID", "BonusDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountStatusType object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        public static AccountStatusType CreateAccountStatusType(global::System.Int32 statusID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable)
        {
            AccountStatusType accountStatusType = new AccountStatusType();
            accountStatusType.StatusID = statusID;
            accountStatusType.Name = name;
            accountStatusType.Enabled = enabled;
            accountStatusType.Editable = editable;
            return accountStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountTitle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountTitle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountTitle object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="titleID">Initial value of the TitleID property.</param>
        /// <param name="titleTypeID">Initial value of the TitleTypeID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        public static AccountTitle CreateAccountTitle(global::System.Int32 accountID, global::System.Int32 titleID, global::System.Int32 titleTypeID, global::System.Int32 periodID)
        {
            AccountTitle accountTitle = new AccountTitle();
            accountTitle.AccountID = accountID;
            accountTitle.TitleID = titleID;
            accountTitle.TitleTypeID = titleTypeID;
            accountTitle.PeriodID = periodID;
            return accountTitle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleID
        {
            get
            {
                return _TitleID;
            }
            set
            {
                if (_TitleID != value)
                {
                    OnTitleIDChanging(value);
                    ReportPropertyChanging("TitleID");
                    _TitleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleID");
                    OnTitleIDChanged();
                }
            }
        }
        private global::System.Int32 _TitleID;
        partial void OnTitleIDChanging(global::System.Int32 value);
        partial void OnTitleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleTypeID
        {
            get
            {
                return _TitleTypeID;
            }
            set
            {
                if (_TitleTypeID != value)
                {
                    OnTitleTypeIDChanging(value);
                    ReportPropertyChanging("TitleTypeID");
                    _TitleTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleTypeID");
                    OnTitleTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TitleTypeID;
        partial void OnTitleTypeIDChanging(global::System.Int32 value);
        partial void OnTitleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Consecutive
        {
            get
            {
                return _Consecutive;
            }
            set
            {
                OnConsecutiveChanging(value);
                ReportPropertyChanging("Consecutive");
                _Consecutive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Consecutive");
                OnConsecutiveChanged();
            }
        }
        private Nullable<global::System.Int32> _Consecutive;
        partial void OnConsecutiveChanging(Nullable<global::System.Int32> value);
        partial void OnConsecutiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FirstAchievedPeriodID
        {
            get
            {
                return _FirstAchievedPeriodID;
            }
            set
            {
                OnFirstAchievedPeriodIDChanging(value);
                ReportPropertyChanging("FirstAchievedPeriodID");
                _FirstAchievedPeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstAchievedPeriodID");
                OnFirstAchievedPeriodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FirstAchievedPeriodID;
        partial void OnFirstAchievedPeriodIDChanging(Nullable<global::System.Int32> value);
        partial void OnFirstAchievedPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodsSinceFirstAchieved
        {
            get
            {
                return _PeriodsSinceFirstAchieved;
            }
            set
            {
                OnPeriodsSinceFirstAchievedChanging(value);
                ReportPropertyChanging("PeriodsSinceFirstAchieved");
                _PeriodsSinceFirstAchieved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodsSinceFirstAchieved");
                OnPeriodsSinceFirstAchievedChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodsSinceFirstAchieved;
        partial void OnPeriodsSinceFirstAchievedChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodsSinceFirstAchievedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesPeriodID", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitles_TitleTypes", "TitleType")]
        public TitleType TitleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitles_TitleTypes", "TitleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitles_TitleTypes", "TitleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TitleType> TitleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitles_TitleTypes", "TitleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitles_TitleTypes", "TitleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_StatusTypeStatusTypeID_AccountStatusStatusID", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.fk_StatusTypeStatusTypeID_AccountStatusStatusID", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.fk_StatusTypeStatusTypeID_AccountStatusStatusID", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.fk_StatusTypeStatusTypeID_AccountStatusStatusID", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("NetStepsCommissionsDB.fk_StatusTypeStatusTypeID_AccountStatusStatusID", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountTitleOverride")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountTitleOverride : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountTitleOverride object.
        /// </summary>
        /// <param name="accountTitleOverrideID">Initial value of the AccountTitleOverrideID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="titleID">Initial value of the TitleID property.</param>
        /// <param name="titleTypeID">Initial value of the TitleTypeID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="overrideReasonID">Initial value of the OverrideReasonID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updatedDate">Initial value of the UpdatedDate property.</param>
        public static AccountTitleOverride CreateAccountTitleOverride(global::System.Int32 accountTitleOverrideID, global::System.Int32 accountID, global::System.Int32 titleID, global::System.Int32 titleTypeID, global::System.Int32 periodID, global::System.Int32 overrideReasonID, global::System.Int32 userID, global::System.DateTime createdDate, global::System.DateTime updatedDate)
        {
            AccountTitleOverride accountTitleOverride = new AccountTitleOverride();
            accountTitleOverride.AccountTitleOverrideID = accountTitleOverrideID;
            accountTitleOverride.AccountID = accountID;
            accountTitleOverride.TitleID = titleID;
            accountTitleOverride.TitleTypeID = titleTypeID;
            accountTitleOverride.PeriodID = periodID;
            accountTitleOverride.OverrideReasonID = overrideReasonID;
            accountTitleOverride.UserID = userID;
            accountTitleOverride.CreatedDate = createdDate;
            accountTitleOverride.UpdatedDate = updatedDate;
            return accountTitleOverride;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountTitleOverrideID
        {
            get
            {
                return _AccountTitleOverrideID;
            }
            set
            {
                if (_AccountTitleOverrideID != value)
                {
                    OnAccountTitleOverrideIDChanging(value);
                    ReportPropertyChanging("AccountTitleOverrideID");
                    _AccountTitleOverrideID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountTitleOverrideID");
                    OnAccountTitleOverrideIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountTitleOverrideID;
        partial void OnAccountTitleOverrideIDChanging(global::System.Int32 value);
        partial void OnAccountTitleOverrideIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleID
        {
            get
            {
                return _TitleID;
            }
            set
            {
                OnTitleIDChanging(value);
                ReportPropertyChanging("TitleID");
                _TitleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleID");
                OnTitleIDChanged();
            }
        }
        private global::System.Int32 _TitleID;
        partial void OnTitleIDChanging(global::System.Int32 value);
        partial void OnTitleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleTypeID
        {
            get
            {
                return _TitleTypeID;
            }
            set
            {
                OnTitleTypeIDChanging(value);
                ReportPropertyChanging("TitleTypeID");
                _TitleTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleTypeID");
                OnTitleTypeIDChanged();
            }
        }
        private global::System.Int32 _TitleTypeID;
        partial void OnTitleTypeIDChanging(global::System.Int32 value);
        partial void OnTitleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideReasonID
        {
            get
            {
                return _OverrideReasonID;
            }
            set
            {
                OnOverrideReasonIDChanging(value);
                ReportPropertyChanging("OverrideReasonID");
                _OverrideReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideReasonID");
                OnOverrideReasonIDChanged();
            }
        }
        private global::System.Int32 _OverrideReasonID;
        partial void OnOverrideReasonIDChanging(global::System.Int32 value);
        partial void OnOverrideReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationSourceID
        {
            get
            {
                return _ApplicationSourceID;
            }
            set
            {
                OnApplicationSourceIDChanging(value);
                ReportPropertyChanging("ApplicationSourceID");
                _ApplicationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSourceID");
                OnApplicationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationSourceID;
        partial void OnApplicationSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private global::System.DateTime _UpdatedDate;
        partial void OnUpdatedDateChanging(global::System.DateTime value);
        partial void OnUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitleOverridesAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitleOverridesAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitleOverridesAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitleOverridesAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitleOverridesAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkStatusOverridesOverrideReasons", "OverrideReason")]
        public OverrideReason OverrideReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkStatusOverridesOverrideReasons", "OverrideReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkStatusOverridesOverrideReasons", "OverrideReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverrideReason> OverrideReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkStatusOverridesOverrideReasons", "OverrideReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkStatusOverridesOverrideReasons", "OverrideReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitleOverridesTitleTypes", "TitleType")]
        public TitleType TitleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.fkAccountTitleOverridesTitleTypes", "TitleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.fkAccountTitleOverridesTitleTypes", "TitleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TitleType> TitleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.fkAccountTitleOverridesTitleTypes", "TitleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TitleType>("NetStepsCommissionsDB.fkAccountTitleOverridesTitleTypes", "TitleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkStatusOverridesStatusTypes", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.fkStatusOverridesStatusTypes", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.fkStatusOverridesStatusTypes", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.fkStatusOverridesStatusTypes", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("NetStepsCommissionsDB.fkStatusOverridesStatusTypes", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountTitleOverridesAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountTitleOverridesAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountTitleOverridesAudit object.
        /// </summary>
        /// <param name="accountTitleOverrideAuditID">Initial value of the AccountTitleOverrideAuditID property.</param>
        /// <param name="accountTitleOverrideID">Initial value of the AccountTitleOverrideID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="titleID">Initial value of the TitleID property.</param>
        /// <param name="titleTypeID">Initial value of the TitleTypeID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="overrideReasonID">Initial value of the OverrideReasonID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updatedDate">Initial value of the UpdatedDate property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="systemUser">Initial value of the SystemUser property.</param>
        /// <param name="auditDate">Initial value of the AuditDate property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static AccountTitleOverridesAudit CreateAccountTitleOverridesAudit(global::System.Int32 accountTitleOverrideAuditID, global::System.Int32 accountTitleOverrideID, global::System.Int32 accountID, global::System.Int32 titleID, global::System.Int32 titleTypeID, global::System.Int32 periodID, global::System.Int32 overrideReasonID, global::System.DateTime createdDate, global::System.DateTime updatedDate, global::System.String operation, global::System.String systemUser, global::System.DateTime auditDate, global::System.Byte[] dataVersion)
        {
            AccountTitleOverridesAudit accountTitleOverridesAudit = new AccountTitleOverridesAudit();
            accountTitleOverridesAudit.AccountTitleOverrideAuditID = accountTitleOverrideAuditID;
            accountTitleOverridesAudit.AccountTitleOverrideID = accountTitleOverrideID;
            accountTitleOverridesAudit.AccountID = accountID;
            accountTitleOverridesAudit.TitleID = titleID;
            accountTitleOverridesAudit.TitleTypeID = titleTypeID;
            accountTitleOverridesAudit.PeriodID = periodID;
            accountTitleOverridesAudit.OverrideReasonID = overrideReasonID;
            accountTitleOverridesAudit.CreatedDate = createdDate;
            accountTitleOverridesAudit.UpdatedDate = updatedDate;
            accountTitleOverridesAudit.Operation = operation;
            accountTitleOverridesAudit.SystemUser = systemUser;
            accountTitleOverridesAudit.AuditDate = auditDate;
            accountTitleOverridesAudit.DataVersion = dataVersion;
            return accountTitleOverridesAudit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountTitleOverrideAuditID
        {
            get
            {
                return _AccountTitleOverrideAuditID;
            }
            set
            {
                if (_AccountTitleOverrideAuditID != value)
                {
                    OnAccountTitleOverrideAuditIDChanging(value);
                    ReportPropertyChanging("AccountTitleOverrideAuditID");
                    _AccountTitleOverrideAuditID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountTitleOverrideAuditID");
                    OnAccountTitleOverrideAuditIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountTitleOverrideAuditID;
        partial void OnAccountTitleOverrideAuditIDChanging(global::System.Int32 value);
        partial void OnAccountTitleOverrideAuditIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountTitleOverrideID
        {
            get
            {
                return _AccountTitleOverrideID;
            }
            set
            {
                OnAccountTitleOverrideIDChanging(value);
                ReportPropertyChanging("AccountTitleOverrideID");
                _AccountTitleOverrideID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTitleOverrideID");
                OnAccountTitleOverrideIDChanged();
            }
        }
        private global::System.Int32 _AccountTitleOverrideID;
        partial void OnAccountTitleOverrideIDChanging(global::System.Int32 value);
        partial void OnAccountTitleOverrideIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleID
        {
            get
            {
                return _TitleID;
            }
            set
            {
                OnTitleIDChanging(value);
                ReportPropertyChanging("TitleID");
                _TitleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleID");
                OnTitleIDChanged();
            }
        }
        private global::System.Int32 _TitleID;
        partial void OnTitleIDChanging(global::System.Int32 value);
        partial void OnTitleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleTypeID
        {
            get
            {
                return _TitleTypeID;
            }
            set
            {
                OnTitleTypeIDChanging(value);
                ReportPropertyChanging("TitleTypeID");
                _TitleTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleTypeID");
                OnTitleTypeIDChanged();
            }
        }
        private global::System.Int32 _TitleTypeID;
        partial void OnTitleTypeIDChanging(global::System.Int32 value);
        partial void OnTitleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideReasonID
        {
            get
            {
                return _OverrideReasonID;
            }
            set
            {
                OnOverrideReasonIDChanging(value);
                ReportPropertyChanging("OverrideReasonID");
                _OverrideReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideReasonID");
                OnOverrideReasonIDChanged();
            }
        }
        private global::System.Int32 _OverrideReasonID;
        partial void OnOverrideReasonIDChanging(global::System.Int32 value);
        partial void OnOverrideReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationSourceID
        {
            get
            {
                return _ApplicationSourceID;
            }
            set
            {
                OnApplicationSourceIDChanging(value);
                ReportPropertyChanging("ApplicationSourceID");
                _ApplicationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSourceID");
                OnApplicationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationSourceID;
        partial void OnApplicationSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private global::System.DateTime _UpdatedDate;
        partial void OnUpdatedDateChanging(global::System.DateTime value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SystemUser
        {
            get
            {
                return _SystemUser;
            }
            set
            {
                OnSystemUserChanging(value);
                ReportPropertyChanging("SystemUser");
                _SystemUser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SystemUser");
                OnSystemUserChanged();
            }
        }
        private global::System.String _SystemUser;
        partial void OnSystemUserChanging(global::System.String value);
        partial void OnSystemUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AuditDate
        {
            get
            {
                return _AuditDate;
            }
            set
            {
                OnAuditDateChanging(value);
                ReportPropertyChanging("AuditDate");
                _AuditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditDate");
                OnAuditDateChanged();
            }
        }
        private global::System.DateTime _AuditDate;
        partial void OnAuditDateChanging(global::System.DateTime value);
        partial void OnAuditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="AccountTitlesOverridden")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountTitlesOverridden : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountTitlesOverridden object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="titleTypeID">Initial value of the TitleTypeID property.</param>
        /// <param name="originalTitleID">Initial value of the OriginalTitleID property.</param>
        /// <param name="newTitleID">Initial value of the NewTitleID property.</param>
        public static AccountTitlesOverridden CreateAccountTitlesOverridden(global::System.Int32 accountID, global::System.Int32 periodID, global::System.Int32 titleTypeID, global::System.Int32 originalTitleID, global::System.Int32 newTitleID)
        {
            AccountTitlesOverridden accountTitlesOverridden = new AccountTitlesOverridden();
            accountTitlesOverridden.AccountID = accountID;
            accountTitlesOverridden.PeriodID = periodID;
            accountTitlesOverridden.TitleTypeID = titleTypeID;
            accountTitlesOverridden.OriginalTitleID = originalTitleID;
            accountTitlesOverridden.NewTitleID = newTitleID;
            return accountTitlesOverridden;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleTypeID
        {
            get
            {
                return _TitleTypeID;
            }
            set
            {
                if (_TitleTypeID != value)
                {
                    OnTitleTypeIDChanging(value);
                    ReportPropertyChanging("TitleTypeID");
                    _TitleTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleTypeID");
                    OnTitleTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TitleTypeID;
        partial void OnTitleTypeIDChanging(global::System.Int32 value);
        partial void OnTitleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OriginalTitleID
        {
            get
            {
                return _OriginalTitleID;
            }
            set
            {
                OnOriginalTitleIDChanging(value);
                ReportPropertyChanging("OriginalTitleID");
                _OriginalTitleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalTitleID");
                OnOriginalTitleIDChanged();
            }
        }
        private global::System.Int32 _OriginalTitleID;
        partial void OnOriginalTitleIDChanging(global::System.Int32 value);
        partial void OnOriginalTitleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewTitleID
        {
            get
            {
                return _NewTitleID;
            }
            set
            {
                OnNewTitleIDChanging(value);
                ReportPropertyChanging("NewTitleID");
                _NewTitleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewTitleID");
                OnNewTitleIDChanged();
            }
        }
        private global::System.Int32 _NewTitleID;
        partial void OnNewTitleIDChanging(global::System.Int32 value);
        partial void OnNewTitleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesOverriddenAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesOverriddenAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesOverriddenAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesOverriddenAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkAccountTitlesOverriddenAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesOverriddenPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesOverriddenPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesOverriddenPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesOverriddenPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkAccountTitlesOverriddenPeriodID", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_Titles", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_Titles1", "Title")]
        public Title Title1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles1", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles1", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> Title1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles1", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles1", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_TitleTypes", "TitleType")]
        public TitleType TitleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_TitleTypes", "TitleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_TitleTypes", "TitleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TitleType> TitleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_TitleTypes", "TitleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TitleType>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_TitleTypes", "TitleType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static Address CreateAddress(global::System.Int32 addressID, global::System.Int32 accountID, global::System.Int32 countryID)
        {
            Address address = new Address();
            address.AddressID = addressID;
            address.AccountID = accountID;
            address.CountryID = countryID;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine3
        {
            get
            {
                return _AddressLine3;
            }
            set
            {
                OnAddressLine3Changing(value);
                ReportPropertyChanging("AddressLine3");
                _AddressLine3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine3");
                OnAddressLine3Changed();
            }
        }
        private global::System.String _AddressLine3;
        partial void OnAddressLine3Changing(global::System.String value);
        partial void OnAddressLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Locality
        {
            get
            {
                return _Locality;
            }
            set
            {
                OnLocalityChanging(value);
                ReportPropertyChanging("Locality");
                _Locality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Locality");
                OnLocalityChanged();
            }
        }
        private global::System.String _Locality;
        partial void OnLocalityChanging(global::System.String value);
        partial void OnLocalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountyDistrict
        {
            get
            {
                return _CountyDistrict;
            }
            set
            {
                OnCountyDistrictChanging(value);
                ReportPropertyChanging("CountyDistrict");
                _CountyDistrict = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountyDistrict");
                OnCountyDistrictChanged();
            }
        }
        private global::System.String _CountyDistrict;
        partial void OnCountyDistrictChanging(global::System.String value);
        partial void OnCountyDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkChecksAddressID", "Check")]
        public EntityCollection<Check> Checks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Check>("NetStepsCommissionsDB.fkChecksAddressID", "Check");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Check>("NetStepsCommissionsDB.fkChecksAddressID", "Check", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="BankAccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankAccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankAccountType object.
        /// </summary>
        /// <param name="bankAccountTypeID">Initial value of the BankAccountTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        public static BankAccountType CreateBankAccountType(global::System.Int32 bankAccountTypeID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable)
        {
            BankAccountType bankAccountType = new BankAccountType();
            bankAccountType.BankAccountTypeID = bankAccountTypeID;
            bankAccountType.Name = name;
            bankAccountType.Enabled = enabled;
            bankAccountType.Editable = editable;
            return bankAccountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankAccountTypeID
        {
            get
            {
                return _BankAccountTypeID;
            }
            set
            {
                if (_BankAccountTypeID != value)
                {
                    OnBankAccountTypeIDChanging(value);
                    ReportPropertyChanging("BankAccountTypeID");
                    _BankAccountTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BankAccountTypeID");
                    OnBankAccountTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _BankAccountTypeID;
        partial void OnBankAccountTypeIDChanging(global::System.Int32 value);
        partial void OnBankAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NACHACode
        {
            get
            {
                return _NACHACode;
            }
            set
            {
                OnNACHACodeChanging(value);
                ReportPropertyChanging("NACHACode");
                _NACHACode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NACHACode");
                OnNACHACodeChanged();
            }
        }
        private global::System.String _NACHACode;
        partial void OnNACHACodeChanging(global::System.String value);
        partial void OnNACHACodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EFTDetails_BankAccountTypes", "EFTDetail")]
        public EntityCollection<EFTDetail> EFTDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EFTDetail>("NetStepsCommissionsDB.FK_EFTDetails_BankAccountTypes", "EFTDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EFTDetail>("NetStepsCommissionsDB.FK_EFTDetails_BankAccountTypes", "EFTDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="BonusDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BonusDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BonusDetail object.
        /// </summary>
        /// <param name="bonusDetailID">Initial value of the BonusDetailID property.</param>
        /// <param name="sponsorID">Initial value of the SponsorID property.</param>
        /// <param name="downlineID">Initial value of the DownlineID property.</param>
        /// <param name="bonusTypeID">Initial value of the BonusTypeID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        public static BonusDetail CreateBonusDetail(global::System.Int32 bonusDetailID, global::System.Int32 sponsorID, global::System.Int32 downlineID, global::System.Int32 bonusTypeID, global::System.Int32 periodID)
        {
            BonusDetail bonusDetail = new BonusDetail();
            bonusDetail.BonusDetailID = bonusDetailID;
            bonusDetail.SponsorID = sponsorID;
            bonusDetail.DownlineID = downlineID;
            bonusDetail.BonusTypeID = bonusTypeID;
            bonusDetail.PeriodID = periodID;
            return bonusDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusDetailID
        {
            get
            {
                return _BonusDetailID;
            }
            set
            {
                if (_BonusDetailID != value)
                {
                    OnBonusDetailIDChanging(value);
                    ReportPropertyChanging("BonusDetailID");
                    _BonusDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BonusDetailID");
                    OnBonusDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _BonusDetailID;
        partial void OnBonusDetailIDChanging(global::System.Int32 value);
        partial void OnBonusDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SponsorID
        {
            get
            {
                return _SponsorID;
            }
            set
            {
                OnSponsorIDChanging(value);
                ReportPropertyChanging("SponsorID");
                _SponsorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SponsorID");
                OnSponsorIDChanged();
            }
        }
        private global::System.Int32 _SponsorID;
        partial void OnSponsorIDChanging(global::System.Int32 value);
        partial void OnSponsorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownlineID
        {
            get
            {
                return _DownlineID;
            }
            set
            {
                OnDownlineIDChanging(value);
                ReportPropertyChanging("DownlineID");
                _DownlineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownlineID");
                OnDownlineIDChanged();
            }
        }
        private global::System.Int32 _DownlineID;
        partial void OnDownlineIDChanging(global::System.Int32 value);
        partial void OnDownlineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusTypeID
        {
            get
            {
                return _BonusTypeID;
            }
            set
            {
                OnBonusTypeIDChanging(value);
                ReportPropertyChanging("BonusTypeID");
                _BonusTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusTypeID");
                OnBonusTypeIDChanged();
            }
        }
        private global::System.Int32 _BonusTypeID;
        partial void OnBonusTypeIDChanging(global::System.Int32 value);
        partial void OnBonusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderID;
        partial void OnOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QV
        {
            get
            {
                return _QV;
            }
            set
            {
                OnQVChanging(value);
                ReportPropertyChanging("QV");
                _QV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QV");
                OnQVChanged();
            }
        }
        private Nullable<global::System.Decimal> _QV;
        partial void OnQVChanging(Nullable<global::System.Decimal> value);
        partial void OnQVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CV
        {
            get
            {
                return _CV;
            }
            set
            {
                OnCVChanging(value);
                ReportPropertyChanging("CV");
                _CV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CV");
                OnCVChanged();
            }
        }
        private Nullable<global::System.Decimal> _CV;
        partial void OnCVChanging(Nullable<global::System.Decimal> value);
        partial void OnCVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OriginalAmount
        {
            get
            {
                return _OriginalAmount;
            }
            set
            {
                OnOriginalAmountChanging(value);
                ReportPropertyChanging("OriginalAmount");
                _OriginalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalAmount");
                OnOriginalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _OriginalAmount;
        partial void OnOriginalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnOriginalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Adjustment
        {
            get
            {
                return _Adjustment;
            }
            set
            {
                OnAdjustmentChanging(value);
                ReportPropertyChanging("Adjustment");
                _Adjustment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Adjustment");
                OnAdjustmentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Adjustment;
        partial void OnAdjustmentChanging(Nullable<global::System.Decimal> value);
        partial void OnAdjustmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PayoutAmount
        {
            get
            {
                return _PayoutAmount;
            }
            set
            {
                OnPayoutAmountChanging(value);
                ReportPropertyChanging("PayoutAmount");
                _PayoutAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayoutAmount");
                OnPayoutAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PayoutAmount;
        partial void OnPayoutAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPayoutAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountSponsorTypeID
        {
            get
            {
                return _AccountSponsorTypeID;
            }
            set
            {
                OnAccountSponsorTypeIDChanging(value);
                ReportPropertyChanging("AccountSponsorTypeID");
                _AccountSponsorTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountSponsorTypeID");
                OnAccountSponsorTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountSponsorTypeID;
        partial void OnAccountSponsorTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountSponsorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TreeLevel
        {
            get
            {
                return _TreeLevel;
            }
            set
            {
                OnTreeLevelChanging(value);
                ReportPropertyChanging("TreeLevel");
                _TreeLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreeLevel");
                OnTreeLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _TreeLevel;
        partial void OnTreeLevelChanging(Nullable<global::System.Int32> value);
        partial void OnTreeLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OriginalDetailID
        {
            get
            {
                return _OriginalDetailID;
            }
            set
            {
                OnOriginalDetailIDChanging(value);
                ReportPropertyChanging("OriginalDetailID");
                _OriginalDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalDetailID");
                OnOriginalDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OriginalDetailID;
        partial void OnOriginalDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnOriginalDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CorpOriginalAmount
        {
            get
            {
                return _CorpOriginalAmount;
            }
            set
            {
                OnCorpOriginalAmountChanging(value);
                ReportPropertyChanging("CorpOriginalAmount");
                _CorpOriginalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorpOriginalAmount");
                OnCorpOriginalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CorpOriginalAmount;
        partial void OnCorpOriginalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCorpOriginalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CorpAdjustment
        {
            get
            {
                return _CorpAdjustment;
            }
            set
            {
                OnCorpAdjustmentChanging(value);
                ReportPropertyChanging("CorpAdjustment");
                _CorpAdjustment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorpAdjustment");
                OnCorpAdjustmentChanged();
            }
        }
        private Nullable<global::System.Decimal> _CorpAdjustment;
        partial void OnCorpAdjustmentChanging(Nullable<global::System.Decimal> value);
        partial void OnCorpAdjustmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CorpPayoutAmount
        {
            get
            {
                return _CorpPayoutAmount;
            }
            set
            {
                OnCorpPayoutAmountChanging(value);
                ReportPropertyChanging("CorpPayoutAmount");
                _CorpPayoutAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorpPayoutAmount");
                OnCorpPayoutAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CorpPayoutAmount;
        partial void OnCorpPayoutAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCorpPayoutAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CorpCurrencyTypeID
        {
            get
            {
                return _CorpCurrencyTypeID;
            }
            set
            {
                OnCorpCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CorpCurrencyTypeID");
                _CorpCurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorpCurrencyTypeID");
                OnCorpCurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CorpCurrencyTypeID;
        partial void OnCorpCurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCorpCurrencyTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsDownlineID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsDownlineID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsDownlineID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsDownlineID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsDownlineID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsSponsorID", "Account")]
        public Account Account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsSponsorID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsSponsorID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> Account1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsSponsorID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkBonusDetailsSponsorID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsAccountSponsorTypeID", "AccountSponsorType")]
        public AccountSponsorType AccountSponsorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.fkBonusDetailsAccountSponsorTypeID", "AccountSponsorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.fkBonusDetailsAccountSponsorTypeID", "AccountSponsorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountSponsorType> AccountSponsorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.fkBonusDetailsAccountSponsorTypeID", "AccountSponsorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountSponsorType>("NetStepsCommissionsDB.fkBonusDetailsAccountSponsorTypeID", "AccountSponsorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsBonusTypeBonusTypes", "BonusType")]
        public BonusType BonusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fkBonusDetailsBonusTypeBonusTypes", "BonusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fkBonusDetailsBonusTypeBonusTypes", "BonusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusType> BonusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fkBonusDetailsBonusTypeBonusTypes", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusType>("NetStepsCommissionsDB.fkBonusDetailsBonusTypeBonusTypes", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsCorpCurrencyTypeID", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCorpCurrencyTypeID", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCorpCurrencyTypeID", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCorpCurrencyTypeID", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCorpCurrencyTypeID", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsCurrencyTypeCurrencyTypes", "CurrencyType")]
        public CurrencyType CurrencyType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCurrencyTypeCurrencyTypes", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCurrencyTypeCurrencyTypes", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCurrencyTypeCurrencyTypes", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusDetailsCurrencyTypeCurrencyTypes", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkBonusDetailsPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkBonusDetailsPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkBonusDetailsPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkBonusDetailsPeriodID", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="BonusRequirement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BonusRequirement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BonusRequirement object.
        /// </summary>
        /// <param name="bonusRequirementsID">Initial value of the BonusRequirementsID property.</param>
        /// <param name="bonusTypeID">Initial value of the BonusTypeID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="currencyTypeID">Initial value of the CurrencyTypeID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static BonusRequirement CreateBonusRequirement(global::System.Int32 bonusRequirementsID, global::System.Int32 bonusTypeID, global::System.Int32 countryID, global::System.Int32 currencyTypeID, global::System.DateTime effectiveDate)
        {
            BonusRequirement bonusRequirement = new BonusRequirement();
            bonusRequirement.BonusRequirementsID = bonusRequirementsID;
            bonusRequirement.BonusTypeID = bonusTypeID;
            bonusRequirement.CountryID = countryID;
            bonusRequirement.CurrencyTypeID = currencyTypeID;
            bonusRequirement.EffectiveDate = effectiveDate;
            return bonusRequirement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusRequirementsID
        {
            get
            {
                return _BonusRequirementsID;
            }
            set
            {
                if (_BonusRequirementsID != value)
                {
                    OnBonusRequirementsIDChanging(value);
                    ReportPropertyChanging("BonusRequirementsID");
                    _BonusRequirementsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BonusRequirementsID");
                    OnBonusRequirementsIDChanged();
                }
            }
        }
        private global::System.Int32 _BonusRequirementsID;
        partial void OnBonusRequirementsIDChanging(global::System.Int32 value);
        partial void OnBonusRequirementsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusTypeID
        {
            get
            {
                return _BonusTypeID;
            }
            set
            {
                OnBonusTypeIDChanging(value);
                ReportPropertyChanging("BonusTypeID");
                _BonusTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusTypeID");
                OnBonusTypeIDChanged();
            }
        }
        private global::System.Int32 _BonusTypeID;
        partial void OnBonusTypeIDChanging(global::System.Int32 value);
        partial void OnBonusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BonusAmount
        {
            get
            {
                return _BonusAmount;
            }
            set
            {
                OnBonusAmountChanging(value);
                ReportPropertyChanging("BonusAmount");
                _BonusAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusAmount");
                OnBonusAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BonusAmount;
        partial void OnBonusAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BonusPercent
        {
            get
            {
                return _BonusPercent;
            }
            set
            {
                OnBonusPercentChanging(value);
                ReportPropertyChanging("BonusPercent");
                _BonusPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusPercent");
                OnBonusPercentChanged();
            }
        }
        private Nullable<global::System.Decimal> _BonusPercent;
        partial void OnBonusPercentChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BonusMaxAmount
        {
            get
            {
                return _BonusMaxAmount;
            }
            set
            {
                OnBonusMaxAmountChanging(value);
                ReportPropertyChanging("BonusMaxAmount");
                _BonusMaxAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusMaxAmount");
                OnBonusMaxAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BonusMaxAmount;
        partial void OnBonusMaxAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusMaxAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BonusMaxPercent
        {
            get
            {
                return _BonusMaxPercent;
            }
            set
            {
                OnBonusMaxPercentChanging(value);
                ReportPropertyChanging("BonusMaxPercent");
                _BonusMaxPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusMaxPercent");
                OnBonusMaxPercentChanged();
            }
        }
        private Nullable<global::System.Decimal> _BonusMaxPercent;
        partial void OnBonusMaxPercentChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusMaxPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_BonusRequirements_BonusTypes", "BonusType")]
        public BonusType BonusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_BonusRequirements_BonusTypes", "BonusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_BonusRequirements_BonusTypes", "BonusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusType> BonusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_BonusRequirements_BonusTypes", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusType>("NetStepsCommissionsDB.FK_BonusRequirements_BonusTypes", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusRequirementsCountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkBonusRequirementsCountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkBonusRequirementsCountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkBonusRequirementsCountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("NetStepsCommissionsDB.fkBonusRequirementsCountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusRequirementsCurrencyTypeID", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusRequirementsCurrencyTypeID", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusRequirementsCurrencyTypeID", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusRequirementsCurrencyTypeID", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusRequirementsCurrencyTypeID", "CurrencyType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="BonusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BonusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BonusType object.
        /// </summary>
        /// <param name="bonusTypeID">Initial value of the BonusTypeID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        public static BonusType CreateBonusType(global::System.Int32 bonusTypeID, global::System.Boolean enabled, global::System.Boolean editable)
        {
            BonusType bonusType = new BonusType();
            bonusType.BonusTypeID = bonusTypeID;
            bonusType.Enabled = enabled;
            bonusType.Editable = editable;
            return bonusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusTypeID
        {
            get
            {
                return _BonusTypeID;
            }
            set
            {
                if (_BonusTypeID != value)
                {
                    OnBonusTypeIDChanging(value);
                    ReportPropertyChanging("BonusTypeID");
                    _BonusTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BonusTypeID");
                    OnBonusTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _BonusTypeID;
        partial void OnBonusTypeIDChanging(global::System.Int32 value);
        partial void OnBonusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BonusCode
        {
            get
            {
                return _BonusCode;
            }
            set
            {
                OnBonusCodeChanging(value);
                ReportPropertyChanging("BonusCode");
                _BonusCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BonusCode");
                OnBonusCodeChanged();
            }
        }
        private global::System.String _BonusCode;
        partial void OnBonusCodeChanging(global::System.String value);
        partial void OnBonusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BonusDesc
        {
            get
            {
                return _BonusDesc;
            }
            set
            {
                OnBonusDescChanging(value);
                ReportPropertyChanging("BonusDesc");
                _BonusDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BonusDesc");
                OnBonusDescChanged();
            }
        }
        private global::System.String _BonusDesc;
        partial void OnBonusDescChanging(global::System.String value);
        partial void OnBonusDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlanID
        {
            get
            {
                return _PlanID;
            }
            set
            {
                OnPlanIDChanging(value);
                ReportPropertyChanging("PlanID");
                _PlanID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanID");
                OnPlanIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PlanID;
        partial void OnPlanIDChanging(Nullable<global::System.Int32> value);
        partial void OnPlanIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EarningsTypeID
        {
            get
            {
                return _EarningsTypeID;
            }
            set
            {
                OnEarningsTypeIDChanging(value);
                ReportPropertyChanging("EarningsTypeID");
                _EarningsTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EarningsTypeID");
                OnEarningsTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EarningsTypeID;
        partial void OnEarningsTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEarningsTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerBonusTypes", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerBonusTypes", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerBonusTypes", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsBonusTypeBonusTypes", "BonusDetail")]
        public EntityCollection<BonusDetail> BonusDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsBonusTypeBonusTypes", "BonusDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsBonusTypeBonusTypes", "BonusDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_BonusRequirements_BonusTypes", "BonusRequirement")]
        public EntityCollection<BonusRequirement> BonusRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusRequirement>("NetStepsCommissionsDB.FK_BonusRequirements_BonusTypes", "BonusRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusRequirement>("NetStepsCommissionsDB.FK_BonusRequirements_BonusTypes", "BonusRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusValue")]
        public EntityCollection<BonusValue> BonusValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusValue>("NetStepsCommissionsDB.fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusValue>("NetStepsCommissionsDB.fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_BonusTypes_EarningsTypes", "EarningsType")]
        public EarningsType EarningsType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EarningsType>("NetStepsCommissionsDB.FK_BonusTypes_EarningsTypes", "EarningsType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EarningsType>("NetStepsCommissionsDB.FK_BonusTypes_EarningsTypes", "EarningsType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EarningsType> EarningsTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EarningsType>("NetStepsCommissionsDB.FK_BonusTypes_EarningsTypes", "EarningsType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EarningsType>("NetStepsCommissionsDB.FK_BonusTypes_EarningsTypes", "EarningsType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EnrolleeBonusRequirements_BonusTypes", "EnrolleeBonusRequirement")]
        public EntityCollection<EnrolleeBonusRequirement> EnrolleeBonusRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnrolleeBonusRequirement>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_BonusTypes", "EnrolleeBonusRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnrolleeBonusRequirement>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_BonusTypes", "EnrolleeBonusRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusTypesPlanID", "Plan")]
        public Plan Plan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("NetStepsCommissionsDB.fkBonusTypesPlanID", "Plan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("NetStepsCommissionsDB.fkBonusTypesPlanID", "Plan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Plan> PlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("NetStepsCommissionsDB.fkBonusTypesPlanID", "Plan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Plan>("NetStepsCommissionsDB.fkBonusTypesPlanID", "Plan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_BonusTypes", "ProductCreditLedger")]
        public EntityCollection<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusTypes", "ProductCreditLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusTypes", "ProductCreditLedger", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="BonusValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BonusValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BonusValue object.
        /// </summary>
        /// <param name="bonusValueID">Initial value of the BonusValueID property.</param>
        /// <param name="bonusTypeID">Initial value of the BonusTypeID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="currencyTypeID">Initial value of the CurrencyTypeID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        public static BonusValue CreateBonusValue(global::System.Int32 bonusValueID, global::System.Int32 bonusTypeID, global::System.Int32 accountID, global::System.Int32 currencyTypeID, global::System.Int32 periodID)
        {
            BonusValue bonusValue = new BonusValue();
            bonusValue.BonusValueID = bonusValueID;
            bonusValue.BonusTypeID = bonusTypeID;
            bonusValue.AccountID = accountID;
            bonusValue.CurrencyTypeID = currencyTypeID;
            bonusValue.PeriodID = periodID;
            return bonusValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusValueID
        {
            get
            {
                return _BonusValueID;
            }
            set
            {
                if (_BonusValueID != value)
                {
                    OnBonusValueIDChanging(value);
                    ReportPropertyChanging("BonusValueID");
                    _BonusValueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BonusValueID");
                    OnBonusValueIDChanged();
                }
            }
        }
        private global::System.Int32 _BonusValueID;
        partial void OnBonusValueIDChanging(global::System.Int32 value);
        partial void OnBonusValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusTypeID
        {
            get
            {
                return _BonusTypeID;
            }
            set
            {
                OnBonusTypeIDChanging(value);
                ReportPropertyChanging("BonusTypeID");
                _BonusTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusTypeID");
                OnBonusTypeIDChanged();
            }
        }
        private global::System.Int32 _BonusTypeID;
        partial void OnBonusTypeIDChanging(global::System.Int32 value);
        partial void OnBonusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BonusAmount
        {
            get
            {
                return _BonusAmount;
            }
            set
            {
                OnBonusAmountChanging(value);
                ReportPropertyChanging("BonusAmount");
                _BonusAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusAmount");
                OnBonusAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BonusAmount;
        partial void OnBonusAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBonusAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CorpBonusAmount
        {
            get
            {
                return _CorpBonusAmount;
            }
            set
            {
                OnCorpBonusAmountChanging(value);
                ReportPropertyChanging("CorpBonusAmount");
                _CorpBonusAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorpBonusAmount");
                OnCorpBonusAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CorpBonusAmount;
        partial void OnCorpBonusAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCorpBonusAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CorpCurrencyTypeID
        {
            get
            {
                return _CorpCurrencyTypeID;
            }
            set
            {
                OnCorpCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CorpCurrencyTypeID");
                _CorpCurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorpCurrencyTypeID");
                OnCorpCurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CorpCurrencyTypeID;
        partial void OnCorpCurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCorpCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerBonusValues", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerBonusValues", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerBonusValues", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusValuesAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusValuesAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkBonusValuesAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkBonusValuesAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusType")]
        public BonusType BonusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusType> BonusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusType>("NetStepsCommissionsDB.fk_BonusTypesBonusTypeID_BonusValuesBonusTypeID", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_BonusValues_CurrencyTypes", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_BonusValues_CurrencyTypes", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_BonusValues_CurrencyTypes", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_BonusValues_CurrencyTypes", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_BonusValues_CurrencyTypes", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesCorpCurrencyTypeID", "CurrencyType")]
        public CurrencyType CurrencyType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusValuesCorpCurrencyTypeID", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusValuesCorpCurrencyTypeID", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusValuesCorpCurrencyTypeID", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkBonusValuesCorpCurrencyTypeID", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesCountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkBonusValuesCountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkBonusValuesCountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkBonusValuesCountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("NetStepsCommissionsDB.fkBonusValuesCountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkBonusValuesPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkBonusValuesPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkBonusValuesPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkBonusValuesPeriodID", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_BonusValues", "ProductCreditLedger")]
        public EntityCollection<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusValues", "ProductCreditLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusValues", "ProductCreditLedger", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Calculation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calculation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calculation object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        public static Calculation CreateCalculation(global::System.Int32 accountID, global::System.Decimal value, global::System.Int32 periodID, global::System.Int32 calculationTypeID)
        {
            Calculation calculation = new Calculation();
            calculation.AccountID = accountID;
            calculation.Value = value;
            calculation.PeriodID = periodID;
            calculation.CalculationTypeID = calculationTypeID;
            return calculation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                if (_CalculationTypeID != value)
                {
                    OnCalculationTypeIDChanging(value);
                    ReportPropertyChanging("CalculationTypeID");
                    _CalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationTypeID");
                    OnCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CalculationsOverriden_Calculations", "CalculationsOverridden")]
        public CalculationsOverridden CalculationsOverridden
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationsOverridden>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "CalculationsOverridden").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationsOverridden>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "CalculationsOverridden").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationsOverridden> CalculationsOverriddenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationsOverridden>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "CalculationsOverridden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationsOverridden>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "CalculationsOverridden", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "CalculationType")]
        public CalculationType CalculationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "CalculationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "CalculationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationType> CalculationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "CalculationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationType>("NetStepsCommissionsDB.fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "CalculationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsPeriodID", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CalculationOverride")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationOverride : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationOverride object.
        /// </summary>
        /// <param name="calculationOverrideID">Initial value of the CalculationOverrideID property.</param>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="overrideTypeID">Initial value of the OverrideTypeID property.</param>
        /// <param name="overrideReasonID">Initial value of the OverrideReasonID property.</param>
        /// <param name="overrideIfNull">Initial value of the OverrideIfNull property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updatedDate">Initial value of the UpdatedDate property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static CalculationOverride CreateCalculationOverride(global::System.Int32 calculationOverrideID, global::System.Int32 calculationTypeID, global::System.Int32 accountID, global::System.Int32 periodID, global::System.Int32 overrideTypeID, global::System.Int32 overrideReasonID, global::System.Boolean overrideIfNull, global::System.DateTime createdDate, global::System.DateTime updatedDate, global::System.Byte[] dataVersion)
        {
            CalculationOverride calculationOverride = new CalculationOverride();
            calculationOverride.CalculationOverrideID = calculationOverrideID;
            calculationOverride.CalculationTypeID = calculationTypeID;
            calculationOverride.AccountID = accountID;
            calculationOverride.PeriodID = periodID;
            calculationOverride.OverrideTypeID = overrideTypeID;
            calculationOverride.OverrideReasonID = overrideReasonID;
            calculationOverride.OverrideIfNull = overrideIfNull;
            calculationOverride.CreatedDate = createdDate;
            calculationOverride.UpdatedDate = updatedDate;
            calculationOverride.DataVersion = dataVersion;
            return calculationOverride;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationOverrideID
        {
            get
            {
                return _CalculationOverrideID;
            }
            set
            {
                if (_CalculationOverrideID != value)
                {
                    OnCalculationOverrideIDChanging(value);
                    ReportPropertyChanging("CalculationOverrideID");
                    _CalculationOverrideID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationOverrideID");
                    OnCalculationOverrideIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationOverrideID;
        partial void OnCalculationOverrideIDChanging(global::System.Int32 value);
        partial void OnCalculationOverrideIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                OnCalculationTypeIDChanging(value);
                ReportPropertyChanging("CalculationTypeID");
                _CalculationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculationTypeID");
                OnCalculationTypeIDChanged();
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _NewValue;
        partial void OnNewValueChanging(Nullable<global::System.Decimal> value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideTypeID
        {
            get
            {
                return _OverrideTypeID;
            }
            set
            {
                OnOverrideTypeIDChanging(value);
                ReportPropertyChanging("OverrideTypeID");
                _OverrideTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideTypeID");
                OnOverrideTypeIDChanged();
            }
        }
        private global::System.Int32 _OverrideTypeID;
        partial void OnOverrideTypeIDChanging(global::System.Int32 value);
        partial void OnOverrideTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideReasonID
        {
            get
            {
                return _OverrideReasonID;
            }
            set
            {
                OnOverrideReasonIDChanging(value);
                ReportPropertyChanging("OverrideReasonID");
                _OverrideReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideReasonID");
                OnOverrideReasonIDChanged();
            }
        }
        private global::System.Int32 _OverrideReasonID;
        partial void OnOverrideReasonIDChanging(global::System.Int32 value);
        partial void OnOverrideReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OverrideIfNull
        {
            get
            {
                return _OverrideIfNull;
            }
            set
            {
                OnOverrideIfNullChanging(value);
                ReportPropertyChanging("OverrideIfNull");
                _OverrideIfNull = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideIfNull");
                OnOverrideIfNullChanged();
            }
        }
        private global::System.Boolean _OverrideIfNull;
        partial void OnOverrideIfNullChanging(global::System.Boolean value);
        partial void OnOverrideIfNullChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationSourceID
        {
            get
            {
                return _ApplicationSourceID;
            }
            set
            {
                OnApplicationSourceIDChanging(value);
                ReportPropertyChanging("ApplicationSourceID");
                _ApplicationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSourceID");
                OnApplicationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationSourceID;
        partial void OnApplicationSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private global::System.DateTime _UpdatedDate;
        partial void OnUpdatedDateChanging(global::System.DateTime value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationOverridesAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationOverridesAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationOverridesAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationOverridesAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesCalculationTypes", "CalculationType")]
        public CalculationType CalculationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationOverridesCalculationTypes", "CalculationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationOverridesCalculationTypes", "CalculationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationType> CalculationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationOverridesCalculationTypes", "CalculationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationOverridesCalculationTypes", "CalculationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesOverrideReasons", "OverrideReason")]
        public OverrideReason OverrideReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkCalculationOverridesOverrideReasons", "OverrideReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkCalculationOverridesOverrideReasons", "OverrideReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverrideReason> OverrideReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkCalculationOverridesOverrideReasons", "OverrideReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverrideReason>("NetStepsCommissionsDB.fkCalculationOverridesOverrideReasons", "OverrideReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesOverrideTypes", "OverrideType")]
        public OverrideType OverrideType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideType>("NetStepsCommissionsDB.fkCalculationOverridesOverrideTypes", "OverrideType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideType>("NetStepsCommissionsDB.fkCalculationOverridesOverrideTypes", "OverrideType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverrideType> OverrideTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideType>("NetStepsCommissionsDB.fkCalculationOverridesOverrideTypes", "OverrideType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverrideType>("NetStepsCommissionsDB.fkCalculationOverridesOverrideTypes", "OverrideType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationOverridesPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationOverridesPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationOverridesPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationOverridesPeriodID", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CalculationOverridesAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationOverridesAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationOverridesAudit object.
        /// </summary>
        /// <param name="calculationOverrideAuditID">Initial value of the CalculationOverrideAuditID property.</param>
        /// <param name="calculationOverrideID">Initial value of the CalculationOverrideID property.</param>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="overrideTypeID">Initial value of the OverrideTypeID property.</param>
        /// <param name="overrideReasonID">Initial value of the OverrideReasonID property.</param>
        /// <param name="overrideIfNull">Initial value of the OverrideIfNull property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updatedDate">Initial value of the UpdatedDate property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="systemUser">Initial value of the SystemUser property.</param>
        /// <param name="auditDate">Initial value of the AuditDate property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static CalculationOverridesAudit CreateCalculationOverridesAudit(global::System.Int32 calculationOverrideAuditID, global::System.Int32 calculationOverrideID, global::System.Int32 calculationTypeID, global::System.Int32 accountID, global::System.Int32 periodID, global::System.Int32 overrideTypeID, global::System.Int32 overrideReasonID, global::System.Boolean overrideIfNull, global::System.DateTime createdDate, global::System.DateTime updatedDate, global::System.String operation, global::System.String systemUser, global::System.DateTime auditDate, global::System.Byte[] dataVersion)
        {
            CalculationOverridesAudit calculationOverridesAudit = new CalculationOverridesAudit();
            calculationOverridesAudit.CalculationOverrideAuditID = calculationOverrideAuditID;
            calculationOverridesAudit.CalculationOverrideID = calculationOverrideID;
            calculationOverridesAudit.CalculationTypeID = calculationTypeID;
            calculationOverridesAudit.AccountID = accountID;
            calculationOverridesAudit.PeriodID = periodID;
            calculationOverridesAudit.OverrideTypeID = overrideTypeID;
            calculationOverridesAudit.OverrideReasonID = overrideReasonID;
            calculationOverridesAudit.OverrideIfNull = overrideIfNull;
            calculationOverridesAudit.CreatedDate = createdDate;
            calculationOverridesAudit.UpdatedDate = updatedDate;
            calculationOverridesAudit.Operation = operation;
            calculationOverridesAudit.SystemUser = systemUser;
            calculationOverridesAudit.AuditDate = auditDate;
            calculationOverridesAudit.DataVersion = dataVersion;
            return calculationOverridesAudit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationOverrideAuditID
        {
            get
            {
                return _CalculationOverrideAuditID;
            }
            set
            {
                if (_CalculationOverrideAuditID != value)
                {
                    OnCalculationOverrideAuditIDChanging(value);
                    ReportPropertyChanging("CalculationOverrideAuditID");
                    _CalculationOverrideAuditID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationOverrideAuditID");
                    OnCalculationOverrideAuditIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationOverrideAuditID;
        partial void OnCalculationOverrideAuditIDChanging(global::System.Int32 value);
        partial void OnCalculationOverrideAuditIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationOverrideID
        {
            get
            {
                return _CalculationOverrideID;
            }
            set
            {
                OnCalculationOverrideIDChanging(value);
                ReportPropertyChanging("CalculationOverrideID");
                _CalculationOverrideID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculationOverrideID");
                OnCalculationOverrideIDChanged();
            }
        }
        private global::System.Int32 _CalculationOverrideID;
        partial void OnCalculationOverrideIDChanging(global::System.Int32 value);
        partial void OnCalculationOverrideIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                OnCalculationTypeIDChanging(value);
                ReportPropertyChanging("CalculationTypeID");
                _CalculationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculationTypeID");
                OnCalculationTypeIDChanged();
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _NewValue;
        partial void OnNewValueChanging(Nullable<global::System.Decimal> value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideTypeID
        {
            get
            {
                return _OverrideTypeID;
            }
            set
            {
                OnOverrideTypeIDChanging(value);
                ReportPropertyChanging("OverrideTypeID");
                _OverrideTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideTypeID");
                OnOverrideTypeIDChanged();
            }
        }
        private global::System.Int32 _OverrideTypeID;
        partial void OnOverrideTypeIDChanging(global::System.Int32 value);
        partial void OnOverrideTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideReasonID
        {
            get
            {
                return _OverrideReasonID;
            }
            set
            {
                OnOverrideReasonIDChanging(value);
                ReportPropertyChanging("OverrideReasonID");
                _OverrideReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideReasonID");
                OnOverrideReasonIDChanged();
            }
        }
        private global::System.Int32 _OverrideReasonID;
        partial void OnOverrideReasonIDChanging(global::System.Int32 value);
        partial void OnOverrideReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OverrideIfNull
        {
            get
            {
                return _OverrideIfNull;
            }
            set
            {
                OnOverrideIfNullChanging(value);
                ReportPropertyChanging("OverrideIfNull");
                _OverrideIfNull = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideIfNull");
                OnOverrideIfNullChanged();
            }
        }
        private global::System.Boolean _OverrideIfNull;
        partial void OnOverrideIfNullChanging(global::System.Boolean value);
        partial void OnOverrideIfNullChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationSourceID
        {
            get
            {
                return _ApplicationSourceID;
            }
            set
            {
                OnApplicationSourceIDChanging(value);
                ReportPropertyChanging("ApplicationSourceID");
                _ApplicationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSourceID");
                OnApplicationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationSourceID;
        partial void OnApplicationSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private global::System.DateTime _UpdatedDate;
        partial void OnUpdatedDateChanging(global::System.DateTime value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SystemUser
        {
            get
            {
                return _SystemUser;
            }
            set
            {
                OnSystemUserChanging(value);
                ReportPropertyChanging("SystemUser");
                _SystemUser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SystemUser");
                OnSystemUserChanged();
            }
        }
        private global::System.String _SystemUser;
        partial void OnSystemUserChanging(global::System.String value);
        partial void OnSystemUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AuditDate
        {
            get
            {
                return _AuditDate;
            }
            set
            {
                OnAuditDateChanging(value);
                ReportPropertyChanging("AuditDate");
                _AuditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditDate");
                OnAuditDateChanged();
            }
        }
        private global::System.DateTime _AuditDate;
        partial void OnAuditDateChanging(global::System.DateTime value);
        partial void OnAuditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CalculationsOverridden")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationsOverridden : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationsOverridden object.
        /// </summary>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="originalValue">Initial value of the OriginalValue property.</param>
        /// <param name="newValue">Initial value of the NewValue property.</param>
        public static CalculationsOverridden CreateCalculationsOverridden(global::System.Int32 calculationTypeID, global::System.Int32 accountID, global::System.Int32 periodID, global::System.Decimal originalValue, global::System.Decimal newValue)
        {
            CalculationsOverridden calculationsOverridden = new CalculationsOverridden();
            calculationsOverridden.CalculationTypeID = calculationTypeID;
            calculationsOverridden.AccountID = accountID;
            calculationsOverridden.PeriodID = periodID;
            calculationsOverridden.OriginalValue = originalValue;
            calculationsOverridden.NewValue = newValue;
            return calculationsOverridden;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                if (_CalculationTypeID != value)
                {
                    OnCalculationTypeIDChanging(value);
                    ReportPropertyChanging("CalculationTypeID");
                    _CalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationTypeID");
                    OnCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OriginalValue
        {
            get
            {
                return _OriginalValue;
            }
            set
            {
                OnOriginalValueChanging(value);
                ReportPropertyChanging("OriginalValue");
                _OriginalValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalValue");
                OnOriginalValueChanged();
            }
        }
        private global::System.Decimal _OriginalValue;
        partial void OnOriginalValueChanging(global::System.Decimal value);
        partial void OnOriginalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.Decimal _NewValue;
        partial void OnNewValueChanging(global::System.Decimal value);
        partial void OnNewValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CalculationsOverriden_Calculations", "Calculation")]
        public Calculation Calculation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calculation>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "Calculation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calculation>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "Calculation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Calculation> CalculationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calculation>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "Calculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Calculation>("NetStepsCommissionsDB.FK_CalculationsOverriden_Calculations", "Calculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsOverriddenPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsOverriddenPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsOverriddenPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsOverriddenPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsOverriddenPeriodID", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CalculationsRealTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationsRealTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationsRealTime object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static CalculationsRealTime CreateCalculationsRealTime(global::System.Int32 accountID, global::System.Decimal value, global::System.Int32 periodID, global::System.Int32 calculationTypeID, global::System.DateTime effectiveDate)
        {
            CalculationsRealTime calculationsRealTime = new CalculationsRealTime();
            calculationsRealTime.AccountID = accountID;
            calculationsRealTime.Value = value;
            calculationsRealTime.PeriodID = periodID;
            calculationsRealTime.CalculationTypeID = calculationTypeID;
            calculationsRealTime.EffectiveDate = effectiveDate;
            return calculationsRealTime;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                if (_CalculationTypeID != value)
                {
                    OnCalculationTypeIDChanging(value);
                    ReportPropertyChanging("CalculationTypeID");
                    _CalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationTypeID");
                    OnCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                if (_EffectiveDate != value)
                {
                    OnEffectiveDateChanging(value);
                    ReportPropertyChanging("EffectiveDate");
                    _EffectiveDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectiveDate");
                    OnEffectiveDateChanged();
                }
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimeAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsRealTimeAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsRealTimeAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsRealTimeAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkCalculationsRealTimeAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimeCalculationTypeID", "CalculationType")]
        public CalculationType CalculationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationsRealTimeCalculationTypeID", "CalculationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationsRealTimeCalculationTypeID", "CalculationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationType> CalculationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationsRealTimeCalculationTypeID", "CalculationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationType>("NetStepsCommissionsDB.fkCalculationsRealTimeCalculationTypeID", "CalculationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimePeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsRealTimePeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsRealTimePeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsRealTimePeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkCalculationsRealTimePeriodID", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CalculationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationType object.
        /// </summary>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="userOverridable">Initial value of the UserOverridable property.</param>
        /// <param name="realTime">Initial value of the RealTime property.</param>
        public static CalculationType CreateCalculationType(global::System.Int32 calculationTypeID, global::System.Boolean userOverridable, global::System.Boolean realTime)
        {
            CalculationType calculationType = new CalculationType();
            calculationType.CalculationTypeID = calculationTypeID;
            calculationType.UserOverridable = userOverridable;
            calculationType.RealTime = realTime;
            return calculationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                if (_CalculationTypeID != value)
                {
                    OnCalculationTypeIDChanging(value);
                    ReportPropertyChanging("CalculationTypeID");
                    _CalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationTypeID");
                    OnCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UserOverridable
        {
            get
            {
                return _UserOverridable;
            }
            set
            {
                OnUserOverridableChanging(value);
                ReportPropertyChanging("UserOverridable");
                _UserOverridable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserOverridable");
                OnUserOverridableChanged();
            }
        }
        private global::System.Boolean _UserOverridable;
        partial void OnUserOverridableChanging(global::System.Boolean value);
        partial void OnUserOverridableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RealTime
        {
            get
            {
                return _RealTime;
            }
            set
            {
                OnRealTimeChanging(value);
                ReportPropertyChanging("RealTime");
                _RealTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RealTime");
                OnRealTimeChanged();
            }
        }
        private global::System.Boolean _RealTime;
        partial void OnRealTimeChanging(global::System.Boolean value);
        partial void OnRealTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesCalculationTypes", "CalculationOverride")]
        public EntityCollection<CalculationOverride> CalculationOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesCalculationTypes", "CalculationOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesCalculationTypes", "CalculationOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "Calculation")]
        public EntityCollection<Calculation> Calculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Calculation>("NetStepsCommissionsDB.fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "Calculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Calculation>("NetStepsCommissionsDB.fk_CalculationTypesCalculationTypeID_CalculationsCalculationTypeID", "Calculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimeCalculationTypeID", "CalculationsRealTime")]
        public EntityCollection<CalculationsRealTime> CalculationsRealTimes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationsRealTime>("NetStepsCommissionsDB.fkCalculationsRealTimeCalculationTypeID", "CalculationsRealTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationsRealTime>("NetStepsCommissionsDB.fkCalculationsRealTimeCalculationTypeID", "CalculationsRealTime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_OrderCalculations_CalculationTypes", "OrderCalculation")]
        public EntityCollection<OrderCalculation> OrderCalculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderCalculation>("NetStepsCommissionsDB.FK_OrderCalculations_CalculationTypes", "OrderCalculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderCalculation>("NetStepsCommissionsDB.FK_OrderCalculations_CalculationTypes", "OrderCalculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PeriodCalculationsCalculationTypes", "PeriodCalculation")]
        public EntityCollection<PeriodCalculation> PeriodCalculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PeriodCalculation>("NetStepsCommissionsDB.FK_PeriodCalculationsCalculationTypes", "PeriodCalculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PeriodCalculation>("NetStepsCommissionsDB.FK_PeriodCalculationsCalculationTypes", "PeriodCalculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkOrderItemCalculationsCalculationTypes", "OrderItemCalculation")]
        public EntityCollection<OrderItemCalculation> OrderItemCalculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItemCalculation>("NetStepsCommissionsDB.fkOrderItemCalculationsCalculationTypes", "OrderItemCalculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItemCalculation>("NetStepsCommissionsDB.fkOrderItemCalculationsCalculationTypes", "OrderItemCalculation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Check")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Check : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Check object.
        /// </summary>
        /// <param name="checkID">Initial value of the CheckID property.</param>
        /// <param name="disbursementDetailID">Initial value of the DisbursementDetailID property.</param>
        /// <param name="checkNumber">Initial value of the CheckNumber property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="checkIssueDate">Initial value of the CheckIssueDate property.</param>
        /// <param name="checkStatusID">Initial value of the CheckStatusID property.</param>
        public static Check CreateCheck(global::System.Int32 checkID, global::System.Int32 disbursementDetailID, global::System.Int32 checkNumber, global::System.Decimal amount, global::System.DateTime checkIssueDate, global::System.Int32 checkStatusID)
        {
            Check check = new Check();
            check.CheckID = checkID;
            check.DisbursementDetailID = disbursementDetailID;
            check.CheckNumber = checkNumber;
            check.Amount = amount;
            check.CheckIssueDate = checkIssueDate;
            check.CheckStatusID = checkStatusID;
            return check;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckID
        {
            get
            {
                return _CheckID;
            }
            set
            {
                if (_CheckID != value)
                {
                    OnCheckIDChanging(value);
                    ReportPropertyChanging("CheckID");
                    _CheckID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CheckID");
                    OnCheckIDChanged();
                }
            }
        }
        private global::System.Int32 _CheckID;
        partial void OnCheckIDChanging(global::System.Int32 value);
        partial void OnCheckIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementDetailID
        {
            get
            {
                return _DisbursementDetailID;
            }
            set
            {
                OnDisbursementDetailIDChanging(value);
                ReportPropertyChanging("DisbursementDetailID");
                _DisbursementDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementDetailID");
                OnDisbursementDetailIDChanged();
            }
        }
        private global::System.Int32 _DisbursementDetailID;
        partial void OnDisbursementDetailIDChanging(global::System.Int32 value);
        partial void OnDisbursementDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressID;
        partial void OnAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.Int32 _CheckNumber;
        partial void OnCheckNumberChanging(global::System.Int32 value);
        partial void OnCheckNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameOnCheck
        {
            get
            {
                return _NameOnCheck;
            }
            set
            {
                OnNameOnCheckChanging(value);
                ReportPropertyChanging("NameOnCheck");
                _NameOnCheck = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameOnCheck");
                OnNameOnCheckChanged();
            }
        }
        private global::System.String _NameOnCheck;
        partial void OnNameOnCheckChanging(global::System.String value);
        partial void OnNameOnCheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CheckIssueDate
        {
            get
            {
                return _CheckIssueDate;
            }
            set
            {
                OnCheckIssueDateChanging(value);
                ReportPropertyChanging("CheckIssueDate");
                _CheckIssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckIssueDate");
                OnCheckIssueDateChanged();
            }
        }
        private global::System.DateTime _CheckIssueDate;
        partial void OnCheckIssueDateChanging(global::System.DateTime value);
        partial void OnCheckIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckStatusID
        {
            get
            {
                return _CheckStatusID;
            }
            set
            {
                OnCheckStatusIDChanging(value);
                ReportPropertyChanging("CheckStatusID");
                _CheckStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckStatusID");
                OnCheckStatusIDChanged();
            }
        }
        private global::System.Int32 _CheckStatusID;
        partial void OnCheckStatusIDChanging(global::System.Int32 value);
        partial void OnCheckStatusIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkChecksAddressID", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("NetStepsCommissionsDB.fkChecksAddressID", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("NetStepsCommissionsDB.fkChecksAddressID", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("NetStepsCommissionsDB.fkChecksAddressID", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("NetStepsCommissionsDB.fkChecksAddressID", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_Checks_CheckStatuses", "CheckStatus")]
        public CheckStatus CheckStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckStatus>("NetStepsCommissionsDB.FK_Checks_CheckStatuses", "CheckStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckStatus>("NetStepsCommissionsDB.FK_Checks_CheckStatuses", "CheckStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CheckStatus> CheckStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckStatus>("NetStepsCommissionsDB.FK_Checks_CheckStatuses", "CheckStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CheckStatus>("NetStepsCommissionsDB.FK_Checks_CheckStatuses", "CheckStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkChecksDisbursementDetailID", "DisbursementDetail")]
        public DisbursementDetail DisbursementDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementDetail>("NetStepsCommissionsDB.fkChecksDisbursementDetailID", "DisbursementDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementDetail>("NetStepsCommissionsDB.fkChecksDisbursementDetailID", "DisbursementDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementDetail> DisbursementDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementDetail>("NetStepsCommissionsDB.fkChecksDisbursementDetailID", "DisbursementDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementDetail>("NetStepsCommissionsDB.fkChecksDisbursementDetailID", "DisbursementDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CheckHold")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckHold : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CheckHold object.
        /// </summary>
        /// <param name="checkHoldID">Initial value of the CheckHoldID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="reasonID">Initial value of the ReasonID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updatedDate">Initial value of the UpdatedDate property.</param>
        public static CheckHold CreateCheckHold(global::System.Int32 checkHoldID, global::System.Int32 accountID, global::System.Int32 userID, global::System.Int32 reasonID, global::System.DateTime startDate, global::System.DateTime createdDate, global::System.DateTime updatedDate)
        {
            CheckHold checkHold = new CheckHold();
            checkHold.CheckHoldID = checkHoldID;
            checkHold.AccountID = accountID;
            checkHold.UserID = userID;
            checkHold.ReasonID = reasonID;
            checkHold.StartDate = startDate;
            checkHold.CreatedDate = createdDate;
            checkHold.UpdatedDate = updatedDate;
            return checkHold;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckHoldID
        {
            get
            {
                return _CheckHoldID;
            }
            set
            {
                if (_CheckHoldID != value)
                {
                    OnCheckHoldIDChanging(value);
                    ReportPropertyChanging("CheckHoldID");
                    _CheckHoldID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CheckHoldID");
                    OnCheckHoldIDChanged();
                }
            }
        }
        private global::System.Int32 _CheckHoldID;
        partial void OnCheckHoldIDChanging(global::System.Int32 value);
        partial void OnCheckHoldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReasonID
        {
            get
            {
                return _ReasonID;
            }
            set
            {
                OnReasonIDChanging(value);
                ReportPropertyChanging("ReasonID");
                _ReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReasonID");
                OnReasonIDChanged();
            }
        }
        private global::System.Int32 _ReasonID;
        partial void OnReasonIDChanging(global::System.Int32 value);
        partial void OnReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HoldUntil
        {
            get
            {
                return _HoldUntil;
            }
            set
            {
                OnHoldUntilChanging(value);
                ReportPropertyChanging("HoldUntil");
                _HoldUntil = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoldUntil");
                OnHoldUntilChanged();
            }
        }
        private Nullable<global::System.DateTime> _HoldUntil;
        partial void OnHoldUntilChanging(Nullable<global::System.DateTime> value);
        partial void OnHoldUntilChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationSourceID
        {
            get
            {
                return _ApplicationSourceID;
            }
            set
            {
                OnApplicationSourceIDChanging(value);
                ReportPropertyChanging("ApplicationSourceID");
                _ApplicationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSourceID");
                OnApplicationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationSourceID;
        partial void OnApplicationSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private global::System.DateTime _UpdatedDate;
        partial void OnUpdatedDateChanging(global::System.DateTime value);
        partial void OnUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCheckHoldsAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCheckHoldsAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCheckHoldsAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkCheckHoldsAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkCheckHoldsAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CheckHolds_CheckHoldReasons", "OverrideReason")]
        public OverrideReason OverrideReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.FK_CheckHolds_CheckHoldReasons", "OverrideReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.FK_CheckHolds_CheckHoldReasons", "OverrideReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverrideReason> OverrideReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReason>("NetStepsCommissionsDB.FK_CheckHolds_CheckHoldReasons", "OverrideReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverrideReason>("NetStepsCommissionsDB.FK_CheckHolds_CheckHoldReasons", "OverrideReason", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CheckHoldReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckHoldReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CheckHoldReason object.
        /// </summary>
        /// <param name="reasonID">Initial value of the ReasonID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        public static CheckHoldReason CreateCheckHoldReason(global::System.Int32 reasonID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable)
        {
            CheckHoldReason checkHoldReason = new CheckHoldReason();
            checkHoldReason.ReasonID = reasonID;
            checkHoldReason.Name = name;
            checkHoldReason.Enabled = enabled;
            checkHoldReason.Editable = editable;
            return checkHoldReason;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReasonID
        {
            get
            {
                return _ReasonID;
            }
            set
            {
                if (_ReasonID != value)
                {
                    OnReasonIDChanging(value);
                    ReportPropertyChanging("ReasonID");
                    _ReasonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReasonID");
                    OnReasonIDChanged();
                }
            }
        }
        private global::System.Int32 _ReasonID;
        partial void OnReasonIDChanging(global::System.Int32 value);
        partial void OnReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CheckHoldsAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckHoldsAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CheckHoldsAudit object.
        /// </summary>
        /// <param name="checkHoldAuditID">Initial value of the CheckHoldAuditID property.</param>
        /// <param name="checkHoldID">Initial value of the CheckHoldID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="reasonID">Initial value of the ReasonID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updatedDate">Initial value of the UpdatedDate property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="systemUser">Initial value of the SystemUser property.</param>
        /// <param name="auditDate">Initial value of the AuditDate property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static CheckHoldsAudit CreateCheckHoldsAudit(global::System.Int32 checkHoldAuditID, global::System.Int32 checkHoldID, global::System.Int32 accountID, global::System.Int32 userID, global::System.Int32 reasonID, global::System.DateTime startDate, global::System.DateTime createdDate, global::System.DateTime updatedDate, global::System.String operation, global::System.String systemUser, global::System.DateTime auditDate, global::System.Byte[] dataVersion)
        {
            CheckHoldsAudit checkHoldsAudit = new CheckHoldsAudit();
            checkHoldsAudit.CheckHoldAuditID = checkHoldAuditID;
            checkHoldsAudit.CheckHoldID = checkHoldID;
            checkHoldsAudit.AccountID = accountID;
            checkHoldsAudit.UserID = userID;
            checkHoldsAudit.ReasonID = reasonID;
            checkHoldsAudit.StartDate = startDate;
            checkHoldsAudit.CreatedDate = createdDate;
            checkHoldsAudit.UpdatedDate = updatedDate;
            checkHoldsAudit.Operation = operation;
            checkHoldsAudit.SystemUser = systemUser;
            checkHoldsAudit.AuditDate = auditDate;
            checkHoldsAudit.DataVersion = dataVersion;
            return checkHoldsAudit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckHoldAuditID
        {
            get
            {
                return _CheckHoldAuditID;
            }
            set
            {
                if (_CheckHoldAuditID != value)
                {
                    OnCheckHoldAuditIDChanging(value);
                    ReportPropertyChanging("CheckHoldAuditID");
                    _CheckHoldAuditID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CheckHoldAuditID");
                    OnCheckHoldAuditIDChanged();
                }
            }
        }
        private global::System.Int32 _CheckHoldAuditID;
        partial void OnCheckHoldAuditIDChanging(global::System.Int32 value);
        partial void OnCheckHoldAuditIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckHoldID
        {
            get
            {
                return _CheckHoldID;
            }
            set
            {
                OnCheckHoldIDChanging(value);
                ReportPropertyChanging("CheckHoldID");
                _CheckHoldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckHoldID");
                OnCheckHoldIDChanged();
            }
        }
        private global::System.Int32 _CheckHoldID;
        partial void OnCheckHoldIDChanging(global::System.Int32 value);
        partial void OnCheckHoldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReasonID
        {
            get
            {
                return _ReasonID;
            }
            set
            {
                OnReasonIDChanging(value);
                ReportPropertyChanging("ReasonID");
                _ReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReasonID");
                OnReasonIDChanged();
            }
        }
        private global::System.Int32 _ReasonID;
        partial void OnReasonIDChanging(global::System.Int32 value);
        partial void OnReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HoldUntil
        {
            get
            {
                return _HoldUntil;
            }
            set
            {
                OnHoldUntilChanging(value);
                ReportPropertyChanging("HoldUntil");
                _HoldUntil = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoldUntil");
                OnHoldUntilChanged();
            }
        }
        private Nullable<global::System.DateTime> _HoldUntil;
        partial void OnHoldUntilChanging(Nullable<global::System.DateTime> value);
        partial void OnHoldUntilChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationSourceID
        {
            get
            {
                return _ApplicationSourceID;
            }
            set
            {
                OnApplicationSourceIDChanging(value);
                ReportPropertyChanging("ApplicationSourceID");
                _ApplicationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSourceID");
                OnApplicationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationSourceID;
        partial void OnApplicationSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private global::System.DateTime _UpdatedDate;
        partial void OnUpdatedDateChanging(global::System.DateTime value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SystemUser
        {
            get
            {
                return _SystemUser;
            }
            set
            {
                OnSystemUserChanging(value);
                ReportPropertyChanging("SystemUser");
                _SystemUser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SystemUser");
                OnSystemUserChanged();
            }
        }
        private global::System.String _SystemUser;
        partial void OnSystemUserChanging(global::System.String value);
        partial void OnSystemUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AuditDate
        {
            get
            {
                return _AuditDate;
            }
            set
            {
                OnAuditDateChanging(value);
                ReportPropertyChanging("AuditDate");
                _AuditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditDate");
                OnAuditDateChanged();
            }
        }
        private global::System.DateTime _AuditDate;
        partial void OnAuditDateChanging(global::System.DateTime value);
        partial void OnAuditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CheckStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CheckStatus object.
        /// </summary>
        /// <param name="checkStatusID">Initial value of the CheckStatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        public static CheckStatus CreateCheckStatus(global::System.Int32 checkStatusID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable)
        {
            CheckStatus checkStatus = new CheckStatus();
            checkStatus.CheckStatusID = checkStatusID;
            checkStatus.Name = name;
            checkStatus.Enabled = enabled;
            checkStatus.Editable = editable;
            return checkStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckStatusID
        {
            get
            {
                return _CheckStatusID;
            }
            set
            {
                if (_CheckStatusID != value)
                {
                    OnCheckStatusIDChanging(value);
                    ReportPropertyChanging("CheckStatusID");
                    _CheckStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CheckStatusID");
                    OnCheckStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _CheckStatusID;
        partial void OnCheckStatusIDChanging(global::System.Int32 value);
        partial void OnCheckStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_Checks_CheckStatuses", "Check")]
        public EntityCollection<Check> Checks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Check>("NetStepsCommissionsDB.FK_Checks_CheckStatuses", "Check");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Check>("NetStepsCommissionsDB.FK_Checks_CheckStatuses", "Check", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        /// <param name="currencyTypeID">Initial value of the CurrencyTypeID property.</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String countryCode, global::System.String countryName, global::System.Int32 currencyTypeID)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.CountryCode = countryCode;
            country.CountryName = countryName;
            country.CurrencyTypeID = currencyTypeID;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_Accounts_Countries", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("NetStepsCommissionsDB.FK_Accounts_Countries", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("NetStepsCommissionsDB.FK_Accounts_Countries", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusRequirementsCountryID", "BonusRequirement")]
        public EntityCollection<BonusRequirement> BonusRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusRequirement>("NetStepsCommissionsDB.fkBonusRequirementsCountryID", "BonusRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusRequirement>("NetStepsCommissionsDB.fkBonusRequirementsCountryID", "BonusRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesCountryID", "BonusValue")]
        public EntityCollection<BonusValue> BonusValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesCountryID", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesCountryID", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_CurrencyCurrencyID_CountriesCurrencyID", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fk_CurrencyCurrencyID_CountriesCurrencyID", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fk_CurrencyCurrencyID_CountriesCurrencyID", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fk_CurrencyCurrencyID_CountriesCurrencyID", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.fk_CurrencyCurrencyID_CountriesCurrencyID", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EnrolleeBonusRequirements_Countries", "EnrolleeBonusRequirement")]
        public EntityCollection<EnrolleeBonusRequirement> EnrolleeBonusRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnrolleeBonusRequirement>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_Countries", "EnrolleeBonusRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnrolleeBonusRequirement>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_Countries", "EnrolleeBonusRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementFeesCountryID", "DisbursementFee")]
        public EntityCollection<DisbursementFee> DisbursementFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.fkDisbursementFeesCountryID", "DisbursementFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.fkDisbursementFeesCountryID", "DisbursementFee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementMinimumsCountryID", "DisbursementMinimum")]
        public EntityCollection<DisbursementMinimum> DisbursementMinimums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementMinimum>("NetStepsCommissionsDB.fkDisbursementMinimumsCountryID", "DisbursementMinimum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementMinimum>("NetStepsCommissionsDB.fkDisbursementMinimumsCountryID", "DisbursementMinimum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementTypeCountriesCountryID", "DisbursementTypeCountry")]
        public EntityCollection<DisbursementTypeCountry> DisbursementTypeCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementTypeCountry>("NetStepsCommissionsDB.fkDisbursementTypeCountriesCountryID", "DisbursementTypeCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementTypeCountry>("NetStepsCommissionsDB.fkDisbursementTypeCountriesCountryID", "DisbursementTypeCountry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CurrencyExchanx")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyExchanx : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyExchanx object.
        /// </summary>
        /// <param name="currencyExchangeID">Initial value of the CurrencyExchangeID property.</param>
        /// <param name="fromCurrencyTypeID">Initial value of the FromCurrencyTypeID property.</param>
        /// <param name="toCurrencyTypeID">Initial value of the ToCurrencyTypeID property.</param>
        /// <param name="exchangeRate">Initial value of the ExchangeRate property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static CurrencyExchanx CreateCurrencyExchanx(global::System.Int32 currencyExchangeID, global::System.Int32 fromCurrencyTypeID, global::System.Int32 toCurrencyTypeID, global::System.Decimal exchangeRate, global::System.DateTime effectiveDate)
        {
            CurrencyExchanx currencyExchanx = new CurrencyExchanx();
            currencyExchanx.CurrencyExchangeID = currencyExchangeID;
            currencyExchanx.FromCurrencyTypeID = fromCurrencyTypeID;
            currencyExchanx.ToCurrencyTypeID = toCurrencyTypeID;
            currencyExchanx.ExchangeRate = exchangeRate;
            currencyExchanx.EffectiveDate = effectiveDate;
            return currencyExchanx;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyExchangeID
        {
            get
            {
                return _CurrencyExchangeID;
            }
            set
            {
                if (_CurrencyExchangeID != value)
                {
                    OnCurrencyExchangeIDChanging(value);
                    ReportPropertyChanging("CurrencyExchangeID");
                    _CurrencyExchangeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyExchangeID");
                    OnCurrencyExchangeIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyExchangeID;
        partial void OnCurrencyExchangeIDChanging(global::System.Int32 value);
        partial void OnCurrencyExchangeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromCurrencyTypeID
        {
            get
            {
                return _FromCurrencyTypeID;
            }
            set
            {
                OnFromCurrencyTypeIDChanging(value);
                ReportPropertyChanging("FromCurrencyTypeID");
                _FromCurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromCurrencyTypeID");
                OnFromCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _FromCurrencyTypeID;
        partial void OnFromCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnFromCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToCurrencyTypeID
        {
            get
            {
                return _ToCurrencyTypeID;
            }
            set
            {
                OnToCurrencyTypeIDChanging(value);
                ReportPropertyChanging("ToCurrencyTypeID");
                _ToCurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToCurrencyTypeID");
                OnToCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _ToCurrencyTypeID;
        partial void OnToCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnToCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                OnExchangeRateChanging(value);
                ReportPropertyChanging("ExchangeRate");
                _ExchangeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRate");
                OnExchangeRateChanged();
            }
        }
        private global::System.Decimal _ExchangeRate;
        partial void OnExchangeRateChanging(global::System.Decimal value);
        partial void OnExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CurrencyExchanges_CurrencyTypes", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CurrencyExchanges_CurrencyTypes1", "CurrencyType")]
        public CurrencyType CurrencyType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes1", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes1", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes1", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes1", "CurrencyType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="CurrencyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyType object.
        /// </summary>
        /// <param name="currencyTypeID">Initial value of the CurrencyTypeID property.</param>
        /// <param name="currencyCode">Initial value of the CurrencyCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="decimalPlaces">Initial value of the DecimalPlaces property.</param>
        public static CurrencyType CreateCurrencyType(global::System.Int32 currencyTypeID, global::System.String currencyCode, global::System.String name, global::System.Int32 decimalPlaces)
        {
            CurrencyType currencyType = new CurrencyType();
            currencyType.CurrencyTypeID = currencyTypeID;
            currencyType.CurrencyCode = currencyCode;
            currencyType.Name = name;
            currencyType.DecimalPlaces = decimalPlaces;
            return currencyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                if (_CurrencyTypeID != value)
                {
                    OnCurrencyTypeIDChanging(value);
                    ReportPropertyChanging("CurrencyTypeID");
                    _CurrencyTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyTypeID");
                    OnCurrencyTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCode
        {
            get
            {
                return _CurrencyCode;
            }
            set
            {
                OnCurrencyCodeChanging(value);
                ReportPropertyChanging("CurrencyCode");
                _CurrencyCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrencyCode");
                OnCurrencyCodeChanged();
            }
        }
        private global::System.String _CurrencyCode;
        partial void OnCurrencyCodeChanging(global::System.String value);
        partial void OnCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DecimalPlaces
        {
            get
            {
                return _DecimalPlaces;
            }
            set
            {
                OnDecimalPlacesChanging(value);
                ReportPropertyChanging("DecimalPlaces");
                _DecimalPlaces = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DecimalPlaces");
                OnDecimalPlacesChanged();
            }
        }
        private global::System.Int32 _DecimalPlaces;
        partial void OnDecimalPlacesChanging(global::System.Int32 value);
        partial void OnDecimalPlacesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerCurrencyTypes", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerCurrencyTypes", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerCurrencyTypes", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsCorpCurrencyTypeID", "BonusDetail")]
        public EntityCollection<BonusDetail> BonusDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsCorpCurrencyTypeID", "BonusDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsCorpCurrencyTypeID", "BonusDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsCurrencyTypeCurrencyTypes", "BonusDetail")]
        public EntityCollection<BonusDetail> BonusDetails1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsCurrencyTypeCurrencyTypes", "BonusDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsCurrencyTypeCurrencyTypes", "BonusDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusRequirementsCurrencyTypeID", "BonusRequirement")]
        public EntityCollection<BonusRequirement> BonusRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusRequirement>("NetStepsCommissionsDB.fkBonusRequirementsCurrencyTypeID", "BonusRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusRequirement>("NetStepsCommissionsDB.fkBonusRequirementsCurrencyTypeID", "BonusRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_BonusValues_CurrencyTypes", "BonusValue")]
        public EntityCollection<BonusValue> BonusValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusValue>("NetStepsCommissionsDB.FK_BonusValues_CurrencyTypes", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusValue>("NetStepsCommissionsDB.FK_BonusValues_CurrencyTypes", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesCorpCurrencyTypeID", "BonusValue")]
        public EntityCollection<BonusValue> BonusValues1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesCorpCurrencyTypeID", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesCorpCurrencyTypeID", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_CurrencyCurrencyID_CountriesCurrencyID", "Country")]
        public EntityCollection<Country> Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Country>("NetStepsCommissionsDB.fk_CurrencyCurrencyID_CountriesCurrencyID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Country>("NetStepsCommissionsDB.fk_CurrencyCurrencyID_CountriesCurrencyID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CurrencyExchanges_CurrencyTypes", "CurrencyExchanx")]
        public EntityCollection<CurrencyExchanx> CurrencyExchanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CurrencyExchanx>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes", "CurrencyExchanx");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CurrencyExchanx>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes", "CurrencyExchanx", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CurrencyExchanges_CurrencyTypes1", "CurrencyExchanx")]
        public EntityCollection<CurrencyExchanx> CurrencyExchanges1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CurrencyExchanx>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes1", "CurrencyExchanx");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CurrencyExchanx>("NetStepsCommissionsDB.FK_CurrencyExchanges_CurrencyTypes1", "CurrencyExchanx", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_CurrencyTypes", "DisbursementFee")]
        public EntityCollection<DisbursementFee> DisbursementFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.FK_DisbursementFees_CurrencyTypes", "DisbursementFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.FK_DisbursementFees_CurrencyTypes", "DisbursementFee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementMinimums_CurrencyTypes", "DisbursementMinimum")]
        public EntityCollection<DisbursementMinimum> DisbursementMinimums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementMinimum>("NetStepsCommissionsDB.FK_DisbursementMinimums_CurrencyTypes", "DisbursementMinimum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementMinimum>("NetStepsCommissionsDB.FK_DisbursementMinimums_CurrencyTypes", "DisbursementMinimum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsCurrencyTypeID", "Disbursement")]
        public EntityCollection<Disbursement> Disbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsCurrencyTypeID", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsCurrencyTypeID", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_CurrencyTypes", "ProductCreditLedger")]
        public EntityCollection<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_CurrencyTypes", "ProductCreditLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_CurrencyTypes", "ProductCreditLedger", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Diagnostic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Diagnostic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Diagnostic object.
        /// </summary>
        /// <param name="diagnosticsID">Initial value of the DiagnosticsID property.</param>
        /// <param name="dateEntry">Initial value of the DateEntry property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static Diagnostic CreateDiagnostic(global::System.Int64 diagnosticsID, global::System.DateTime dateEntry, global::System.Int32 level, global::System.Int32 priority, global::System.String message)
        {
            Diagnostic diagnostic = new Diagnostic();
            diagnostic.DiagnosticsID = diagnosticsID;
            diagnostic.DateEntry = dateEntry;
            diagnostic.Level = level;
            diagnostic.Priority = priority;
            diagnostic.Message = message;
            return diagnostic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DiagnosticsID
        {
            get
            {
                return _DiagnosticsID;
            }
            set
            {
                if (_DiagnosticsID != value)
                {
                    OnDiagnosticsIDChanging(value);
                    ReportPropertyChanging("DiagnosticsID");
                    _DiagnosticsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DiagnosticsID");
                    OnDiagnosticsIDChanged();
                }
            }
        }
        private global::System.Int64 _DiagnosticsID;
        partial void OnDiagnosticsIDChanging(global::System.Int64 value);
        partial void OnDiagnosticsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEntry
        {
            get
            {
                return _DateEntry;
            }
            set
            {
                OnDateEntryChanging(value);
                ReportPropertyChanging("DateEntry");
                _DateEntry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEntry");
                OnDateEntryChanged();
            }
        }
        private global::System.DateTime _DateEntry;
        partial void OnDateEntryChanging(global::System.DateTime value);
        partial void OnDateEntryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Disbursement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Disbursement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Disbursement object.
        /// </summary>
        /// <param name="disbursementID">Initial value of the DisbursementID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="disbursementDate">Initial value of the DisbursementDate property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="disbursementStatusID">Initial value of the DisbursementStatusID property.</param>
        public static Disbursement CreateDisbursement(global::System.Int32 disbursementID, global::System.Decimal amount, global::System.DateTime disbursementDate, global::System.Int32 accountID, global::System.Int32 disbursementStatusID)
        {
            Disbursement disbursement = new Disbursement();
            disbursement.DisbursementID = disbursementID;
            disbursement.Amount = amount;
            disbursement.DisbursementDate = disbursementDate;
            disbursement.AccountID = accountID;
            disbursement.DisbursementStatusID = disbursementStatusID;
            return disbursement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementID
        {
            get
            {
                return _DisbursementID;
            }
            set
            {
                if (_DisbursementID != value)
                {
                    OnDisbursementIDChanging(value);
                    ReportPropertyChanging("DisbursementID");
                    _DisbursementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementID");
                    OnDisbursementIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementID;
        partial void OnDisbursementIDChanging(global::System.Int32 value);
        partial void OnDisbursementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DisbursementDate
        {
            get
            {
                return _DisbursementDate;
            }
            set
            {
                OnDisbursementDateChanging(value);
                ReportPropertyChanging("DisbursementDate");
                _DisbursementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementDate");
                OnDisbursementDateChanged();
            }
        }
        private global::System.DateTime _DisbursementDate;
        partial void OnDisbursementDateChanging(global::System.DateTime value);
        partial void OnDisbursementDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodID;
        partial void OnPeriodIDChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                OnDisbursementProfileIDChanging(value);
                ReportPropertyChanging("DisbursementProfileID");
                _DisbursementProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementProfileID");
                OnDisbursementProfileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(Nullable<global::System.Int32> value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementStatusID
        {
            get
            {
                return _DisbursementStatusID;
            }
            set
            {
                OnDisbursementStatusIDChanging(value);
                ReportPropertyChanging("DisbursementStatusID");
                _DisbursementStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementStatusID");
                OnDisbursementStatusIDChanged();
            }
        }
        private global::System.Int32 _DisbursementStatusID;
        partial void OnDisbursementStatusIDChanging(global::System.Int32 value);
        partial void OnDisbursementStatusIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerDisbursementID", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerDisbursementID", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerDisbursementID", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementsAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementsAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementsAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementsAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsCurrencyTypeID", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkDisbursementsCurrencyTypeID", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkDisbursementsCurrencyTypeID", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkDisbursementsCurrencyTypeID", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.fkDisbursementsCurrencyTypeID", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementDetailsDisbursementID", "DisbursementDetail")]
        public EntityCollection<DisbursementDetail> DisbursementDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.fkDisbursementDetailsDisbursementID", "DisbursementDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.fkDisbursementDetailsDisbursementID", "DisbursementDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsDisbursementProfileID", "DisbursementProfile")]
        public DisbursementProfile DisbursementProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementsDisbursementProfileID", "DisbursementProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementsDisbursementProfileID", "DisbursementProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementProfile> DisbursementProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementsDisbursementProfileID", "DisbursementProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementsDisbursementProfileID", "DisbursementProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsDisbursementStatusID", "DisbursementStatus")]
        public DisbursementStatus DisbursementStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementsDisbursementStatusID", "DisbursementStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementsDisbursementStatusID", "DisbursementStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementStatus> DisbursementStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementsDisbursementStatusID", "DisbursementStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementsDisbursementStatusID", "DisbursementStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsPeriodID", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkDisbursementsPeriodID", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkDisbursementsPeriodID", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.fkDisbursementsPeriodID", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.fkDisbursementsPeriodID", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementAttribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementAttribute object.
        /// </summary>
        /// <param name="disbursementAttributeID">Initial value of the DisbursementAttributeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dataType">Initial value of the DataType property.</param>
        /// <param name="disbursementTypeID">Initial value of the DisbursementTypeID property.</param>
        public static DisbursementAttribute CreateDisbursementAttribute(global::System.Int32 disbursementAttributeID, global::System.String description, global::System.String dataType, global::System.Int32 disbursementTypeID)
        {
            DisbursementAttribute disbursementAttribute = new DisbursementAttribute();
            disbursementAttribute.DisbursementAttributeID = disbursementAttributeID;
            disbursementAttribute.Description = description;
            disbursementAttribute.DataType = dataType;
            disbursementAttribute.DisbursementTypeID = disbursementTypeID;
            return disbursementAttribute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementAttributeID
        {
            get
            {
                return _DisbursementAttributeID;
            }
            set
            {
                if (_DisbursementAttributeID != value)
                {
                    OnDisbursementAttributeIDChanging(value);
                    ReportPropertyChanging("DisbursementAttributeID");
                    _DisbursementAttributeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementAttributeID");
                    OnDisbursementAttributeIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementAttributeID;
        partial void OnDisbursementAttributeIDChanging(global::System.Int32 value);
        partial void OnDisbursementAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                OnDisbursementTypeIDChanging(value);
                ReportPropertyChanging("DisbursementTypeID");
                _DisbursementTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementTypeID");
                OnDisbursementTypeIDChanged();
            }
        }
        private global::System.Int32 _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementAttributes_DisbursementTypes", "DisbursementType")]
        public DisbursementType DisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementAttributes_DisbursementTypes", "DisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementAttributes_DisbursementTypes", "DisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementType> DisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementAttributes_DisbursementTypes", "DisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementAttributes_DisbursementTypes", "DisbursementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementProfileAttribute")]
        public EntityCollection<DisbursementProfileAttribute> DisbursementProfileAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementProfileAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementProfileAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementProfileAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementProfileAttribute", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementDetail object.
        /// </summary>
        /// <param name="disbursementDetailID">Initial value of the DisbursementDetailID property.</param>
        /// <param name="disbursementID">Initial value of the DisbursementID property.</param>
        /// <param name="disbursementTypeID">Initial value of the DisbursementTypeID property.</param>
        /// <param name="disbursementStatusID">Initial value of the DisbursementStatusID property.</param>
        public static DisbursementDetail CreateDisbursementDetail(global::System.Int32 disbursementDetailID, global::System.Int32 disbursementID, global::System.Int32 disbursementTypeID, global::System.Int32 disbursementStatusID)
        {
            DisbursementDetail disbursementDetail = new DisbursementDetail();
            disbursementDetail.DisbursementDetailID = disbursementDetailID;
            disbursementDetail.DisbursementID = disbursementID;
            disbursementDetail.DisbursementTypeID = disbursementTypeID;
            disbursementDetail.DisbursementStatusID = disbursementStatusID;
            return disbursementDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementDetailID
        {
            get
            {
                return _DisbursementDetailID;
            }
            set
            {
                if (_DisbursementDetailID != value)
                {
                    OnDisbursementDetailIDChanging(value);
                    ReportPropertyChanging("DisbursementDetailID");
                    _DisbursementDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementDetailID");
                    OnDisbursementDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementDetailID;
        partial void OnDisbursementDetailIDChanging(global::System.Int32 value);
        partial void OnDisbursementDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementID
        {
            get
            {
                return _DisbursementID;
            }
            set
            {
                OnDisbursementIDChanging(value);
                ReportPropertyChanging("DisbursementID");
                _DisbursementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementID");
                OnDisbursementIDChanged();
            }
        }
        private global::System.Int32 _DisbursementID;
        partial void OnDisbursementIDChanging(global::System.Int32 value);
        partial void OnDisbursementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                OnDisbursementTypeIDChanging(value);
                ReportPropertyChanging("DisbursementTypeID");
                _DisbursementTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementTypeID");
                OnDisbursementTypeIDChanged();
            }
        }
        private global::System.Int32 _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                OnDisbursementProfileIDChanging(value);
                ReportPropertyChanging("DisbursementProfileID");
                _DisbursementProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementProfileID");
                OnDisbursementProfileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(Nullable<global::System.Int32> value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementStatusID
        {
            get
            {
                return _DisbursementStatusID;
            }
            set
            {
                OnDisbursementStatusIDChanging(value);
                ReportPropertyChanging("DisbursementStatusID");
                _DisbursementStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementStatusID");
                OnDisbursementStatusIDChanged();
            }
        }
        private global::System.Int32 _DisbursementStatusID;
        partial void OnDisbursementStatusIDChanging(global::System.Int32 value);
        partial void OnDisbursementStatusIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkChecksDisbursementDetailID", "Check")]
        public EntityCollection<Check> Checks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Check>("NetStepsCommissionsDB.fkChecksDisbursementDetailID", "Check");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Check>("NetStepsCommissionsDB.fkChecksDisbursementDetailID", "Check", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementDetails_DisbursementProfiles", "DisbursementProfile")]
        public DisbursementProfile DisbursementProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementProfiles", "DisbursementProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementProfiles", "DisbursementProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementProfile> DisbursementProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementProfiles", "DisbursementProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementProfiles", "DisbursementProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementDetails_DisbursementTypes", "DisbursementType")]
        public DisbursementType DisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementTypes", "DisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementTypes", "DisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementType> DisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementTypes", "DisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementTypes", "DisbursementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementDetailsDisbursementID", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("NetStepsCommissionsDB.fkDisbursementDetailsDisbursementID", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("NetStepsCommissionsDB.fkDisbursementDetailsDisbursementID", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("NetStepsCommissionsDB.fkDisbursementDetailsDisbursementID", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("NetStepsCommissionsDB.fkDisbursementDetailsDisbursementID", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementDetailssDisbursementStatusID", "DisbursementStatus")]
        public DisbursementStatus DisbursementStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementDetailssDisbursementStatusID", "DisbursementStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementDetailssDisbursementStatusID", "DisbursementStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementStatus> DisbursementStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementDetailssDisbursementStatusID", "DisbursementStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementStatus>("NetStepsCommissionsDB.fkDisbursementDetailssDisbursementStatusID", "DisbursementStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementFee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementFee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementFee object.
        /// </summary>
        /// <param name="disbursementFeeTypeID">Initial value of the DisbursementFeeTypeID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="disbursementFeeID">Initial value of the DisbursementFeeID property.</param>
        /// <param name="disbursementTypeID">Initial value of the DisbursementTypeID property.</param>
        public static DisbursementFee CreateDisbursementFee(global::System.Int32 disbursementFeeTypeID, global::System.Int32 countryID, global::System.Double amount, global::System.Int32 disbursementFeeID, global::System.Int32 disbursementTypeID)
        {
            DisbursementFee disbursementFee = new DisbursementFee();
            disbursementFee.DisbursementFeeTypeID = disbursementFeeTypeID;
            disbursementFee.CountryID = countryID;
            disbursementFee.Amount = amount;
            disbursementFee.DisbursementFeeID = disbursementFeeID;
            disbursementFee.DisbursementTypeID = disbursementTypeID;
            return disbursementFee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementFeeTypeID
        {
            get
            {
                return _DisbursementFeeTypeID;
            }
            set
            {
                OnDisbursementFeeTypeIDChanging(value);
                ReportPropertyChanging("DisbursementFeeTypeID");
                _DisbursementFeeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementFeeTypeID");
                OnDisbursementFeeTypeIDChanged();
            }
        }
        private global::System.Int32 _DisbursementFeeTypeID;
        partial void OnDisbursementFeeTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementFeeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementFeeID
        {
            get
            {
                return _DisbursementFeeID;
            }
            set
            {
                if (_DisbursementFeeID != value)
                {
                    OnDisbursementFeeIDChanging(value);
                    ReportPropertyChanging("DisbursementFeeID");
                    _DisbursementFeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementFeeID");
                    OnDisbursementFeeIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementFeeID;
        partial void OnDisbursementFeeIDChanging(global::System.Int32 value);
        partial void OnDisbursementFeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                OnDisbursementTypeIDChanging(value);
                ReportPropertyChanging("DisbursementTypeID");
                _DisbursementTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementTypeID");
                OnDisbursementTypeIDChanged();
            }
        }
        private global::System.Int32 _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementFeesCountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementFeesCountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementFeesCountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementFeesCountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementFeesCountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_CurrencyTypes", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementFees_CurrencyTypes", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementFees_CurrencyTypes", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementFees_CurrencyTypes", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementFees_CurrencyTypes", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFeeType")]
        public DisbursementFeeType DisbursementFeeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementFeeType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFeeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementFeeType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFeeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementFeeType> DisbursementFeeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementFeeType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFeeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementFeeType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFeeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_DisbursementTypes", "DisbursementType")]
        public DisbursementType DisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementTypes", "DisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementTypes", "DisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementType> DisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementTypes", "DisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementTypes", "DisbursementType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementFeeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementFeeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementFeeType object.
        /// </summary>
        /// <param name="disbursementFeeTypeID">Initial value of the DisbursementFeeTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        public static DisbursementFeeType CreateDisbursementFeeType(global::System.Int32 disbursementFeeTypeID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable)
        {
            DisbursementFeeType disbursementFeeType = new DisbursementFeeType();
            disbursementFeeType.DisbursementFeeTypeID = disbursementFeeTypeID;
            disbursementFeeType.Name = name;
            disbursementFeeType.Enabled = enabled;
            disbursementFeeType.Editable = editable;
            return disbursementFeeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementFeeTypeID
        {
            get
            {
                return _DisbursementFeeTypeID;
            }
            set
            {
                if (_DisbursementFeeTypeID != value)
                {
                    OnDisbursementFeeTypeIDChanging(value);
                    ReportPropertyChanging("DisbursementFeeTypeID");
                    _DisbursementFeeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementFeeTypeID");
                    OnDisbursementFeeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementFeeTypeID;
        partial void OnDisbursementFeeTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementFeeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFee")]
        public EntityCollection<DisbursementFee> DisbursementFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementFeeTypes", "DisbursementFee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementMinimum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementMinimum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementMinimum object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="minimumAmount">Initial value of the MinimumAmount property.</param>
        /// <param name="currencyTypeID">Initial value of the CurrencyTypeID property.</param>
        /// <param name="disbursementTypeID">Initial value of the DisbursementTypeID property.</param>
        /// <param name="disbursementMinimumID">Initial value of the DisbursementMinimumID property.</param>
        public static DisbursementMinimum CreateDisbursementMinimum(global::System.Int32 countryID, global::System.Decimal minimumAmount, global::System.Int32 currencyTypeID, global::System.Int32 disbursementTypeID, global::System.Int32 disbursementMinimumID)
        {
            DisbursementMinimum disbursementMinimum = new DisbursementMinimum();
            disbursementMinimum.CountryID = countryID;
            disbursementMinimum.MinimumAmount = minimumAmount;
            disbursementMinimum.CurrencyTypeID = currencyTypeID;
            disbursementMinimum.DisbursementTypeID = disbursementTypeID;
            disbursementMinimum.DisbursementMinimumID = disbursementMinimumID;
            return disbursementMinimum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MinimumAmount
        {
            get
            {
                return _MinimumAmount;
            }
            set
            {
                OnMinimumAmountChanging(value);
                ReportPropertyChanging("MinimumAmount");
                _MinimumAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumAmount");
                OnMinimumAmountChanged();
            }
        }
        private global::System.Decimal _MinimumAmount;
        partial void OnMinimumAmountChanging(global::System.Decimal value);
        partial void OnMinimumAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                OnDisbursementTypeIDChanging(value);
                ReportPropertyChanging("DisbursementTypeID");
                _DisbursementTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementTypeID");
                OnDisbursementTypeIDChanged();
            }
        }
        private global::System.Int32 _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementMinimumID
        {
            get
            {
                return _DisbursementMinimumID;
            }
            set
            {
                if (_DisbursementMinimumID != value)
                {
                    OnDisbursementMinimumIDChanging(value);
                    ReportPropertyChanging("DisbursementMinimumID");
                    _DisbursementMinimumID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementMinimumID");
                    OnDisbursementMinimumIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementMinimumID;
        partial void OnDisbursementMinimumIDChanging(global::System.Int32 value);
        partial void OnDisbursementMinimumIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementMinimumsCountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementMinimumsCountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementMinimumsCountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementMinimumsCountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementMinimumsCountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementMinimums_CurrencyTypes", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementMinimums_CurrencyTypes", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementMinimums_CurrencyTypes", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementMinimums_CurrencyTypes", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_DisbursementMinimums_CurrencyTypes", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkDisbursementMinimumsDisbursementTypes", "DisbursementType")]
        public DisbursementType DisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FkDisbursementMinimumsDisbursementTypes", "DisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FkDisbursementMinimumsDisbursementTypes", "DisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementType> DisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FkDisbursementMinimumsDisbursementTypes", "DisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementType>("NetStepsCommissionsDB.FkDisbursementMinimumsDisbursementTypes", "DisbursementType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementProfile object.
        /// </summary>
        /// <param name="disbursementProfileID">Initial value of the DisbursementProfileID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static DisbursementProfile CreateDisbursementProfile(global::System.Int32 disbursementProfileID, global::System.Int32 accountID)
        {
            DisbursementProfile disbursementProfile = new DisbursementProfile();
            disbursementProfile.DisbursementProfileID = disbursementProfileID;
            disbursementProfile.AccountID = accountID;
            return disbursementProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                if (_DisbursementProfileID != value)
                {
                    OnDisbursementProfileIDChanging(value);
                    ReportPropertyChanging("DisbursementProfileID");
                    _DisbursementProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementProfileID");
                    OnDisbursementProfileIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(global::System.Int32 value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                OnDisbursementTypeIDChanging(value);
                ReportPropertyChanging("DisbursementTypeID");
                _DisbursementTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementTypeID");
                OnDisbursementTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDisbursementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Double> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementProfilesAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementProfilesAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementProfilesAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementProfilesAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkDisbursementProfilesAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementDetails_DisbursementProfiles", "DisbursementDetail")]
        public EntityCollection<DisbursementDetail> DisbursementDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementProfiles", "DisbursementDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementProfiles", "DisbursementDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfileAttribute")]
        public EntityCollection<DisbursementProfileAttribute> DisbursementProfileAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementProfileAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfileAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementProfileAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfileAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementProfilesDisbursementTypeID", "DisbursementType")]
        public DisbursementType DisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.fkDisbursementProfilesDisbursementTypeID", "DisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.fkDisbursementProfilesDisbursementTypeID", "DisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementType> DisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.fkDisbursementProfilesDisbursementTypeID", "DisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementType>("NetStepsCommissionsDB.fkDisbursementProfilesDisbursementTypeID", "DisbursementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsDisbursementProfileID", "Disbursement")]
        public EntityCollection<Disbursement> Disbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsDisbursementProfileID", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsDisbursementProfileID", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_DisbursementProfiles", "PayCardBatchDetail")]
        public EntityCollection<PayCardBatchDetail> PayCardBatchDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayCardBatchDetail>("NetStepsCommissionsDB.FK_PayCardBatchDetails_DisbursementProfiles", "PayCardBatchDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayCardBatchDetail>("NetStepsCommissionsDB.FK_PayCardBatchDetails_DisbursementProfiles", "PayCardBatchDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCards_DisbursementProfiles", "PayCard")]
        public EntityCollection<PayCard> PayCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayCard>("NetStepsCommissionsDB.FK_PayCards_DisbursementProfiles", "PayCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayCard>("NetStepsCommissionsDB.FK_PayCards_DisbursementProfiles", "PayCard", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementProfileAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementProfileAttribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementProfileAttribute object.
        /// </summary>
        /// <param name="disbursementProfileID">Initial value of the DisbursementProfileID property.</param>
        /// <param name="disbursementAttributeID">Initial value of the DisbursementAttributeID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static DisbursementProfileAttribute CreateDisbursementProfileAttribute(global::System.Int32 disbursementProfileID, global::System.Int32 disbursementAttributeID, global::System.String value)
        {
            DisbursementProfileAttribute disbursementProfileAttribute = new DisbursementProfileAttribute();
            disbursementProfileAttribute.DisbursementProfileID = disbursementProfileID;
            disbursementProfileAttribute.DisbursementAttributeID = disbursementAttributeID;
            disbursementProfileAttribute.Value = value;
            return disbursementProfileAttribute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                if (_DisbursementProfileID != value)
                {
                    OnDisbursementProfileIDChanging(value);
                    ReportPropertyChanging("DisbursementProfileID");
                    _DisbursementProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementProfileID");
                    OnDisbursementProfileIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(global::System.Int32 value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementAttributeID
        {
            get
            {
                return _DisbursementAttributeID;
            }
            set
            {
                if (_DisbursementAttributeID != value)
                {
                    OnDisbursementAttributeIDChanging(value);
                    ReportPropertyChanging("DisbursementAttributeID");
                    _DisbursementAttributeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementAttributeID");
                    OnDisbursementAttributeIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementAttributeID;
        partial void OnDisbursementAttributeIDChanging(global::System.Int32 value);
        partial void OnDisbursementAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementAttribute")]
        public DisbursementAttribute DisbursementAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementAttribute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementAttribute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementAttribute> DisbursementAttributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementAttribute>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementAttributes", "DisbursementAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfile")]
        public DisbursementProfile DisbursementProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementProfile> DisbursementProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_DisbursementProfileAttributes_DisbursementProfiles", "DisbursementProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementProfileAttributesAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementProfileAttributesAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementProfileAttributesAudit object.
        /// </summary>
        /// <param name="disbursementProfileAttributesAuditID">Initial value of the DisbursementProfileAttributesAuditID property.</param>
        /// <param name="disbursementProfileID">Initial value of the DisbursementProfileID property.</param>
        /// <param name="disbursementAttributeID">Initial value of the DisbursementAttributeID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="dBUserID">Initial value of the DBUserID property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="auditDate">Initial value of the AuditDate property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static DisbursementProfileAttributesAudit CreateDisbursementProfileAttributesAudit(global::System.Int32 disbursementProfileAttributesAuditID, global::System.Int32 disbursementProfileID, global::System.Int32 disbursementAttributeID, global::System.String value, global::System.String dBUserID, global::System.String operation, global::System.DateTime auditDate, global::System.Byte[] version)
        {
            DisbursementProfileAttributesAudit disbursementProfileAttributesAudit = new DisbursementProfileAttributesAudit();
            disbursementProfileAttributesAudit.DisbursementProfileAttributesAuditID = disbursementProfileAttributesAuditID;
            disbursementProfileAttributesAudit.DisbursementProfileID = disbursementProfileID;
            disbursementProfileAttributesAudit.DisbursementAttributeID = disbursementAttributeID;
            disbursementProfileAttributesAudit.Value = value;
            disbursementProfileAttributesAudit.DBUserID = dBUserID;
            disbursementProfileAttributesAudit.Operation = operation;
            disbursementProfileAttributesAudit.AuditDate = auditDate;
            disbursementProfileAttributesAudit.Version = version;
            return disbursementProfileAttributesAudit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementProfileAttributesAuditID
        {
            get
            {
                return _DisbursementProfileAttributesAuditID;
            }
            set
            {
                if (_DisbursementProfileAttributesAuditID != value)
                {
                    OnDisbursementProfileAttributesAuditIDChanging(value);
                    ReportPropertyChanging("DisbursementProfileAttributesAuditID");
                    _DisbursementProfileAttributesAuditID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementProfileAttributesAuditID");
                    OnDisbursementProfileAttributesAuditIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementProfileAttributesAuditID;
        partial void OnDisbursementProfileAttributesAuditIDChanging(global::System.Int32 value);
        partial void OnDisbursementProfileAttributesAuditIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                OnDisbursementProfileIDChanging(value);
                ReportPropertyChanging("DisbursementProfileID");
                _DisbursementProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementProfileID");
                OnDisbursementProfileIDChanged();
            }
        }
        private global::System.Int32 _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(global::System.Int32 value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementAttributeID
        {
            get
            {
                return _DisbursementAttributeID;
            }
            set
            {
                OnDisbursementAttributeIDChanging(value);
                ReportPropertyChanging("DisbursementAttributeID");
                _DisbursementAttributeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementAttributeID");
                OnDisbursementAttributeIDChanged();
            }
        }
        private global::System.Int32 _DisbursementAttributeID;
        partial void OnDisbursementAttributeIDChanging(global::System.Int32 value);
        partial void OnDisbursementAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DBUserID
        {
            get
            {
                return _DBUserID;
            }
            set
            {
                OnDBUserIDChanging(value);
                ReportPropertyChanging("DBUserID");
                _DBUserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DBUserID");
                OnDBUserIDChanged();
            }
        }
        private global::System.String _DBUserID;
        partial void OnDBUserIDChanging(global::System.String value);
        partial void OnDBUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AuditDate
        {
            get
            {
                return _AuditDate;
            }
            set
            {
                OnAuditDateChanging(value);
                ReportPropertyChanging("AuditDate");
                _AuditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditDate");
                OnAuditDateChanged();
            }
        }
        private global::System.DateTime _AuditDate;
        partial void OnAuditDateChanging(global::System.DateTime value);
        partial void OnAuditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementProfilesAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementProfilesAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementProfilesAudit object.
        /// </summary>
        /// <param name="disbursementProfileAuditID">Initial value of the DisbursementProfileAuditID property.</param>
        /// <param name="disbursementProfileID">Initial value of the DisbursementProfileID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="dBUser">Initial value of the DBUser property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="auditDate">Initial value of the AuditDate property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static DisbursementProfilesAudit CreateDisbursementProfilesAudit(global::System.Int32 disbursementProfileAuditID, global::System.Int32 disbursementProfileID, global::System.Int32 accountID, global::System.String dBUser, global::System.String operation, global::System.DateTime auditDate, global::System.Byte[] version)
        {
            DisbursementProfilesAudit disbursementProfilesAudit = new DisbursementProfilesAudit();
            disbursementProfilesAudit.DisbursementProfileAuditID = disbursementProfileAuditID;
            disbursementProfilesAudit.DisbursementProfileID = disbursementProfileID;
            disbursementProfilesAudit.AccountID = accountID;
            disbursementProfilesAudit.DBUser = dBUser;
            disbursementProfilesAudit.Operation = operation;
            disbursementProfilesAudit.AuditDate = auditDate;
            disbursementProfilesAudit.Version = version;
            return disbursementProfilesAudit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementProfileAuditID
        {
            get
            {
                return _DisbursementProfileAuditID;
            }
            set
            {
                if (_DisbursementProfileAuditID != value)
                {
                    OnDisbursementProfileAuditIDChanging(value);
                    ReportPropertyChanging("DisbursementProfileAuditID");
                    _DisbursementProfileAuditID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementProfileAuditID");
                    OnDisbursementProfileAuditIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementProfileAuditID;
        partial void OnDisbursementProfileAuditIDChanging(global::System.Int32 value);
        partial void OnDisbursementProfileAuditIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                OnDisbursementProfileIDChanging(value);
                ReportPropertyChanging("DisbursementProfileID");
                _DisbursementProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementProfileID");
                OnDisbursementProfileIDChanged();
            }
        }
        private global::System.Int32 _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(global::System.Int32 value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                OnDisbursementTypeIDChanging(value);
                ReportPropertyChanging("DisbursementTypeID");
                _DisbursementTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementTypeID");
                OnDisbursementTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDisbursementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Double> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DBUser
        {
            get
            {
                return _DBUser;
            }
            set
            {
                OnDBUserChanging(value);
                ReportPropertyChanging("DBUser");
                _DBUser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DBUser");
                OnDBUserChanged();
            }
        }
        private global::System.String _DBUser;
        partial void OnDBUserChanging(global::System.String value);
        partial void OnDBUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AuditDate
        {
            get
            {
                return _AuditDate;
            }
            set
            {
                OnAuditDateChanging(value);
                ReportPropertyChanging("AuditDate");
                _AuditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditDate");
                OnAuditDateChanged();
            }
        }
        private global::System.DateTime _AuditDate;
        partial void OnAuditDateChanging(global::System.DateTime value);
        partial void OnAuditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementStatus object.
        /// </summary>
        /// <param name="disbursementStatusID">Initial value of the DisbursementStatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static DisbursementStatus CreateDisbursementStatus(global::System.Int32 disbursementStatusID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable, global::System.String code)
        {
            DisbursementStatus disbursementStatus = new DisbursementStatus();
            disbursementStatus.DisbursementStatusID = disbursementStatusID;
            disbursementStatus.Name = name;
            disbursementStatus.Enabled = enabled;
            disbursementStatus.Editable = editable;
            disbursementStatus.Code = code;
            return disbursementStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementStatusID
        {
            get
            {
                return _DisbursementStatusID;
            }
            set
            {
                if (_DisbursementStatusID != value)
                {
                    OnDisbursementStatusIDChanging(value);
                    ReportPropertyChanging("DisbursementStatusID");
                    _DisbursementStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementStatusID");
                    OnDisbursementStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementStatusID;
        partial void OnDisbursementStatusIDChanging(global::System.Int32 value);
        partial void OnDisbursementStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementDetailssDisbursementStatusID", "DisbursementDetail")]
        public EntityCollection<DisbursementDetail> DisbursementDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.fkDisbursementDetailssDisbursementStatusID", "DisbursementDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.fkDisbursementDetailssDisbursementStatusID", "DisbursementDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsDisbursementStatusID", "Disbursement")]
        public EntityCollection<Disbursement> Disbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsDisbursementStatusID", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsDisbursementStatusID", "Disbursement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementType object.
        /// </summary>
        /// <param name="disbursementTypeID">Initial value of the DisbursementTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static DisbursementType CreateDisbursementType(global::System.Int32 disbursementTypeID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable, global::System.String code)
        {
            DisbursementType disbursementType = new DisbursementType();
            disbursementType.DisbursementTypeID = disbursementTypeID;
            disbursementType.Name = name;
            disbursementType.Enabled = enabled;
            disbursementType.Editable = editable;
            disbursementType.Code = code;
            return disbursementType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                if (_DisbursementTypeID != value)
                {
                    OnDisbursementTypeIDChanging(value);
                    ReportPropertyChanging("DisbursementTypeID");
                    _DisbursementTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementTypeID");
                    OnDisbursementTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberAllowed
        {
            get
            {
                return _NumberAllowed;
            }
            set
            {
                OnNumberAllowedChanging(value);
                ReportPropertyChanging("NumberAllowed");
                _NumberAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberAllowed");
                OnNumberAllowedChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberAllowed;
        partial void OnNumberAllowedChanging(Nullable<global::System.Int32> value);
        partial void OnNumberAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementAttributes_DisbursementTypes", "DisbursementAttribute")]
        public EntityCollection<DisbursementAttribute> DisbursementAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementAttribute>("NetStepsCommissionsDB.FK_DisbursementAttributes_DisbursementTypes", "DisbursementAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementAttribute>("NetStepsCommissionsDB.FK_DisbursementAttributes_DisbursementTypes", "DisbursementAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementDetails_DisbursementTypes", "DisbursementDetail")]
        public EntityCollection<DisbursementDetail> DisbursementDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementTypes", "DisbursementDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementDetail>("NetStepsCommissionsDB.FK_DisbursementDetails_DisbursementTypes", "DisbursementDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkDisbursementMinimumsDisbursementTypes", "DisbursementMinimum")]
        public EntityCollection<DisbursementMinimum> DisbursementMinimums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementMinimum>("NetStepsCommissionsDB.FkDisbursementMinimumsDisbursementTypes", "DisbursementMinimum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementMinimum>("NetStepsCommissionsDB.FkDisbursementMinimumsDisbursementTypes", "DisbursementMinimum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementProfilesDisbursementTypeID", "DisbursementProfile")]
        public EntityCollection<DisbursementProfile> DisbursementProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementProfilesDisbursementTypeID", "DisbursementProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementProfile>("NetStepsCommissionsDB.fkDisbursementProfilesDisbursementTypeID", "DisbursementProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementTypeCountry")]
        public EntityCollection<DisbursementTypeCountry> DisbursementTypeCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementTypeCountry>("NetStepsCommissionsDB.FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementTypeCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementTypeCountry>("NetStepsCommissionsDB.FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementTypeCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementFees_DisbursementTypes", "DisbursementFee")]
        public EntityCollection<DisbursementFee> DisbursementFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementTypes", "DisbursementFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementFee>("NetStepsCommissionsDB.FK_DisbursementFees_DisbursementTypes", "DisbursementFee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="DisbursementTypeCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementTypeCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementTypeCountry object.
        /// </summary>
        /// <param name="disbursementTypeID">Initial value of the DisbursementTypeID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static DisbursementTypeCountry CreateDisbursementTypeCountry(global::System.Int32 disbursementTypeID, global::System.Int32 countryID)
        {
            DisbursementTypeCountry disbursementTypeCountry = new DisbursementTypeCountry();
            disbursementTypeCountry.DisbursementTypeID = disbursementTypeID;
            disbursementTypeCountry.CountryID = countryID;
            return disbursementTypeCountry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeID
        {
            get
            {
                return _DisbursementTypeID;
            }
            set
            {
                if (_DisbursementTypeID != value)
                {
                    OnDisbursementTypeIDChanging(value);
                    ReportPropertyChanging("DisbursementTypeID");
                    _DisbursementTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementTypeID");
                    OnDisbursementTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementTypeID;
        partial void OnDisbursementTypeIDChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Default
        {
            get
            {
                return _Default;
            }
            set
            {
                OnDefaultChanging(value);
                ReportPropertyChanging("Default");
                _Default = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Default");
                OnDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _Default;
        partial void OnDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnDefaultChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementTypeCountriesCountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementTypeCountriesCountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementTypeCountriesCountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementTypeCountriesCountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("NetStepsCommissionsDB.fkDisbursementTypeCountriesCountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementType")]
        public DisbursementType DisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementType> DisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementType>("NetStepsCommissionsDB.FK_DisbursementTypeCountries_DisbursementTypes", "DisbursementType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="EarningsType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EarningsType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EarningsType object.
        /// </summary>
        /// <param name="earningTypeID">Initial value of the EarningTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EarningsType CreateEarningsType(global::System.Int32 earningTypeID, global::System.String name)
        {
            EarningsType earningsType = new EarningsType();
            earningsType.EarningTypeID = earningTypeID;
            earningsType.Name = name;
            return earningsType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EarningTypeID
        {
            get
            {
                return _EarningTypeID;
            }
            set
            {
                if (_EarningTypeID != value)
                {
                    OnEarningTypeIDChanging(value);
                    ReportPropertyChanging("EarningTypeID");
                    _EarningTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EarningTypeID");
                    OnEarningTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _EarningTypeID;
        partial void OnEarningTypeIDChanging(global::System.Int32 value);
        partial void OnEarningTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_BonusTypes_EarningsTypes", "BonusType")]
        public EntityCollection<BonusType> BonusTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusType>("NetStepsCommissionsDB.FK_BonusTypes_EarningsTypes", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusType>("NetStepsCommissionsDB.FK_BonusTypes_EarningsTypes", "BonusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="EFT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EFT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EFT object.
        /// </summary>
        /// <param name="eFTID">Initial value of the EFTID property.</param>
        /// <param name="disbursementDetailID">Initial value of the DisbursementDetailID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="eFTStatusID">Initial value of the EFTStatusID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="individualIdentificationNumber">Initial value of the IndividualIdentificationNumber property.</param>
        /// <param name="eFTProfileID">Initial value of the EFTProfileID property.</param>
        /// <param name="prenote">Initial value of the Prenote property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static EFT CreateEFT(global::System.Int32 eFTID, global::System.Int32 disbursementDetailID, global::System.Decimal amount, global::System.Int32 eFTStatusID, global::System.DateTime effectiveDate, global::System.String individualIdentificationNumber, global::System.Int32 eFTProfileID, global::System.Boolean prenote, global::System.Byte[] dataVersion)
        {
            EFT eFT = new EFT();
            eFT.EFTID = eFTID;
            eFT.DisbursementDetailID = disbursementDetailID;
            eFT.Amount = amount;
            eFT.EFTStatusID = eFTStatusID;
            eFT.EffectiveDate = effectiveDate;
            eFT.IndividualIdentificationNumber = individualIdentificationNumber;
            eFT.EFTProfileID = eFTProfileID;
            eFT.Prenote = prenote;
            eFT.DataVersion = dataVersion;
            return eFT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTID
        {
            get
            {
                return _EFTID;
            }
            set
            {
                if (_EFTID != value)
                {
                    OnEFTIDChanging(value);
                    ReportPropertyChanging("EFTID");
                    _EFTID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EFTID");
                    OnEFTIDChanged();
                }
            }
        }
        private global::System.Int32 _EFTID;
        partial void OnEFTIDChanging(global::System.Int32 value);
        partial void OnEFTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementDetailID
        {
            get
            {
                return _DisbursementDetailID;
            }
            set
            {
                OnDisbursementDetailIDChanging(value);
                ReportPropertyChanging("DisbursementDetailID");
                _DisbursementDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementDetailID");
                OnDisbursementDetailIDChanged();
            }
        }
        private global::System.Int32 _DisbursementDetailID;
        partial void OnDisbursementDetailIDChanging(global::System.Int32 value);
        partial void OnDisbursementDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTStatusID
        {
            get
            {
                return _EFTStatusID;
            }
            set
            {
                OnEFTStatusIDChanging(value);
                ReportPropertyChanging("EFTStatusID");
                _EFTStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EFTStatusID");
                OnEFTStatusIDChanged();
            }
        }
        private global::System.Int32 _EFTStatusID;
        partial void OnEFTStatusIDChanging(global::System.Int32 value);
        partial void OnEFTStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EFTBatchID
        {
            get
            {
                return _EFTBatchID;
            }
            set
            {
                OnEFTBatchIDChanging(value);
                ReportPropertyChanging("EFTBatchID");
                _EFTBatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EFTBatchID");
                OnEFTBatchIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EFTBatchID;
        partial void OnEFTBatchIDChanging(Nullable<global::System.Int32> value);
        partial void OnEFTBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TraceNumber
        {
            get
            {
                return _TraceNumber;
            }
            set
            {
                OnTraceNumberChanging(value);
                ReportPropertyChanging("TraceNumber");
                _TraceNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TraceNumber");
                OnTraceNumberChanged();
            }
        }
        private global::System.String _TraceNumber;
        partial void OnTraceNumberChanging(global::System.String value);
        partial void OnTraceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IndividualIdentificationNumber
        {
            get
            {
                return _IndividualIdentificationNumber;
            }
            set
            {
                OnIndividualIdentificationNumberChanging(value);
                ReportPropertyChanging("IndividualIdentificationNumber");
                _IndividualIdentificationNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IndividualIdentificationNumber");
                OnIndividualIdentificationNumberChanged();
            }
        }
        private global::System.String _IndividualIdentificationNumber;
        partial void OnIndividualIdentificationNumberChanging(global::System.String value);
        partial void OnIndividualIdentificationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTProfileID
        {
            get
            {
                return _EFTProfileID;
            }
            set
            {
                OnEFTProfileIDChanging(value);
                ReportPropertyChanging("EFTProfileID");
                _EFTProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EFTProfileID");
                OnEFTProfileIDChanged();
            }
        }
        private global::System.Int32 _EFTProfileID;
        partial void OnEFTProfileIDChanging(global::System.Int32 value);
        partial void OnEFTProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Prenote
        {
            get
            {
                return _Prenote;
            }
            set
            {
                OnPrenoteChanging(value);
                ReportPropertyChanging("Prenote");
                _Prenote = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Prenote");
                OnPrenoteChanged();
            }
        }
        private global::System.Boolean _Prenote;
        partial void OnPrenoteChanging(global::System.Boolean value);
        partial void OnPrenoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EFTs_EFTStatusTypes", "EFTStatus")]
        public EFTStatus EFTStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EFTStatus>("NetStepsCommissionsDB.FK_EFTs_EFTStatusTypes", "EFTStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EFTStatus>("NetStepsCommissionsDB.FK_EFTs_EFTStatusTypes", "EFTStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EFTStatus> EFTStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EFTStatus>("NetStepsCommissionsDB.FK_EFTs_EFTStatusTypes", "EFTStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EFTStatus>("NetStepsCommissionsDB.FK_EFTs_EFTStatusTypes", "EFTStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="EFTBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EFTBatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EFTBatch object.
        /// </summary>
        /// <param name="eFTBatchID">Initial value of the EFTBatchID property.</param>
        /// <param name="eFTFileID">Initial value of the EFTFileID property.</param>
        /// <param name="descriptiveDate">Initial value of the DescriptiveDate property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="batchNumber">Initial value of the BatchNumber property.</param>
        /// <param name="entryCount">Initial value of the EntryCount property.</param>
        /// <param name="entryHash">Initial value of the EntryHash property.</param>
        /// <param name="totalDebitAmount">Initial value of the TotalDebitAmount property.</param>
        /// <param name="totalCreditAmount">Initial value of the TotalCreditAmount property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static EFTBatch CreateEFTBatch(global::System.Int32 eFTBatchID, global::System.Int32 eFTFileID, global::System.DateTime descriptiveDate, global::System.DateTime effectiveDate, global::System.Int32 batchNumber, global::System.Int32 entryCount, global::System.Int64 entryHash, global::System.Decimal totalDebitAmount, global::System.Decimal totalCreditAmount, global::System.Byte[] dataVersion)
        {
            EFTBatch eFTBatch = new EFTBatch();
            eFTBatch.EFTBatchID = eFTBatchID;
            eFTBatch.EFTFileID = eFTFileID;
            eFTBatch.DescriptiveDate = descriptiveDate;
            eFTBatch.EffectiveDate = effectiveDate;
            eFTBatch.BatchNumber = batchNumber;
            eFTBatch.EntryCount = entryCount;
            eFTBatch.EntryHash = entryHash;
            eFTBatch.TotalDebitAmount = totalDebitAmount;
            eFTBatch.TotalCreditAmount = totalCreditAmount;
            eFTBatch.DataVersion = dataVersion;
            return eFTBatch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTBatchID
        {
            get
            {
                return _EFTBatchID;
            }
            set
            {
                if (_EFTBatchID != value)
                {
                    OnEFTBatchIDChanging(value);
                    ReportPropertyChanging("EFTBatchID");
                    _EFTBatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EFTBatchID");
                    OnEFTBatchIDChanged();
                }
            }
        }
        private global::System.Int32 _EFTBatchID;
        partial void OnEFTBatchIDChanging(global::System.Int32 value);
        partial void OnEFTBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTFileID
        {
            get
            {
                return _EFTFileID;
            }
            set
            {
                if (_EFTFileID != value)
                {
                    OnEFTFileIDChanging(value);
                    ReportPropertyChanging("EFTFileID");
                    _EFTFileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EFTFileID");
                    OnEFTFileIDChanged();
                }
            }
        }
        private global::System.Int32 _EFTFileID;
        partial void OnEFTFileIDChanging(global::System.Int32 value);
        partial void OnEFTFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DescriptiveDate
        {
            get
            {
                return _DescriptiveDate;
            }
            set
            {
                if (_DescriptiveDate != value)
                {
                    OnDescriptiveDateChanging(value);
                    ReportPropertyChanging("DescriptiveDate");
                    _DescriptiveDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DescriptiveDate");
                    OnDescriptiveDateChanged();
                }
            }
        }
        private global::System.DateTime _DescriptiveDate;
        partial void OnDescriptiveDateChanging(global::System.DateTime value);
        partial void OnDescriptiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                if (_EffectiveDate != value)
                {
                    OnEffectiveDateChanging(value);
                    ReportPropertyChanging("EffectiveDate");
                    _EffectiveDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectiveDate");
                    OnEffectiveDateChanged();
                }
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchNumber
        {
            get
            {
                return _BatchNumber;
            }
            set
            {
                if (_BatchNumber != value)
                {
                    OnBatchNumberChanging(value);
                    ReportPropertyChanging("BatchNumber");
                    _BatchNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BatchNumber");
                    OnBatchNumberChanged();
                }
            }
        }
        private global::System.Int32 _BatchNumber;
        partial void OnBatchNumberChanging(global::System.Int32 value);
        partial void OnBatchNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryCount
        {
            get
            {
                return _EntryCount;
            }
            set
            {
                if (_EntryCount != value)
                {
                    OnEntryCountChanging(value);
                    ReportPropertyChanging("EntryCount");
                    _EntryCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryCount");
                    OnEntryCountChanged();
                }
            }
        }
        private global::System.Int32 _EntryCount;
        partial void OnEntryCountChanging(global::System.Int32 value);
        partial void OnEntryCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EntryHash
        {
            get
            {
                return _EntryHash;
            }
            set
            {
                if (_EntryHash != value)
                {
                    OnEntryHashChanging(value);
                    ReportPropertyChanging("EntryHash");
                    _EntryHash = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryHash");
                    OnEntryHashChanged();
                }
            }
        }
        private global::System.Int64 _EntryHash;
        partial void OnEntryHashChanging(global::System.Int64 value);
        partial void OnEntryHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalDebitAmount
        {
            get
            {
                return _TotalDebitAmount;
            }
            set
            {
                if (_TotalDebitAmount != value)
                {
                    OnTotalDebitAmountChanging(value);
                    ReportPropertyChanging("TotalDebitAmount");
                    _TotalDebitAmount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TotalDebitAmount");
                    OnTotalDebitAmountChanged();
                }
            }
        }
        private global::System.Decimal _TotalDebitAmount;
        partial void OnTotalDebitAmountChanging(global::System.Decimal value);
        partial void OnTotalDebitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalCreditAmount
        {
            get
            {
                return _TotalCreditAmount;
            }
            set
            {
                if (_TotalCreditAmount != value)
                {
                    OnTotalCreditAmountChanging(value);
                    ReportPropertyChanging("TotalCreditAmount");
                    _TotalCreditAmount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TotalCreditAmount");
                    OnTotalCreditAmountChanged();
                }
            }
        }
        private global::System.Decimal _TotalCreditAmount;
        partial void OnTotalCreditAmountChanging(global::System.Decimal value);
        partial void OnTotalCreditAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_DataVersion, value))
                {
                    OnDataVersionChanging(value);
                    ReportPropertyChanging("DataVersion");
                    _DataVersion = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("DataVersion");
                    OnDataVersionChanged();
                }
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EFTBatches_EFTFiles", "EFTFile")]
        public EFTFile EFTFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EFTFile>("NetStepsCommissionsDB.FK_EFTBatches_EFTFiles", "EFTFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EFTFile>("NetStepsCommissionsDB.FK_EFTBatches_EFTFiles", "EFTFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EFTFile> EFTFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EFTFile>("NetStepsCommissionsDB.FK_EFTBatches_EFTFiles", "EFTFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EFTFile>("NetStepsCommissionsDB.FK_EFTBatches_EFTFiles", "EFTFile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="EFTDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EFTDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EFTDetail object.
        /// </summary>
        /// <param name="bankName">Initial value of the BankName property.</param>
        /// <param name="nameOnAccount">Initial value of the NameOnAccount property.</param>
        /// <param name="routingNumber">Initial value of the RoutingNumber property.</param>
        /// <param name="bankAccountNumber">Initial value of the BankAccountNumber property.</param>
        /// <param name="bankAccountTypeID">Initial value of the BankAccountTypeID property.</param>
        /// <param name="eFTID">Initial value of the EFTID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static EFTDetail CreateEFTDetail(global::System.String bankName, global::System.String nameOnAccount, global::System.String routingNumber, global::System.String bankAccountNumber, global::System.Int32 bankAccountTypeID, global::System.Int32 eFTID, global::System.Byte[] dataVersion)
        {
            EFTDetail eFTDetail = new EFTDetail();
            eFTDetail.BankName = bankName;
            eFTDetail.NameOnAccount = nameOnAccount;
            eFTDetail.RoutingNumber = routingNumber;
            eFTDetail.BankAccountNumber = bankAccountNumber;
            eFTDetail.BankAccountTypeID = bankAccountTypeID;
            eFTDetail.EFTID = eFTID;
            eFTDetail.DataVersion = dataVersion;
            return eFTDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                if (_BankName != value)
                {
                    OnBankNameChanging(value);
                    ReportPropertyChanging("BankName");
                    _BankName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BankName");
                    OnBankNameChanged();
                }
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankPhone
        {
            get
            {
                return _BankPhone;
            }
            set
            {
                OnBankPhoneChanging(value);
                ReportPropertyChanging("BankPhone");
                _BankPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankPhone");
                OnBankPhoneChanged();
            }
        }
        private global::System.String _BankPhone;
        partial void OnBankPhoneChanging(global::System.String value);
        partial void OnBankPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BankAddressID
        {
            get
            {
                return _BankAddressID;
            }
            set
            {
                OnBankAddressIDChanging(value);
                ReportPropertyChanging("BankAddressID");
                _BankAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankAddressID");
                OnBankAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BankAddressID;
        partial void OnBankAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnBankAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameOnAccount
        {
            get
            {
                return _NameOnAccount;
            }
            set
            {
                if (_NameOnAccount != value)
                {
                    OnNameOnAccountChanging(value);
                    ReportPropertyChanging("NameOnAccount");
                    _NameOnAccount = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameOnAccount");
                    OnNameOnAccountChanged();
                }
            }
        }
        private global::System.String _NameOnAccount;
        partial void OnNameOnAccountChanging(global::System.String value);
        partial void OnNameOnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoutingNumber
        {
            get
            {
                return _RoutingNumber;
            }
            set
            {
                if (_RoutingNumber != value)
                {
                    OnRoutingNumberChanging(value);
                    ReportPropertyChanging("RoutingNumber");
                    _RoutingNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoutingNumber");
                    OnRoutingNumberChanged();
                }
            }
        }
        private global::System.String _RoutingNumber;
        partial void OnRoutingNumberChanging(global::System.String value);
        partial void OnRoutingNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankAccountNumber
        {
            get
            {
                return _BankAccountNumber;
            }
            set
            {
                if (_BankAccountNumber != value)
                {
                    OnBankAccountNumberChanging(value);
                    ReportPropertyChanging("BankAccountNumber");
                    _BankAccountNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BankAccountNumber");
                    OnBankAccountNumberChanged();
                }
            }
        }
        private global::System.String _BankAccountNumber;
        partial void OnBankAccountNumberChanging(global::System.String value);
        partial void OnBankAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankAccountTypeID
        {
            get
            {
                return _BankAccountTypeID;
            }
            set
            {
                if (_BankAccountTypeID != value)
                {
                    OnBankAccountTypeIDChanging(value);
                    ReportPropertyChanging("BankAccountTypeID");
                    _BankAccountTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BankAccountTypeID");
                    OnBankAccountTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _BankAccountTypeID;
        partial void OnBankAccountTypeIDChanging(global::System.Int32 value);
        partial void OnBankAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTID
        {
            get
            {
                return _EFTID;
            }
            set
            {
                if (_EFTID != value)
                {
                    OnEFTIDChanging(value);
                    ReportPropertyChanging("EFTID");
                    _EFTID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EFTID");
                    OnEFTIDChanged();
                }
            }
        }
        private global::System.Int32 _EFTID;
        partial void OnEFTIDChanging(global::System.Int32 value);
        partial void OnEFTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_DataVersion, value))
                {
                    OnDataVersionChanging(value);
                    ReportPropertyChanging("DataVersion");
                    _DataVersion = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("DataVersion");
                    OnDataVersionChanged();
                }
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EFTDetails_BankAccountTypes", "BankAccountType")]
        public BankAccountType BankAccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccountType>("NetStepsCommissionsDB.FK_EFTDetails_BankAccountTypes", "BankAccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccountType>("NetStepsCommissionsDB.FK_EFTDetails_BankAccountTypes", "BankAccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BankAccountType> BankAccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccountType>("NetStepsCommissionsDB.FK_EFTDetails_BankAccountTypes", "BankAccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BankAccountType>("NetStepsCommissionsDB.FK_EFTDetails_BankAccountTypes", "BankAccountType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="EFTFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EFTFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EFTFile object.
        /// </summary>
        /// <param name="eFTFileID">Initial value of the EFTFileID property.</param>
        /// <param name="fileCreationDate">Initial value of the FileCreationDate property.</param>
        /// <param name="fileIDModifier">Initial value of the FileIDModifier property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="batchCount">Initial value of the BatchCount property.</param>
        /// <param name="blockCount">Initial value of the BlockCount property.</param>
        /// <param name="entryCount">Initial value of the EntryCount property.</param>
        /// <param name="entryHash">Initial value of the EntryHash property.</param>
        /// <param name="totalDebitAmount">Initial value of the TotalDebitAmount property.</param>
        /// <param name="totalCreditAmount">Initial value of the TotalCreditAmount property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static EFTFile CreateEFTFile(global::System.Int32 eFTFileID, global::System.DateTime fileCreationDate, global::System.String fileIDModifier, global::System.String fileName, global::System.Int32 batchCount, global::System.Int32 blockCount, global::System.Int32 entryCount, global::System.Int64 entryHash, global::System.Decimal totalDebitAmount, global::System.Decimal totalCreditAmount, global::System.Byte[] dataVersion)
        {
            EFTFile eFTFile = new EFTFile();
            eFTFile.EFTFileID = eFTFileID;
            eFTFile.FileCreationDate = fileCreationDate;
            eFTFile.FileIDModifier = fileIDModifier;
            eFTFile.FileName = fileName;
            eFTFile.BatchCount = batchCount;
            eFTFile.BlockCount = blockCount;
            eFTFile.EntryCount = entryCount;
            eFTFile.EntryHash = entryHash;
            eFTFile.TotalDebitAmount = totalDebitAmount;
            eFTFile.TotalCreditAmount = totalCreditAmount;
            eFTFile.DataVersion = dataVersion;
            return eFTFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTFileID
        {
            get
            {
                return _EFTFileID;
            }
            set
            {
                if (_EFTFileID != value)
                {
                    OnEFTFileIDChanging(value);
                    ReportPropertyChanging("EFTFileID");
                    _EFTFileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EFTFileID");
                    OnEFTFileIDChanged();
                }
            }
        }
        private global::System.Int32 _EFTFileID;
        partial void OnEFTFileIDChanging(global::System.Int32 value);
        partial void OnEFTFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FileCreationDate
        {
            get
            {
                return _FileCreationDate;
            }
            set
            {
                OnFileCreationDateChanging(value);
                ReportPropertyChanging("FileCreationDate");
                _FileCreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileCreationDate");
                OnFileCreationDateChanged();
            }
        }
        private global::System.DateTime _FileCreationDate;
        partial void OnFileCreationDateChanging(global::System.DateTime value);
        partial void OnFileCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileIDModifier
        {
            get
            {
                return _FileIDModifier;
            }
            set
            {
                OnFileIDModifierChanging(value);
                ReportPropertyChanging("FileIDModifier");
                _FileIDModifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileIDModifier");
                OnFileIDModifierChanged();
            }
        }
        private global::System.String _FileIDModifier;
        partial void OnFileIDModifierChanging(global::System.String value);
        partial void OnFileIDModifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchCount
        {
            get
            {
                return _BatchCount;
            }
            set
            {
                OnBatchCountChanging(value);
                ReportPropertyChanging("BatchCount");
                _BatchCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchCount");
                OnBatchCountChanged();
            }
        }
        private global::System.Int32 _BatchCount;
        partial void OnBatchCountChanging(global::System.Int32 value);
        partial void OnBatchCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlockCount
        {
            get
            {
                return _BlockCount;
            }
            set
            {
                OnBlockCountChanging(value);
                ReportPropertyChanging("BlockCount");
                _BlockCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockCount");
                OnBlockCountChanged();
            }
        }
        private global::System.Int32 _BlockCount;
        partial void OnBlockCountChanging(global::System.Int32 value);
        partial void OnBlockCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryCount
        {
            get
            {
                return _EntryCount;
            }
            set
            {
                OnEntryCountChanging(value);
                ReportPropertyChanging("EntryCount");
                _EntryCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryCount");
                OnEntryCountChanged();
            }
        }
        private global::System.Int32 _EntryCount;
        partial void OnEntryCountChanging(global::System.Int32 value);
        partial void OnEntryCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EntryHash
        {
            get
            {
                return _EntryHash;
            }
            set
            {
                OnEntryHashChanging(value);
                ReportPropertyChanging("EntryHash");
                _EntryHash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryHash");
                OnEntryHashChanged();
            }
        }
        private global::System.Int64 _EntryHash;
        partial void OnEntryHashChanging(global::System.Int64 value);
        partial void OnEntryHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalDebitAmount
        {
            get
            {
                return _TotalDebitAmount;
            }
            set
            {
                OnTotalDebitAmountChanging(value);
                ReportPropertyChanging("TotalDebitAmount");
                _TotalDebitAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalDebitAmount");
                OnTotalDebitAmountChanged();
            }
        }
        private global::System.Decimal _TotalDebitAmount;
        partial void OnTotalDebitAmountChanging(global::System.Decimal value);
        partial void OnTotalDebitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalCreditAmount
        {
            get
            {
                return _TotalCreditAmount;
            }
            set
            {
                OnTotalCreditAmountChanging(value);
                ReportPropertyChanging("TotalCreditAmount");
                _TotalCreditAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCreditAmount");
                OnTotalCreditAmountChanged();
            }
        }
        private global::System.Decimal _TotalCreditAmount;
        partial void OnTotalCreditAmountChanging(global::System.Decimal value);
        partial void OnTotalCreditAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodID;
        partial void OnPeriodIDChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EFTBatches_EFTFiles", "EFTBatch")]
        public EntityCollection<EFTBatch> EFTBatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EFTBatch>("NetStepsCommissionsDB.FK_EFTBatches_EFTFiles", "EFTBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EFTBatch>("NetStepsCommissionsDB.FK_EFTBatches_EFTFiles", "EFTBatch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="EFTStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EFTStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EFTStatus object.
        /// </summary>
        /// <param name="eFTStatusID">Initial value of the EFTStatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static EFTStatus CreateEFTStatus(global::System.Int32 eFTStatusID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable, global::System.Byte[] dataVersion)
        {
            EFTStatus eFTStatus = new EFTStatus();
            eFTStatus.EFTStatusID = eFTStatusID;
            eFTStatus.Name = name;
            eFTStatus.Enabled = enabled;
            eFTStatus.Editable = editable;
            eFTStatus.DataVersion = dataVersion;
            return eFTStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFTStatusID
        {
            get
            {
                return _EFTStatusID;
            }
            set
            {
                if (_EFTStatusID != value)
                {
                    OnEFTStatusIDChanging(value);
                    ReportPropertyChanging("EFTStatusID");
                    _EFTStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EFTStatusID");
                    OnEFTStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _EFTStatusID;
        partial void OnEFTStatusIDChanging(global::System.Int32 value);
        partial void OnEFTStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EFTs_EFTStatusTypes", "EFT")]
        public EntityCollection<EFT> EFTs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EFT>("NetStepsCommissionsDB.FK_EFTs_EFTStatusTypes", "EFT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EFT>("NetStepsCommissionsDB.FK_EFTs_EFTStatusTypes", "EFT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="EnrolleeBonusRequirement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EnrolleeBonusRequirement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EnrolleeBonusRequirement object.
        /// </summary>
        /// <param name="enrolleeBonusRequirementsID">Initial value of the EnrolleeBonusRequirementsID property.</param>
        /// <param name="bonusTypeID">Initial value of the BonusTypeID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static EnrolleeBonusRequirement CreateEnrolleeBonusRequirement(global::System.Int32 enrolleeBonusRequirementsID, global::System.Int32 bonusTypeID, global::System.Int32 countryID)
        {
            EnrolleeBonusRequirement enrolleeBonusRequirement = new EnrolleeBonusRequirement();
            enrolleeBonusRequirement.EnrolleeBonusRequirementsID = enrolleeBonusRequirementsID;
            enrolleeBonusRequirement.BonusTypeID = bonusTypeID;
            enrolleeBonusRequirement.CountryID = countryID;
            return enrolleeBonusRequirement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnrolleeBonusRequirementsID
        {
            get
            {
                return _EnrolleeBonusRequirementsID;
            }
            set
            {
                if (_EnrolleeBonusRequirementsID != value)
                {
                    OnEnrolleeBonusRequirementsIDChanging(value);
                    ReportPropertyChanging("EnrolleeBonusRequirementsID");
                    _EnrolleeBonusRequirementsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EnrolleeBonusRequirementsID");
                    OnEnrolleeBonusRequirementsIDChanged();
                }
            }
        }
        private global::System.Int32 _EnrolleeBonusRequirementsID;
        partial void OnEnrolleeBonusRequirementsIDChanging(global::System.Int32 value);
        partial void OnEnrolleeBonusRequirementsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusTypeID
        {
            get
            {
                return _BonusTypeID;
            }
            set
            {
                OnBonusTypeIDChanging(value);
                ReportPropertyChanging("BonusTypeID");
                _BonusTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusTypeID");
                OnBonusTypeIDChanged();
            }
        }
        private global::System.Int32 _BonusTypeID;
        partial void OnBonusTypeIDChanging(global::System.Int32 value);
        partial void OnBonusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EnrolleeBonusRequirements_BonusTypes", "BonusType")]
        public BonusType BonusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_BonusTypes", "BonusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_BonusTypes", "BonusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusType> BonusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_BonusTypes", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusType>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_BonusTypes", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_EnrolleeBonusRequirements_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("NetStepsCommissionsDB.FK_EnrolleeBonusRequirements_Countries", "Country", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="errorLogID">Initial value of the ErrorLogID property.</param>
        /// <param name="errorTime">Initial value of the ErrorTime property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="errorNumber">Initial value of the ErrorNumber property.</param>
        /// <param name="errorMessage">Initial value of the ErrorMessage property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int32 errorLogID, global::System.DateTime errorTime, global::System.String userName, global::System.Int32 errorNumber, global::System.String errorMessage, global::System.Byte[] dataVersion)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.ErrorLogID = errorLogID;
            errorLog.ErrorTime = errorTime;
            errorLog.UserName = userName;
            errorLog.ErrorNumber = errorNumber;
            errorLog.ErrorMessage = errorMessage;
            errorLog.DataVersion = dataVersion;
            return errorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ErrorLogID
        {
            get
            {
                return _ErrorLogID;
            }
            set
            {
                if (_ErrorLogID != value)
                {
                    OnErrorLogIDChanging(value);
                    ReportPropertyChanging("ErrorLogID");
                    _ErrorLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ErrorLogID");
                    OnErrorLogIDChanged();
                }
            }
        }
        private global::System.Int32 _ErrorLogID;
        partial void OnErrorLogIDChanging(global::System.Int32 value);
        partial void OnErrorLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ErrorTime
        {
            get
            {
                return _ErrorTime;
            }
            set
            {
                OnErrorTimeChanging(value);
                ReportPropertyChanging("ErrorTime");
                _ErrorTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorTime");
                OnErrorTimeChanged();
            }
        }
        private global::System.DateTime _ErrorTime;
        partial void OnErrorTimeChanging(global::System.DateTime value);
        partial void OnErrorTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ErrorNumber
        {
            get
            {
                return _ErrorNumber;
            }
            set
            {
                OnErrorNumberChanging(value);
                ReportPropertyChanging("ErrorNumber");
                _ErrorNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorNumber");
                OnErrorNumberChanged();
            }
        }
        private global::System.Int32 _ErrorNumber;
        partial void OnErrorNumberChanging(global::System.Int32 value);
        partial void OnErrorNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorSeverity
        {
            get
            {
                return _ErrorSeverity;
            }
            set
            {
                OnErrorSeverityChanging(value);
                ReportPropertyChanging("ErrorSeverity");
                _ErrorSeverity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorSeverity");
                OnErrorSeverityChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorSeverity;
        partial void OnErrorSeverityChanging(Nullable<global::System.Int32> value);
        partial void OnErrorSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorState
        {
            get
            {
                return _ErrorState;
            }
            set
            {
                OnErrorStateChanging(value);
                ReportPropertyChanging("ErrorState");
                _ErrorState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorState");
                OnErrorStateChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorState;
        partial void OnErrorStateChanging(Nullable<global::System.Int32> value);
        partial void OnErrorStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorProcedure
        {
            get
            {
                return _ErrorProcedure;
            }
            set
            {
                OnErrorProcedureChanging(value);
                ReportPropertyChanging("ErrorProcedure");
                _ErrorProcedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorProcedure");
                OnErrorProcedureChanged();
            }
        }
        private global::System.String _ErrorProcedure;
        partial void OnErrorProcedureChanging(global::System.String value);
        partial void OnErrorProcedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorLine
        {
            get
            {
                return _ErrorLine;
            }
            set
            {
                OnErrorLineChanging(value);
                ReportPropertyChanging("ErrorLine");
                _ErrorLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorLine");
                OnErrorLineChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorLine;
        partial void OnErrorLineChanging(Nullable<global::System.Int32> value);
        partial void OnErrorLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Garnishment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Garnishment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Garnishment object.
        /// </summary>
        /// <param name="garnishmentID">Initial value of the GarnishmentID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="garnishmentTypeID">Initial value of the GarnishmentTypeID property.</param>
        /// <param name="garnishmentCalculationTypeID">Initial value of the GarnishmentCalculationTypeID property.</param>
        public static Garnishment CreateGarnishment(global::System.Int32 garnishmentID, global::System.Int32 accountID, global::System.Int32 garnishmentTypeID, global::System.Int32 garnishmentCalculationTypeID)
        {
            Garnishment garnishment = new Garnishment();
            garnishment.GarnishmentID = garnishmentID;
            garnishment.AccountID = accountID;
            garnishment.GarnishmentTypeID = garnishmentTypeID;
            garnishment.GarnishmentCalculationTypeID = garnishmentCalculationTypeID;
            return garnishment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GarnishmentID
        {
            get
            {
                return _GarnishmentID;
            }
            set
            {
                if (_GarnishmentID != value)
                {
                    OnGarnishmentIDChanging(value);
                    ReportPropertyChanging("GarnishmentID");
                    _GarnishmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GarnishmentID");
                    OnGarnishmentIDChanged();
                }
            }
        }
        private global::System.Int32 _GarnishmentID;
        partial void OnGarnishmentIDChanging(global::System.Int32 value);
        partial void OnGarnishmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GarnishmentTypeID
        {
            get
            {
                return _GarnishmentTypeID;
            }
            set
            {
                OnGarnishmentTypeIDChanging(value);
                ReportPropertyChanging("GarnishmentTypeID");
                _GarnishmentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GarnishmentTypeID");
                OnGarnishmentTypeIDChanged();
            }
        }
        private global::System.Int32 _GarnishmentTypeID;
        partial void OnGarnishmentTypeIDChanging(global::System.Int32 value);
        partial void OnGarnishmentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GarnishmentCalculationTypeID
        {
            get
            {
                return _GarnishmentCalculationTypeID;
            }
            set
            {
                OnGarnishmentCalculationTypeIDChanging(value);
                ReportPropertyChanging("GarnishmentCalculationTypeID");
                _GarnishmentCalculationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GarnishmentCalculationTypeID");
                OnGarnishmentCalculationTypeIDChanged();
            }
        }
        private global::System.Int32 _GarnishmentCalculationTypeID;
        partial void OnGarnishmentCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnGarnishmentCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Max
        {
            get
            {
                return _Max;
            }
            set
            {
                OnMaxChanging(value);
                ReportPropertyChanging("Max");
                _Max = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Max");
                OnMaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _Max;
        partial void OnMaxChanging(Nullable<global::System.Decimal> value);
        partial void OnMaxChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkGarnishmentsAccounts", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.FkGarnishmentsAccounts", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.FkGarnishmentsAccounts", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.FkGarnishmentsAccounts", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.FkGarnishmentsAccounts", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkGarnishmentsGarnishmentCalculationTypes", "GarnishmentCalculationType")]
        public GarnishmentCalculationType GarnishmentCalculationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GarnishmentCalculationType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentCalculationTypes", "GarnishmentCalculationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GarnishmentCalculationType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentCalculationTypes", "GarnishmentCalculationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GarnishmentCalculationType> GarnishmentCalculationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GarnishmentCalculationType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentCalculationTypes", "GarnishmentCalculationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GarnishmentCalculationType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentCalculationTypes", "GarnishmentCalculationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkGarnishmentsGarnishmentTypes", "GarnishmentType")]
        public GarnishmentType GarnishmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GarnishmentType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentTypes", "GarnishmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GarnishmentType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentTypes", "GarnishmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GarnishmentType> GarnishmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GarnishmentType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentTypes", "GarnishmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GarnishmentType>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentTypes", "GarnishmentType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="GarnishmentCalculationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GarnishmentCalculationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GarnishmentCalculationType object.
        /// </summary>
        /// <param name="garnishmentCalculationTypeID">Initial value of the GarnishmentCalculationTypeID property.</param>
        public static GarnishmentCalculationType CreateGarnishmentCalculationType(global::System.Int32 garnishmentCalculationTypeID)
        {
            GarnishmentCalculationType garnishmentCalculationType = new GarnishmentCalculationType();
            garnishmentCalculationType.GarnishmentCalculationTypeID = garnishmentCalculationTypeID;
            return garnishmentCalculationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GarnishmentCalculationTypeID
        {
            get
            {
                return _GarnishmentCalculationTypeID;
            }
            set
            {
                if (_GarnishmentCalculationTypeID != value)
                {
                    OnGarnishmentCalculationTypeIDChanging(value);
                    ReportPropertyChanging("GarnishmentCalculationTypeID");
                    _GarnishmentCalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GarnishmentCalculationTypeID");
                    OnGarnishmentCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _GarnishmentCalculationTypeID;
        partial void OnGarnishmentCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnGarnishmentCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkGarnishmentsGarnishmentCalculationTypes", "Garnishment")]
        public EntityCollection<Garnishment> Garnishments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Garnishment>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentCalculationTypes", "Garnishment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Garnishment>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentCalculationTypes", "Garnishment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="GarnishmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GarnishmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GarnishmentType object.
        /// </summary>
        /// <param name="garnishmentTypeID">Initial value of the GarnishmentTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static GarnishmentType CreateGarnishmentType(global::System.Int32 garnishmentTypeID, global::System.String name)
        {
            GarnishmentType garnishmentType = new GarnishmentType();
            garnishmentType.GarnishmentTypeID = garnishmentTypeID;
            garnishmentType.Name = name;
            return garnishmentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GarnishmentTypeID
        {
            get
            {
                return _GarnishmentTypeID;
            }
            set
            {
                if (_GarnishmentTypeID != value)
                {
                    OnGarnishmentTypeIDChanging(value);
                    ReportPropertyChanging("GarnishmentTypeID");
                    _GarnishmentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GarnishmentTypeID");
                    OnGarnishmentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _GarnishmentTypeID;
        partial void OnGarnishmentTypeIDChanging(global::System.Int32 value);
        partial void OnGarnishmentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkGarnishmentsGarnishmentTypes", "Garnishment")]
        public EntityCollection<Garnishment> Garnishments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Garnishment>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentTypes", "Garnishment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Garnishment>("NetStepsCommissionsDB.FkGarnishmentsGarnishmentTypes", "Garnishment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="GeneralExciseTax")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeneralExciseTax : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeneralExciseTax object.
        /// </summary>
        /// <param name="generalExciseTaxID">Initial value of the GeneralExciseTaxID property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        public static GeneralExciseTax CreateGeneralExciseTax(global::System.Int32 generalExciseTaxID, global::System.String postalCode, global::System.Decimal percentage)
        {
            GeneralExciseTax generalExciseTax = new GeneralExciseTax();
            generalExciseTax.GeneralExciseTaxID = generalExciseTaxID;
            generalExciseTax.PostalCode = postalCode;
            generalExciseTax.Percentage = percentage;
            return generalExciseTax;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeneralExciseTaxID
        {
            get
            {
                return _GeneralExciseTaxID;
            }
            set
            {
                if (_GeneralExciseTaxID != value)
                {
                    OnGeneralExciseTaxIDChanging(value);
                    ReportPropertyChanging("GeneralExciseTaxID");
                    _GeneralExciseTaxID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GeneralExciseTaxID");
                    OnGeneralExciseTaxIDChanged();
                }
            }
        }
        private global::System.Int32 _GeneralExciseTaxID;
        partial void OnGeneralExciseTaxIDChanging(global::System.Int32 value);
        partial void OnGeneralExciseTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Decimal _Percentage;
        partial void OnPercentageChanging(global::System.Decimal value);
        partial void OnPercentageChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="HyperWalletAccountStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HyperWalletAccountStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HyperWalletAccountStatus object.
        /// </summary>
        /// <param name="hyperWalletAccountStatusID">Initial value of the HyperWalletAccountStatusID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static HyperWalletAccountStatus CreateHyperWalletAccountStatus(global::System.Int32 hyperWalletAccountStatusID, global::System.String status, global::System.Byte[] dataVersion)
        {
            HyperWalletAccountStatus hyperWalletAccountStatus = new HyperWalletAccountStatus();
            hyperWalletAccountStatus.HyperWalletAccountStatusID = hyperWalletAccountStatusID;
            hyperWalletAccountStatus.Status = status;
            hyperWalletAccountStatus.DataVersion = dataVersion;
            return hyperWalletAccountStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletAccountStatusID
        {
            get
            {
                return _HyperWalletAccountStatusID;
            }
            set
            {
                if (_HyperWalletAccountStatusID != value)
                {
                    OnHyperWalletAccountStatusIDChanging(value);
                    ReportPropertyChanging("HyperWalletAccountStatusID");
                    _HyperWalletAccountStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HyperWalletAccountStatusID");
                    OnHyperWalletAccountStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _HyperWalletAccountStatusID;
        partial void OnHyperWalletAccountStatusIDChanging(global::System.Int32 value);
        partial void OnHyperWalletAccountStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="HyperWalletAccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HyperWalletAccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HyperWalletAccountType object.
        /// </summary>
        /// <param name="hyperWalletAccountTypeID">Initial value of the HyperWalletAccountTypeID property.</param>
        /// <param name="accountType">Initial value of the AccountType property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static HyperWalletAccountType CreateHyperWalletAccountType(global::System.Int32 hyperWalletAccountTypeID, global::System.String accountType, global::System.Byte[] dataVersion)
        {
            HyperWalletAccountType hyperWalletAccountType = new HyperWalletAccountType();
            hyperWalletAccountType.HyperWalletAccountTypeID = hyperWalletAccountTypeID;
            hyperWalletAccountType.AccountType = accountType;
            hyperWalletAccountType.DataVersion = dataVersion;
            return hyperWalletAccountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletAccountTypeID
        {
            get
            {
                return _HyperWalletAccountTypeID;
            }
            set
            {
                if (_HyperWalletAccountTypeID != value)
                {
                    OnHyperWalletAccountTypeIDChanging(value);
                    ReportPropertyChanging("HyperWalletAccountTypeID");
                    _HyperWalletAccountTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HyperWalletAccountTypeID");
                    OnHyperWalletAccountTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _HyperWalletAccountTypeID;
        partial void OnHyperWalletAccountTypeIDChanging(global::System.Int32 value);
        partial void OnHyperWalletAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="HyperWalletBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HyperWalletBatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HyperWalletBatch object.
        /// </summary>
        /// <param name="hyperWalletBatchID">Initial value of the HyperWalletBatchID property.</param>
        /// <param name="fileDate">Initial value of the FileDate property.</param>
        /// <param name="batchStatusID">Initial value of the BatchStatusID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static HyperWalletBatch CreateHyperWalletBatch(global::System.Int32 hyperWalletBatchID, global::System.DateTime fileDate, global::System.Int32 batchStatusID, global::System.Byte[] dataVersion)
        {
            HyperWalletBatch hyperWalletBatch = new HyperWalletBatch();
            hyperWalletBatch.HyperWalletBatchID = hyperWalletBatchID;
            hyperWalletBatch.FileDate = fileDate;
            hyperWalletBatch.BatchStatusID = batchStatusID;
            hyperWalletBatch.DataVersion = dataVersion;
            return hyperWalletBatch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletBatchID
        {
            get
            {
                return _HyperWalletBatchID;
            }
            set
            {
                if (_HyperWalletBatchID != value)
                {
                    OnHyperWalletBatchIDChanging(value);
                    ReportPropertyChanging("HyperWalletBatchID");
                    _HyperWalletBatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HyperWalletBatchID");
                    OnHyperWalletBatchIDChanged();
                }
            }
        }
        private global::System.Int32 _HyperWalletBatchID;
        partial void OnHyperWalletBatchIDChanging(global::System.Int32 value);
        partial void OnHyperWalletBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FileDate
        {
            get
            {
                return _FileDate;
            }
            set
            {
                OnFileDateChanging(value);
                ReportPropertyChanging("FileDate");
                _FileDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileDate");
                OnFileDateChanged();
            }
        }
        private global::System.DateTime _FileDate;
        partial void OnFileDateChanging(global::System.DateTime value);
        partial void OnFileDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryCount
        {
            get
            {
                return _EntryCount;
            }
            set
            {
                OnEntryCountChanging(value);
                ReportPropertyChanging("EntryCount");
                _EntryCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryCount");
                OnEntryCountChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryCount;
        partial void OnEntryCountChanging(Nullable<global::System.Int32> value);
        partial void OnEntryCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalAmount;
        partial void OnTotalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchStatusID
        {
            get
            {
                return _BatchStatusID;
            }
            set
            {
                OnBatchStatusIDChanging(value);
                ReportPropertyChanging("BatchStatusID");
                _BatchStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchStatusID");
                OnBatchStatusIDChanged();
            }
        }
        private global::System.Int32 _BatchStatusID;
        partial void OnBatchStatusIDChanging(global::System.Int32 value);
        partial void OnBatchStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="HyperWalletBatchDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HyperWalletBatchDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HyperWalletBatchDetail object.
        /// </summary>
        /// <param name="hyperWalletBatchDetailID">Initial value of the HyperWalletBatchDetailID property.</param>
        /// <param name="hyperWalletBatchDetailStatusID">Initial value of the HyperWalletBatchDetailStatusID property.</param>
        /// <param name="hyperWalletProfileID">Initial value of the HyperWalletProfileID property.</param>
        /// <param name="operationCode">Initial value of the OperationCode property.</param>
        /// <param name="consultantId">Initial value of the ConsultantId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="birthday">Initial value of the Birthday property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="stateProvince">Initial value of the StateProvince property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="countryCode3">Initial value of the CountryCode3 property.</param>
        /// <param name="doAllowWebAccess">Initial value of the DoAllowWebAccess property.</param>
        /// <param name="doAttachCard">Initial value of the DoAttachCard property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static HyperWalletBatchDetail CreateHyperWalletBatchDetail(global::System.Int32 hyperWalletBatchDetailID, global::System.Int32 hyperWalletBatchDetailStatusID, global::System.Int32 hyperWalletProfileID, global::System.Int32 operationCode, global::System.String consultantId, global::System.String firstName, global::System.String lastName, global::System.DateTime birthday, global::System.String street, global::System.String city, global::System.String stateProvince, global::System.String postalCode, global::System.String countryCode3, global::System.Boolean doAllowWebAccess, global::System.Boolean doAttachCard, global::System.Byte[] dataVersion)
        {
            HyperWalletBatchDetail hyperWalletBatchDetail = new HyperWalletBatchDetail();
            hyperWalletBatchDetail.HyperWalletBatchDetailID = hyperWalletBatchDetailID;
            hyperWalletBatchDetail.HyperWalletBatchDetailStatusID = hyperWalletBatchDetailStatusID;
            hyperWalletBatchDetail.HyperWalletProfileID = hyperWalletProfileID;
            hyperWalletBatchDetail.OperationCode = operationCode;
            hyperWalletBatchDetail.ConsultantId = consultantId;
            hyperWalletBatchDetail.FirstName = firstName;
            hyperWalletBatchDetail.LastName = lastName;
            hyperWalletBatchDetail.Birthday = birthday;
            hyperWalletBatchDetail.Street = street;
            hyperWalletBatchDetail.City = city;
            hyperWalletBatchDetail.StateProvince = stateProvince;
            hyperWalletBatchDetail.PostalCode = postalCode;
            hyperWalletBatchDetail.CountryCode3 = countryCode3;
            hyperWalletBatchDetail.DoAllowWebAccess = doAllowWebAccess;
            hyperWalletBatchDetail.DoAttachCard = doAttachCard;
            hyperWalletBatchDetail.DataVersion = dataVersion;
            return hyperWalletBatchDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletBatchDetailID
        {
            get
            {
                return _HyperWalletBatchDetailID;
            }
            set
            {
                if (_HyperWalletBatchDetailID != value)
                {
                    OnHyperWalletBatchDetailIDChanging(value);
                    ReportPropertyChanging("HyperWalletBatchDetailID");
                    _HyperWalletBatchDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HyperWalletBatchDetailID");
                    OnHyperWalletBatchDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _HyperWalletBatchDetailID;
        partial void OnHyperWalletBatchDetailIDChanging(global::System.Int32 value);
        partial void OnHyperWalletBatchDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HyperWalletBatchID
        {
            get
            {
                return _HyperWalletBatchID;
            }
            set
            {
                OnHyperWalletBatchIDChanging(value);
                ReportPropertyChanging("HyperWalletBatchID");
                _HyperWalletBatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HyperWalletBatchID");
                OnHyperWalletBatchIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HyperWalletBatchID;
        partial void OnHyperWalletBatchIDChanging(Nullable<global::System.Int32> value);
        partial void OnHyperWalletBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletBatchDetailStatusID
        {
            get
            {
                return _HyperWalletBatchDetailStatusID;
            }
            set
            {
                OnHyperWalletBatchDetailStatusIDChanging(value);
                ReportPropertyChanging("HyperWalletBatchDetailStatusID");
                _HyperWalletBatchDetailStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HyperWalletBatchDetailStatusID");
                OnHyperWalletBatchDetailStatusIDChanged();
            }
        }
        private global::System.Int32 _HyperWalletBatchDetailStatusID;
        partial void OnHyperWalletBatchDetailStatusIDChanging(global::System.Int32 value);
        partial void OnHyperWalletBatchDetailStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletProfileID
        {
            get
            {
                return _HyperWalletProfileID;
            }
            set
            {
                OnHyperWalletProfileIDChanging(value);
                ReportPropertyChanging("HyperWalletProfileID");
                _HyperWalletProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HyperWalletProfileID");
                OnHyperWalletProfileIDChanged();
            }
        }
        private global::System.Int32 _HyperWalletProfileID;
        partial void OnHyperWalletProfileIDChanging(global::System.Int32 value);
        partial void OnHyperWalletProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationCode
        {
            get
            {
                return _OperationCode;
            }
            set
            {
                OnOperationCodeChanging(value);
                ReportPropertyChanging("OperationCode");
                _OperationCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationCode");
                OnOperationCodeChanged();
            }
        }
        private global::System.Int32 _OperationCode;
        partial void OnOperationCodeChanging(global::System.Int32 value);
        partial void OnOperationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConsultantId
        {
            get
            {
                return _ConsultantId;
            }
            set
            {
                OnConsultantIdChanging(value);
                ReportPropertyChanging("ConsultantId");
                _ConsultantId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConsultantId");
                OnConsultantIdChanged();
            }
        }
        private global::System.String _ConsultantId;
        partial void OnConsultantIdChanging(global::System.String value);
        partial void OnConsultantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private global::System.DateTime _Birthday;
        partial void OnBirthdayChanging(global::System.DateTime value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode3
        {
            get
            {
                return _CountryCode3;
            }
            set
            {
                OnCountryCode3Changing(value);
                ReportPropertyChanging("CountryCode3");
                _CountryCode3 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode3");
                OnCountryCode3Changed();
            }
        }
        private global::System.String _CountryCode3;
        partial void OnCountryCode3Changing(global::System.String value);
        partial void OnCountryCode3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DoAllowWebAccess
        {
            get
            {
                return _DoAllowWebAccess;
            }
            set
            {
                OnDoAllowWebAccessChanging(value);
                ReportPropertyChanging("DoAllowWebAccess");
                _DoAllowWebAccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoAllowWebAccess");
                OnDoAllowWebAccessChanged();
            }
        }
        private global::System.Boolean _DoAllowWebAccess;
        partial void OnDoAllowWebAccessChanging(global::System.Boolean value);
        partial void OnDoAllowWebAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DoAttachCard
        {
            get
            {
                return _DoAttachCard;
            }
            set
            {
                OnDoAttachCardChanging(value);
                ReportPropertyChanging("DoAttachCard");
                _DoAttachCard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoAttachCard");
                OnDoAttachCardChanged();
            }
        }
        private global::System.Boolean _DoAttachCard;
        partial void OnDoAttachCardChanging(global::System.Boolean value);
        partial void OnDoAttachCardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneMain
        {
            get
            {
                return _PhoneMain;
            }
            set
            {
                OnPhoneMainChanging(value);
                ReportPropertyChanging("PhoneMain");
                _PhoneMain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneMain");
                OnPhoneMainChanged();
            }
        }
        private global::System.String _PhoneMain;
        partial void OnPhoneMainChanging(global::System.String value);
        partial void OnPhoneMainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneCell
        {
            get
            {
                return _PhoneCell;
            }
            set
            {
                OnPhoneCellChanging(value);
                ReportPropertyChanging("PhoneCell");
                _PhoneCell = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneCell");
                OnPhoneCellChanged();
            }
        }
        private global::System.String _PhoneCell;
        partial void OnPhoneCellChanging(global::System.String value);
        partial void OnPhoneCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneFax
        {
            get
            {
                return _PhoneFax;
            }
            set
            {
                OnPhoneFaxChanging(value);
                ReportPropertyChanging("PhoneFax");
                _PhoneFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneFax");
                OnPhoneFaxChanged();
            }
        }
        private global::System.String _PhoneFax;
        partial void OnPhoneFaxChanging(global::System.String value);
        partial void OnPhoneFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxNumber
        {
            get
            {
                return _TaxNumber;
            }
            set
            {
                OnTaxNumberChanging(value);
                ReportPropertyChanging("TaxNumber");
                _TaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxNumber");
                OnTaxNumberChanged();
            }
        }
        private global::System.String _TaxNumber;
        partial void OnTaxNumberChanging(global::System.String value);
        partial void OnTaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCode3
        {
            get
            {
                return _CurrencyCode3;
            }
            set
            {
                OnCurrencyCode3Changing(value);
                ReportPropertyChanging("CurrencyCode3");
                _CurrencyCode3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrencyCode3");
                OnCurrencyCode3Changed();
            }
        }
        private global::System.String _CurrencyCode3;
        partial void OnCurrencyCode3Changing(global::System.String value);
        partial void OnCurrencyCode3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentAmount;
        partial void OnPaymentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentTitle
        {
            get
            {
                return _PaymentTitle;
            }
            set
            {
                OnPaymentTitleChanging(value);
                ReportPropertyChanging("PaymentTitle");
                _PaymentTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentTitle");
                OnPaymentTitleChanged();
            }
        }
        private global::System.String _PaymentTitle;
        partial void OnPaymentTitleChanging(global::System.String value);
        partial void OnPaymentTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentDescription
        {
            get
            {
                return _PaymentDescription;
            }
            set
            {
                OnPaymentDescriptionChanging(value);
                ReportPropertyChanging("PaymentDescription");
                _PaymentDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentDescription");
                OnPaymentDescriptionChanged();
            }
        }
        private global::System.String _PaymentDescription;
        partial void OnPaymentDescriptionChanging(global::System.String value);
        partial void OnPaymentDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrivateNotes
        {
            get
            {
                return _PrivateNotes;
            }
            set
            {
                OnPrivateNotesChanging(value);
                ReportPropertyChanging("PrivateNotes");
                _PrivateNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrivateNotes");
                OnPrivateNotesChanged();
            }
        }
        private global::System.String _PrivateNotes;
        partial void OnPrivateNotesChanging(global::System.String value);
        partial void OnPrivateNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponseCode
        {
            get
            {
                return _ResponseCode;
            }
            set
            {
                OnResponseCodeChanging(value);
                ReportPropertyChanging("ResponseCode");
                _ResponseCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponseCode");
                OnResponseCodeChanged();
            }
        }
        private global::System.String _ResponseCode;
        partial void OnResponseCodeChanging(global::System.String value);
        partial void OnResponseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResponseTransaction
        {
            get
            {
                return _ResponseTransaction;
            }
            set
            {
                OnResponseTransactionChanging(value);
                ReportPropertyChanging("ResponseTransaction");
                _ResponseTransaction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseTransaction");
                OnResponseTransactionChanged();
            }
        }
        private Nullable<global::System.Int32> _ResponseTransaction;
        partial void OnResponseTransactionChanging(Nullable<global::System.Int32> value);
        partial void OnResponseTransactionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponseText
        {
            get
            {
                return _ResponseText;
            }
            set
            {
                OnResponseTextChanging(value);
                ReportPropertyChanging("ResponseText");
                _ResponseText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponseText");
                OnResponseTextChanged();
            }
        }
        private global::System.String _ResponseText;
        partial void OnResponseTextChanging(global::System.String value);
        partial void OnResponseTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="HyperWalletBatchStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HyperWalletBatchStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HyperWalletBatchStatus object.
        /// </summary>
        /// <param name="hyperWalletBatchStatusID">Initial value of the HyperWalletBatchStatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static HyperWalletBatchStatus CreateHyperWalletBatchStatus(global::System.Int32 hyperWalletBatchStatusID, global::System.String name)
        {
            HyperWalletBatchStatus hyperWalletBatchStatus = new HyperWalletBatchStatus();
            hyperWalletBatchStatus.HyperWalletBatchStatusID = hyperWalletBatchStatusID;
            hyperWalletBatchStatus.Name = name;
            return hyperWalletBatchStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletBatchStatusID
        {
            get
            {
                return _HyperWalletBatchStatusID;
            }
            set
            {
                if (_HyperWalletBatchStatusID != value)
                {
                    OnHyperWalletBatchStatusIDChanging(value);
                    ReportPropertyChanging("HyperWalletBatchStatusID");
                    _HyperWalletBatchStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HyperWalletBatchStatusID");
                    OnHyperWalletBatchStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _HyperWalletBatchStatusID;
        partial void OnHyperWalletBatchStatusIDChanging(global::System.Int32 value);
        partial void OnHyperWalletBatchStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="HyperWalletProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HyperWalletProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HyperWalletProfile object.
        /// </summary>
        /// <param name="hyperWalletProfileID">Initial value of the HyperWalletProfileID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static HyperWalletProfile CreateHyperWalletProfile(global::System.Int32 hyperWalletProfileID, global::System.Int32 accountID, global::System.Byte[] dataVersion)
        {
            HyperWalletProfile hyperWalletProfile = new HyperWalletProfile();
            hyperWalletProfile.HyperWalletProfileID = hyperWalletProfileID;
            hyperWalletProfile.AccountID = accountID;
            hyperWalletProfile.DataVersion = dataVersion;
            return hyperWalletProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletProfileID
        {
            get
            {
                return _HyperWalletProfileID;
            }
            set
            {
                if (_HyperWalletProfileID != value)
                {
                    OnHyperWalletProfileIDChanging(value);
                    ReportPropertyChanging("HyperWalletProfileID");
                    _HyperWalletProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HyperWalletProfileID");
                    OnHyperWalletProfileIDChanged();
                }
            }
        }
        private global::System.Int32 _HyperWalletProfileID;
        partial void OnHyperWalletProfileIDChanging(global::System.Int32 value);
        partial void OnHyperWalletProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="HyperWalletResponseCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HyperWalletResponseCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HyperWalletResponseCode object.
        /// </summary>
        /// <param name="hyperWalletResponseCodeID">Initial value of the HyperWalletResponseCodeID property.</param>
        /// <param name="responseCode">Initial value of the ResponseCode property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static HyperWalletResponseCode CreateHyperWalletResponseCode(global::System.Int32 hyperWalletResponseCodeID, global::System.String responseCode, global::System.String status, global::System.Byte[] dataVersion)
        {
            HyperWalletResponseCode hyperWalletResponseCode = new HyperWalletResponseCode();
            hyperWalletResponseCode.HyperWalletResponseCodeID = hyperWalletResponseCodeID;
            hyperWalletResponseCode.ResponseCode = responseCode;
            hyperWalletResponseCode.Status = status;
            hyperWalletResponseCode.DataVersion = dataVersion;
            return hyperWalletResponseCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HyperWalletResponseCodeID
        {
            get
            {
                return _HyperWalletResponseCodeID;
            }
            set
            {
                if (_HyperWalletResponseCodeID != value)
                {
                    OnHyperWalletResponseCodeIDChanging(value);
                    ReportPropertyChanging("HyperWalletResponseCodeID");
                    _HyperWalletResponseCodeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HyperWalletResponseCodeID");
                    OnHyperWalletResponseCodeIDChanged();
                }
            }
        }
        private global::System.Int32 _HyperWalletResponseCodeID;
        partial void OnHyperWalletResponseCodeIDChanging(global::System.Int32 value);
        partial void OnHyperWalletResponseCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResponseCode
        {
            get
            {
                return _ResponseCode;
            }
            set
            {
                OnResponseCodeChanging(value);
                ReportPropertyChanging("ResponseCode");
                _ResponseCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResponseCode");
                OnResponseCodeChanged();
            }
        }
        private global::System.String _ResponseCode;
        partial void OnResponseCodeChanging(global::System.String value);
        partial void OnResponseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="LedgerEntryOrigin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LedgerEntryOrigin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LedgerEntryOrigin object.
        /// </summary>
        /// <param name="entryOriginID">Initial value of the EntryOriginID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static LedgerEntryOrigin CreateLedgerEntryOrigin(global::System.Int32 entryOriginID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable, global::System.String code)
        {
            LedgerEntryOrigin ledgerEntryOrigin = new LedgerEntryOrigin();
            ledgerEntryOrigin.EntryOriginID = entryOriginID;
            ledgerEntryOrigin.Name = name;
            ledgerEntryOrigin.Enabled = enabled;
            ledgerEntryOrigin.Editable = editable;
            ledgerEntryOrigin.Code = code;
            return ledgerEntryOrigin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryOriginID
        {
            get
            {
                return _EntryOriginID;
            }
            set
            {
                if (_EntryOriginID != value)
                {
                    OnEntryOriginIDChanging(value);
                    ReportPropertyChanging("EntryOriginID");
                    _EntryOriginID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryOriginID");
                    OnEntryOriginIDChanged();
                }
            }
        }
        private global::System.Int32 _EntryOriginID;
        partial void OnEntryOriginIDChanging(global::System.Int32 value);
        partial void OnEntryOriginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryOrigins", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryOrigins", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryOrigins", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryOrigins", "ProductCreditLedger")]
        public EntityCollection<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryOrigins", "ProductCreditLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryOrigins", "ProductCreditLedger", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="LedgerEntryReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LedgerEntryReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LedgerEntryReason object.
        /// </summary>
        /// <param name="entryReasonID">Initial value of the EntryReasonID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static LedgerEntryReason CreateLedgerEntryReason(global::System.Int32 entryReasonID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable, global::System.String code)
        {
            LedgerEntryReason ledgerEntryReason = new LedgerEntryReason();
            ledgerEntryReason.EntryReasonID = entryReasonID;
            ledgerEntryReason.Name = name;
            ledgerEntryReason.Enabled = enabled;
            ledgerEntryReason.Editable = editable;
            ledgerEntryReason.Code = code;
            return ledgerEntryReason;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryReasonID
        {
            get
            {
                return _EntryReasonID;
            }
            set
            {
                if (_EntryReasonID != value)
                {
                    OnEntryReasonIDChanging(value);
                    ReportPropertyChanging("EntryReasonID");
                    _EntryReasonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryReasonID");
                    OnEntryReasonIDChanged();
                }
            }
        }
        private global::System.Int32 _EntryReasonID;
        partial void OnEntryReasonIDChanging(global::System.Int32 value);
        partial void OnEntryReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryReasons", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryReasons", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryReasons", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryReasons", "ProductCreditLedger")]
        public EntityCollection<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryReasons", "ProductCreditLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryReasons", "ProductCreditLedger", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="LedgerEntryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LedgerEntryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LedgerEntryType object.
        /// </summary>
        /// <param name="ledgerEntryTypeID">Initial value of the LedgerEntryTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="taxable">Initial value of the Taxable property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static LedgerEntryType CreateLedgerEntryType(global::System.Int32 ledgerEntryTypeID, global::System.String name, global::System.Boolean enabled, global::System.Boolean editable, global::System.Boolean taxable, global::System.String code)
        {
            LedgerEntryType ledgerEntryType = new LedgerEntryType();
            ledgerEntryType.LedgerEntryTypeID = ledgerEntryTypeID;
            ledgerEntryType.Name = name;
            ledgerEntryType.Enabled = enabled;
            ledgerEntryType.Editable = editable;
            ledgerEntryType.Taxable = taxable;
            ledgerEntryType.Code = code;
            return ledgerEntryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LedgerEntryTypeID
        {
            get
            {
                return _LedgerEntryTypeID;
            }
            set
            {
                if (_LedgerEntryTypeID != value)
                {
                    OnLedgerEntryTypeIDChanging(value);
                    ReportPropertyChanging("LedgerEntryTypeID");
                    _LedgerEntryTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LedgerEntryTypeID");
                    OnLedgerEntryTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _LedgerEntryTypeID;
        partial void OnLedgerEntryTypeIDChanging(global::System.Int32 value);
        partial void OnLedgerEntryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Taxable
        {
            get
            {
                return _Taxable;
            }
            set
            {
                OnTaxableChanging(value);
                ReportPropertyChanging("Taxable");
                _Taxable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Taxable");
                OnTaxableChanged();
            }
        }
        private global::System.Boolean _Taxable;
        partial void OnTaxableChanging(global::System.Boolean value);
        partial void OnTaxableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountLedgerLedgerEntryTypes", "AccountLedger")]
        public EntityCollection<AccountLedger> AccountLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryTypes", "AccountLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountLedger>("NetStepsCommissionsDB.fkAccountLedgerLedgerEntryTypes", "AccountLedger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryTypes", "ProductCreditLedger")]
        public EntityCollection<ProductCreditLedger> ProductCreditLedgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryTypes", "ProductCreditLedger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCreditLedger>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryTypes", "ProductCreditLedger", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="OrderCalculation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderCalculation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderCalculation object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="calculationDate">Initial value of the CalculationDate property.</param>
        public static OrderCalculation CreateOrderCalculation(global::System.Int32 accountID, global::System.Int32 orderID, global::System.Int32 calculationTypeID, global::System.Decimal value, global::System.DateTime calculationDate)
        {
            OrderCalculation orderCalculation = new OrderCalculation();
            orderCalculation.AccountID = accountID;
            orderCalculation.OrderID = orderID;
            orderCalculation.CalculationTypeID = calculationTypeID;
            orderCalculation.Value = value;
            orderCalculation.CalculationDate = calculationDate;
            return orderCalculation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                if (_CalculationTypeID != value)
                {
                    OnCalculationTypeIDChanging(value);
                    ReportPropertyChanging("CalculationTypeID");
                    _CalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationTypeID");
                    OnCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CalculationDate
        {
            get
            {
                return _CalculationDate;
            }
            set
            {
                OnCalculationDateChanging(value);
                ReportPropertyChanging("CalculationDate");
                _CalculationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculationDate");
                OnCalculationDateChanged();
            }
        }
        private global::System.DateTime _CalculationDate;
        partial void OnCalculationDateChanging(global::System.DateTime value);
        partial void OnCalculationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentOrderID
        {
            get
            {
                return _ParentOrderID;
            }
            set
            {
                OnParentOrderIDChanging(value);
                ReportPropertyChanging("ParentOrderID");
                _ParentOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentOrderID");
                OnParentOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentOrderID;
        partial void OnParentOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderTypeID
        {
            get
            {
                return _OrderTypeID;
            }
            set
            {
                OnOrderTypeIDChanging(value);
                ReportPropertyChanging("OrderTypeID");
                _OrderTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderTypeID");
                OnOrderTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderTypeID;
        partial void OnOrderTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkOrderCalculationsAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkOrderCalculationsAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkOrderCalculationsAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkOrderCalculationsAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkOrderCalculationsAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_OrderCalculations_CalculationTypes", "CalculationType")]
        public CalculationType CalculationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_OrderCalculations_CalculationTypes", "CalculationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_OrderCalculations_CalculationTypes", "CalculationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationType> CalculationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_OrderCalculations_CalculationTypes", "CalculationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_OrderCalculations_CalculationTypes", "CalculationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="OrderItemCalculation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderItemCalculation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderItemCalculation object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="orderItemID">Initial value of the OrderItemID property.</param>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="calculationDate">Initial value of the CalculationDate property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static OrderItemCalculation CreateOrderItemCalculation(global::System.Int32 accountID, global::System.Int32 orderID, global::System.Int32 orderItemID, global::System.Int32 calculationTypeID, global::System.DateTime calculationDate, global::System.Decimal value)
        {
            OrderItemCalculation orderItemCalculation = new OrderItemCalculation();
            orderItemCalculation.AccountID = accountID;
            orderItemCalculation.OrderID = orderID;
            orderItemCalculation.OrderItemID = orderItemID;
            orderItemCalculation.CalculationTypeID = calculationTypeID;
            orderItemCalculation.CalculationDate = calculationDate;
            orderItemCalculation.Value = value;
            return orderItemCalculation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderItemID
        {
            get
            {
                return _OrderItemID;
            }
            set
            {
                if (_OrderItemID != value)
                {
                    OnOrderItemIDChanging(value);
                    ReportPropertyChanging("OrderItemID");
                    _OrderItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderItemID");
                    OnOrderItemIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderItemID;
        partial void OnOrderItemIDChanging(global::System.Int32 value);
        partial void OnOrderItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                if (_CalculationTypeID != value)
                {
                    OnCalculationTypeIDChanging(value);
                    ReportPropertyChanging("CalculationTypeID");
                    _CalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationTypeID");
                    OnCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CalculationDate
        {
            get
            {
                return _CalculationDate;
            }
            set
            {
                OnCalculationDateChanging(value);
                ReportPropertyChanging("CalculationDate");
                _CalculationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculationDate");
                OnCalculationDateChanged();
            }
        }
        private global::System.DateTime _CalculationDate;
        partial void OnCalculationDateChanging(global::System.DateTime value);
        partial void OnCalculationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkOrderItemCalculationsAccounts", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkOrderItemCalculationsAccounts", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkOrderItemCalculationsAccounts", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkOrderItemCalculationsAccounts", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkOrderItemCalculationsAccounts", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkOrderItemCalculationsCalculationTypes", "CalculationType")]
        public CalculationType CalculationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkOrderItemCalculationsCalculationTypes", "CalculationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkOrderItemCalculationsCalculationTypes", "CalculationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationType> CalculationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.fkOrderItemCalculationsCalculationTypes", "CalculationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationType>("NetStepsCommissionsDB.fkOrderItemCalculationsCalculationTypes", "CalculationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="OrdersToProcess")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrdersToProcess : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrdersToProcess object.
        /// </summary>
        /// <param name="processOrderID">Initial value of the ProcessOrderID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static OrdersToProcess CreateOrdersToProcess(global::System.Int32 processOrderID, global::System.Int64 orderID)
        {
            OrdersToProcess ordersToProcess = new OrdersToProcess();
            ordersToProcess.ProcessOrderID = processOrderID;
            ordersToProcess.OrderID = orderID;
            return ordersToProcess;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessOrderID
        {
            get
            {
                return _ProcessOrderID;
            }
            set
            {
                if (_ProcessOrderID != value)
                {
                    OnProcessOrderIDChanging(value);
                    ReportPropertyChanging("ProcessOrderID");
                    _ProcessOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProcessOrderID");
                    OnProcessOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _ProcessOrderID;
        partial void OnProcessOrderIDChanging(global::System.Int32 value);
        partial void OnProcessOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderStatusID
        {
            get
            {
                return _OrderStatusID;
            }
            set
            {
                OnOrderStatusIDChanging(value);
                ReportPropertyChanging("OrderStatusID");
                _OrderStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderStatusID");
                OnOrderStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderStatusID;
        partial void OnOrderStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProcessedStateID
        {
            get
            {
                return _ProcessedStateID;
            }
            set
            {
                OnProcessedStateIDChanging(value);
                ReportPropertyChanging("ProcessedStateID");
                _ProcessedStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessedStateID");
                OnProcessedStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProcessedStateID;
        partial void OnProcessedStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnProcessedStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="OverrideReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverrideReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverrideReason object.
        /// </summary>
        /// <param name="overrideReasonID">Initial value of the OverrideReasonID property.</param>
        /// <param name="reasonCode">Initial value of the ReasonCode property.</param>
        public static OverrideReason CreateOverrideReason(global::System.Int32 overrideReasonID, global::System.String reasonCode)
        {
            OverrideReason overrideReason = new OverrideReason();
            overrideReason.OverrideReasonID = overrideReasonID;
            overrideReason.ReasonCode = reasonCode;
            return overrideReason;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideReasonID
        {
            get
            {
                return _OverrideReasonID;
            }
            set
            {
                if (_OverrideReasonID != value)
                {
                    OnOverrideReasonIDChanging(value);
                    ReportPropertyChanging("OverrideReasonID");
                    _OverrideReasonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OverrideReasonID");
                    OnOverrideReasonIDChanged();
                }
            }
        }
        private global::System.Int32 _OverrideReasonID;
        partial void OnOverrideReasonIDChanging(global::System.Int32 value);
        partial void OnOverrideReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReasonCode
        {
            get
            {
                return _ReasonCode;
            }
            set
            {
                OnReasonCodeChanging(value);
                ReportPropertyChanging("ReasonCode");
                _ReasonCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReasonCode");
                OnReasonCodeChanged();
            }
        }
        private global::System.String _ReasonCode;
        partial void OnReasonCodeChanging(global::System.String value);
        partial void OnReasonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OverrideReasonSourceID
        {
            get
            {
                return _OverrideReasonSourceID;
            }
            set
            {
                OnOverrideReasonSourceIDChanging(value);
                ReportPropertyChanging("OverrideReasonSourceID");
                _OverrideReasonSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverrideReasonSourceID");
                OnOverrideReasonSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OverrideReasonSourceID;
        partial void OnOverrideReasonSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnOverrideReasonSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkStatusOverridesOverrideReasons", "AccountTitleOverride")]
        public EntityCollection<AccountTitleOverride> AccountTitleOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkStatusOverridesOverrideReasons", "AccountTitleOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkStatusOverridesOverrideReasons", "AccountTitleOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesOverrideReasons", "CalculationOverride")]
        public EntityCollection<CalculationOverride> CalculationOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesOverrideReasons", "CalculationOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesOverrideReasons", "CalculationOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_CheckHolds_CheckHoldReasons", "CheckHold")]
        public EntityCollection<CheckHold> CheckHolds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CheckHold>("NetStepsCommissionsDB.FK_CheckHolds_CheckHoldReasons", "CheckHold");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CheckHold>("NetStepsCommissionsDB.FK_CheckHolds_CheckHoldReasons", "CheckHold", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_OverrideReasons_ReasonSourceID", "OverrideReasonSource")]
        public OverrideReasonSource OverrideReasonSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReasonSource>("NetStepsCommissionsDB.FK_OverrideReasons_ReasonSourceID", "OverrideReasonSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReasonSource>("NetStepsCommissionsDB.FK_OverrideReasons_ReasonSourceID", "OverrideReasonSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverrideReasonSource> OverrideReasonSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverrideReasonSource>("NetStepsCommissionsDB.FK_OverrideReasons_ReasonSourceID", "OverrideReasonSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverrideReasonSource>("NetStepsCommissionsDB.FK_OverrideReasons_ReasonSourceID", "OverrideReasonSource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="OverrideReasonSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverrideReasonSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverrideReasonSource object.
        /// </summary>
        /// <param name="overrideReasonSourceID">Initial value of the OverrideReasonSourceID property.</param>
        public static OverrideReasonSource CreateOverrideReasonSource(global::System.Int32 overrideReasonSourceID)
        {
            OverrideReasonSource overrideReasonSource = new OverrideReasonSource();
            overrideReasonSource.OverrideReasonSourceID = overrideReasonSourceID;
            return overrideReasonSource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideReasonSourceID
        {
            get
            {
                return _OverrideReasonSourceID;
            }
            set
            {
                if (_OverrideReasonSourceID != value)
                {
                    OnOverrideReasonSourceIDChanging(value);
                    ReportPropertyChanging("OverrideReasonSourceID");
                    _OverrideReasonSourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OverrideReasonSourceID");
                    OnOverrideReasonSourceIDChanged();
                }
            }
        }
        private global::System.Int32 _OverrideReasonSourceID;
        partial void OnOverrideReasonSourceIDChanging(global::System.Int32 value);
        partial void OnOverrideReasonSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_OverrideReasons_ReasonSourceID", "OverrideReason")]
        public EntityCollection<OverrideReason> OverrideReasons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverrideReason>("NetStepsCommissionsDB.FK_OverrideReasons_ReasonSourceID", "OverrideReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverrideReason>("NetStepsCommissionsDB.FK_OverrideReasons_ReasonSourceID", "OverrideReason", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="OverrideType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverrideType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverrideType object.
        /// </summary>
        /// <param name="overrideTypeID">Initial value of the OverrideTypeID property.</param>
        /// <param name="overrideCode">Initial value of the OverrideCode property.</param>
        public static OverrideType CreateOverrideType(global::System.Int32 overrideTypeID, global::System.String overrideCode)
        {
            OverrideType overrideType = new OverrideType();
            overrideType.OverrideTypeID = overrideTypeID;
            overrideType.OverrideCode = overrideCode;
            return overrideType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverrideTypeID
        {
            get
            {
                return _OverrideTypeID;
            }
            set
            {
                if (_OverrideTypeID != value)
                {
                    OnOverrideTypeIDChanging(value);
                    ReportPropertyChanging("OverrideTypeID");
                    _OverrideTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OverrideTypeID");
                    OnOverrideTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _OverrideTypeID;
        partial void OnOverrideTypeIDChanging(global::System.Int32 value);
        partial void OnOverrideTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OverrideCode
        {
            get
            {
                return _OverrideCode;
            }
            set
            {
                OnOverrideCodeChanging(value);
                ReportPropertyChanging("OverrideCode");
                _OverrideCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OverrideCode");
                OnOverrideCodeChanged();
            }
        }
        private global::System.String _OverrideCode;
        partial void OnOverrideCodeChanging(global::System.String value);
        partial void OnOverrideCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operator
        {
            get
            {
                return _Operator;
            }
            set
            {
                OnOperatorChanging(value);
                ReportPropertyChanging("Operator");
                _Operator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Operator");
                OnOperatorChanged();
            }
        }
        private global::System.String _Operator;
        partial void OnOperatorChanging(global::System.String value);
        partial void OnOperatorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesOverrideTypes", "CalculationOverride")]
        public EntityCollection<CalculationOverride> CalculationOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesOverrideTypes", "CalculationOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesOverrideTypes", "CalculationOverride", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCard object.
        /// </summary>
        /// <param name="payCardID">Initial value of the PayCardID property.</param>
        /// <param name="disbursementDetailID">Initial value of the DisbursementDetailID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="payCardStatusID">Initial value of the PayCardStatusID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCard CreatePayCard(global::System.Int32 payCardID, global::System.Int32 disbursementDetailID, global::System.Decimal amount, global::System.Int32 payCardStatusID, global::System.Byte[] dataVersion)
        {
            PayCard payCard = new PayCard();
            payCard.PayCardID = payCardID;
            payCard.DisbursementDetailID = disbursementDetailID;
            payCard.Amount = amount;
            payCard.PayCardStatusID = payCardStatusID;
            payCard.DataVersion = dataVersion;
            return payCard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardID
        {
            get
            {
                return _PayCardID;
            }
            set
            {
                if (_PayCardID != value)
                {
                    OnPayCardIDChanging(value);
                    ReportPropertyChanging("PayCardID");
                    _PayCardID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardID");
                    OnPayCardIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardID;
        partial void OnPayCardIDChanging(global::System.Int32 value);
        partial void OnPayCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementDetailID
        {
            get
            {
                return _DisbursementDetailID;
            }
            set
            {
                OnDisbursementDetailIDChanging(value);
                ReportPropertyChanging("DisbursementDetailID");
                _DisbursementDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementDetailID");
                OnDisbursementDetailIDChanged();
            }
        }
        private global::System.Int32 _DisbursementDetailID;
        partial void OnDisbursementDetailIDChanging(global::System.Int32 value);
        partial void OnDisbursementDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardStatusID
        {
            get
            {
                return _PayCardStatusID;
            }
            set
            {
                OnPayCardStatusIDChanging(value);
                ReportPropertyChanging("PayCardStatusID");
                _PayCardStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayCardStatusID");
                OnPayCardStatusIDChanged();
            }
        }
        private global::System.Int32 _PayCardStatusID;
        partial void OnPayCardStatusIDChanging(global::System.Int32 value);
        partial void OnPayCardStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayCardBatchID
        {
            get
            {
                return _PayCardBatchID;
            }
            set
            {
                OnPayCardBatchIDChanging(value);
                ReportPropertyChanging("PayCardBatchID");
                _PayCardBatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayCardBatchID");
                OnPayCardBatchIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PayCardBatchID;
        partial void OnPayCardBatchIDChanging(Nullable<global::System.Int32> value);
        partial void OnPayCardBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BatchSequence
        {
            get
            {
                return _BatchSequence;
            }
            set
            {
                OnBatchSequenceChanging(value);
                ReportPropertyChanging("BatchSequence");
                _BatchSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchSequence");
                OnBatchSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _BatchSequence;
        partial void OnBatchSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnBatchSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                OnDisbursementProfileIDChanging(value);
                ReportPropertyChanging("DisbursementProfileID");
                _DisbursementProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementProfileID");
                OnDisbursementProfileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(Nullable<global::System.Int32> value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodID;
        partial void OnPeriodIDChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCards_DisbursementProfiles", "DisbursementProfile")]
        public DisbursementProfile DisbursementProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCards_DisbursementProfiles", "DisbursementProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCards_DisbursementProfiles", "DisbursementProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementProfile> DisbursementProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCards_DisbursementProfiles", "DisbursementProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCards_DisbursementProfiles", "DisbursementProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardStatus", "PayCardStatus")]
        public PayCardStatus PayCardStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardStatus>("NetStepsCommissionsDB.FK_PayCardStatus", "PayCardStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardStatus>("NetStepsCommissionsDB.FK_PayCardStatus", "PayCardStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayCardStatus> PayCardStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardStatus>("NetStepsCommissionsDB.FK_PayCardStatus", "PayCardStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayCardStatus>("NetStepsCommissionsDB.FK_PayCardStatus", "PayCardStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardBatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardBatch object.
        /// </summary>
        /// <param name="payCardBatchID">Initial value of the PayCardBatchID property.</param>
        /// <param name="fileDate">Initial value of the FileDate property.</param>
        /// <param name="payCardBatchStatusID">Initial value of the PayCardBatchStatusID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardBatch CreatePayCardBatch(global::System.Int32 payCardBatchID, global::System.DateTime fileDate, global::System.Int32 payCardBatchStatusID, global::System.Byte[] dataVersion)
        {
            PayCardBatch payCardBatch = new PayCardBatch();
            payCardBatch.PayCardBatchID = payCardBatchID;
            payCardBatch.FileDate = fileDate;
            payCardBatch.PayCardBatchStatusID = payCardBatchStatusID;
            payCardBatch.DataVersion = dataVersion;
            return payCardBatch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchID
        {
            get
            {
                return _PayCardBatchID;
            }
            set
            {
                if (_PayCardBatchID != value)
                {
                    OnPayCardBatchIDChanging(value);
                    ReportPropertyChanging("PayCardBatchID");
                    _PayCardBatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardBatchID");
                    OnPayCardBatchIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardBatchID;
        partial void OnPayCardBatchIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FileDate
        {
            get
            {
                return _FileDate;
            }
            set
            {
                OnFileDateChanging(value);
                ReportPropertyChanging("FileDate");
                _FileDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileDate");
                OnFileDateChanged();
            }
        }
        private global::System.DateTime _FileDate;
        partial void OnFileDateChanging(global::System.DateTime value);
        partial void OnFileDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryCount
        {
            get
            {
                return _EntryCount;
            }
            set
            {
                OnEntryCountChanging(value);
                ReportPropertyChanging("EntryCount");
                _EntryCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryCount");
                OnEntryCountChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryCount;
        partial void OnEntryCountChanging(Nullable<global::System.Int32> value);
        partial void OnEntryCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalAmount;
        partial void OnTotalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchStatusID
        {
            get
            {
                return _PayCardBatchStatusID;
            }
            set
            {
                OnPayCardBatchStatusIDChanging(value);
                ReportPropertyChanging("PayCardBatchStatusID");
                _PayCardBatchStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayCardBatchStatusID");
                OnPayCardBatchStatusIDChanged();
            }
        }
        private global::System.Int32 _PayCardBatchStatusID;
        partial void OnPayCardBatchStatusIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_PayCardBatches", "PayCardBatchDetail")]
        public EntityCollection<PayCardBatchDetail> PayCardBatchDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayCardBatchDetail>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatches", "PayCardBatchDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayCardBatchDetail>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatches", "PayCardBatchDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatches_PayCardBatchStatus", "PayCardBatchStatus")]
        public PayCardBatchStatus PayCardBatchStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatchStatus>("NetStepsCommissionsDB.FK_PayCardBatches_PayCardBatchStatus", "PayCardBatchStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatchStatus>("NetStepsCommissionsDB.FK_PayCardBatches_PayCardBatchStatus", "PayCardBatchStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayCardBatchStatus> PayCardBatchStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatchStatus>("NetStepsCommissionsDB.FK_PayCardBatches_PayCardBatchStatus", "PayCardBatchStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayCardBatchStatus>("NetStepsCommissionsDB.FK_PayCardBatches_PayCardBatchStatus", "PayCardBatchStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardBatchDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardBatchDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardBatchDetail object.
        /// </summary>
        /// <param name="payCardBatchDetailID">Initial value of the PayCardBatchDetailID property.</param>
        /// <param name="payCardBatchDetailStatusID">Initial value of the PayCardBatchDetailStatusID property.</param>
        /// <param name="disbursementProfileID">Initial value of the DisbursementProfileID property.</param>
        /// <param name="programID">Initial value of the ProgramID property.</param>
        /// <param name="actionType">Initial value of the ActionType property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="taxNumber">Initial value of the TaxNumber property.</param>
        /// <param name="addressLine1">Initial value of the AddressLine1 property.</param>
        /// <param name="locality">Initial value of the Locality property.</param>
        /// <param name="stateProvince">Initial value of the StateProvince property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="workPhone">Initial value of the WorkPhone property.</param>
        /// <param name="homePhone">Initial value of the HomePhone property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardBatchDetail CreatePayCardBatchDetail(global::System.Int32 payCardBatchDetailID, global::System.Int32 payCardBatchDetailStatusID, global::System.Int32 disbursementProfileID, global::System.String programID, global::System.String actionType, global::System.String firstName, global::System.String lastName, global::System.String taxNumber, global::System.String addressLine1, global::System.String locality, global::System.String stateProvince, global::System.String postalCode, global::System.String workPhone, global::System.String homePhone, global::System.DateTime dateOfBirth, global::System.String accountNumber, global::System.Byte[] dataVersion)
        {
            PayCardBatchDetail payCardBatchDetail = new PayCardBatchDetail();
            payCardBatchDetail.PayCardBatchDetailID = payCardBatchDetailID;
            payCardBatchDetail.PayCardBatchDetailStatusID = payCardBatchDetailStatusID;
            payCardBatchDetail.DisbursementProfileID = disbursementProfileID;
            payCardBatchDetail.ProgramID = programID;
            payCardBatchDetail.ActionType = actionType;
            payCardBatchDetail.FirstName = firstName;
            payCardBatchDetail.LastName = lastName;
            payCardBatchDetail.TaxNumber = taxNumber;
            payCardBatchDetail.AddressLine1 = addressLine1;
            payCardBatchDetail.Locality = locality;
            payCardBatchDetail.StateProvince = stateProvince;
            payCardBatchDetail.PostalCode = postalCode;
            payCardBatchDetail.WorkPhone = workPhone;
            payCardBatchDetail.HomePhone = homePhone;
            payCardBatchDetail.DateOfBirth = dateOfBirth;
            payCardBatchDetail.AccountNumber = accountNumber;
            payCardBatchDetail.DataVersion = dataVersion;
            return payCardBatchDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchDetailID
        {
            get
            {
                return _PayCardBatchDetailID;
            }
            set
            {
                if (_PayCardBatchDetailID != value)
                {
                    OnPayCardBatchDetailIDChanging(value);
                    ReportPropertyChanging("PayCardBatchDetailID");
                    _PayCardBatchDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardBatchDetailID");
                    OnPayCardBatchDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardBatchDetailID;
        partial void OnPayCardBatchDetailIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayCardBatchID
        {
            get
            {
                return _PayCardBatchID;
            }
            set
            {
                OnPayCardBatchIDChanging(value);
                ReportPropertyChanging("PayCardBatchID");
                _PayCardBatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayCardBatchID");
                OnPayCardBatchIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PayCardBatchID;
        partial void OnPayCardBatchIDChanging(Nullable<global::System.Int32> value);
        partial void OnPayCardBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayCardID
        {
            get
            {
                return _PayCardID;
            }
            set
            {
                OnPayCardIDChanging(value);
                ReportPropertyChanging("PayCardID");
                _PayCardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayCardID");
                OnPayCardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PayCardID;
        partial void OnPayCardIDChanging(Nullable<global::System.Int32> value);
        partial void OnPayCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchDetailStatusID
        {
            get
            {
                return _PayCardBatchDetailStatusID;
            }
            set
            {
                OnPayCardBatchDetailStatusIDChanging(value);
                ReportPropertyChanging("PayCardBatchDetailStatusID");
                _PayCardBatchDetailStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayCardBatchDetailStatusID");
                OnPayCardBatchDetailStatusIDChanged();
            }
        }
        private global::System.Int32 _PayCardBatchDetailStatusID;
        partial void OnPayCardBatchDetailStatusIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchDetailStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementProfileID
        {
            get
            {
                return _DisbursementProfileID;
            }
            set
            {
                OnDisbursementProfileIDChanging(value);
                ReportPropertyChanging("DisbursementProfileID");
                _DisbursementProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementProfileID");
                OnDisbursementProfileIDChanged();
            }
        }
        private global::System.Int32 _DisbursementProfileID;
        partial void OnDisbursementProfileIDChanging(global::System.Int32 value);
        partial void OnDisbursementProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProgramID
        {
            get
            {
                return _ProgramID;
            }
            set
            {
                OnProgramIDChanging(value);
                ReportPropertyChanging("ProgramID");
                _ProgramID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProgramID");
                OnProgramIDChanged();
            }
        }
        private global::System.String _ProgramID;
        partial void OnProgramIDChanging(global::System.String value);
        partial void OnProgramIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionType
        {
            get
            {
                return _ActionType;
            }
            set
            {
                OnActionTypeChanging(value);
                ReportPropertyChanging("ActionType");
                _ActionType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionType");
                OnActionTypeChanged();
            }
        }
        private global::System.String _ActionType;
        partial void OnActionTypeChanging(global::System.String value);
        partial void OnActionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxNumber
        {
            get
            {
                return _TaxNumber;
            }
            set
            {
                OnTaxNumberChanging(value);
                ReportPropertyChanging("TaxNumber");
                _TaxNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaxNumber");
                OnTaxNumberChanged();
            }
        }
        private global::System.String _TaxNumber;
        partial void OnTaxNumberChanging(global::System.String value);
        partial void OnTaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Locality
        {
            get
            {
                return _Locality;
            }
            set
            {
                OnLocalityChanging(value);
                ReportPropertyChanging("Locality");
                _Locality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Locality");
                OnLocalityChanged();
            }
        }
        private global::System.String _Locality;
        partial void OnLocalityChanging(global::System.String value);
        partial void OnLocalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkPhone
        {
            get
            {
                return _WorkPhone;
            }
            set
            {
                OnWorkPhoneChanging(value);
                ReportPropertyChanging("WorkPhone");
                _WorkPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkPhone");
                OnWorkPhoneChanged();
            }
        }
        private global::System.String _WorkPhone;
        partial void OnWorkPhoneChanging(global::System.String value);
        partial void OnWorkPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayCardAccountNumber
        {
            get
            {
                return _PayCardAccountNumber;
            }
            set
            {
                OnPayCardAccountNumberChanging(value);
                ReportPropertyChanging("PayCardAccountNumber");
                _PayCardAccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayCardAccountNumber");
                OnPayCardAccountNumberChanged();
            }
        }
        private global::System.String _PayCardAccountNumber;
        partial void OnPayCardAccountNumberChanging(global::System.String value);
        partial void OnPayCardAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayCardNumber
        {
            get
            {
                return _PayCardNumber;
            }
            set
            {
                OnPayCardNumberChanging(value);
                ReportPropertyChanging("PayCardNumber");
                _PayCardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayCardNumber");
                OnPayCardNumberChanged();
            }
        }
        private global::System.String _PayCardNumber;
        partial void OnPayCardNumberChanging(global::System.String value);
        partial void OnPayCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityName
        {
            get
            {
                return _EntityName;
            }
            set
            {
                OnEntityNameChanging(value);
                ReportPropertyChanging("EntityName");
                _EntityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityName");
                OnEntityNameChanged();
            }
        }
        private global::System.String _EntityName;
        partial void OnEntityNameChanging(global::System.String value);
        partial void OnEntityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_DisbursementProfiles", "DisbursementProfile")]
        public DisbursementProfile DisbursementProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCardBatchDetails_DisbursementProfiles", "DisbursementProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCardBatchDetails_DisbursementProfiles", "DisbursementProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementProfile> DisbursementProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCardBatchDetails_DisbursementProfiles", "DisbursementProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementProfile>("NetStepsCommissionsDB.FK_PayCardBatchDetails_DisbursementProfiles", "DisbursementProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetailStatus")]
        public PayCardBatchDetailStatus PayCardBatchDetailStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatchDetailStatus>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetailStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatchDetailStatus>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetailStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayCardBatchDetailStatus> PayCardBatchDetailStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatchDetailStatus>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetailStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayCardBatchDetailStatus>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetailStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_PayCardBatches", "PayCardBatch")]
        public PayCardBatch PayCardBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatch>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatches", "PayCardBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatch>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatches", "PayCardBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayCardBatch> PayCardBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardBatch>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatches", "PayCardBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayCardBatch>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatches", "PayCardBatch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardBatchDetailErrorCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardBatchDetailErrorCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardBatchDetailErrorCode object.
        /// </summary>
        /// <param name="payCardBatchDetailErrorCodeID">Initial value of the PayCardBatchDetailErrorCodeID property.</param>
        /// <param name="payCardBatchDetailID">Initial value of the PayCardBatchDetailID property.</param>
        /// <param name="errorCode">Initial value of the ErrorCode property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardBatchDetailErrorCode CreatePayCardBatchDetailErrorCode(global::System.Int32 payCardBatchDetailErrorCodeID, global::System.Int32 payCardBatchDetailID, global::System.String errorCode, global::System.Byte[] dataVersion)
        {
            PayCardBatchDetailErrorCode payCardBatchDetailErrorCode = new PayCardBatchDetailErrorCode();
            payCardBatchDetailErrorCode.PayCardBatchDetailErrorCodeID = payCardBatchDetailErrorCodeID;
            payCardBatchDetailErrorCode.PayCardBatchDetailID = payCardBatchDetailID;
            payCardBatchDetailErrorCode.ErrorCode = errorCode;
            payCardBatchDetailErrorCode.DataVersion = dataVersion;
            return payCardBatchDetailErrorCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchDetailErrorCodeID
        {
            get
            {
                return _PayCardBatchDetailErrorCodeID;
            }
            set
            {
                if (_PayCardBatchDetailErrorCodeID != value)
                {
                    OnPayCardBatchDetailErrorCodeIDChanging(value);
                    ReportPropertyChanging("PayCardBatchDetailErrorCodeID");
                    _PayCardBatchDetailErrorCodeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardBatchDetailErrorCodeID");
                    OnPayCardBatchDetailErrorCodeIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardBatchDetailErrorCodeID;
        partial void OnPayCardBatchDetailErrorCodeIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchDetailErrorCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchDetailID
        {
            get
            {
                return _PayCardBatchDetailID;
            }
            set
            {
                OnPayCardBatchDetailIDChanging(value);
                ReportPropertyChanging("PayCardBatchDetailID");
                _PayCardBatchDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayCardBatchDetailID");
                OnPayCardBatchDetailIDChanged();
            }
        }
        private global::System.Int32 _PayCardBatchDetailID;
        partial void OnPayCardBatchDetailIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ErrorCode
        {
            get
            {
                return _ErrorCode;
            }
            set
            {
                OnErrorCodeChanging(value);
                ReportPropertyChanging("ErrorCode");
                _ErrorCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ErrorCode");
                OnErrorCodeChanged();
            }
        }
        private global::System.String _ErrorCode;
        partial void OnErrorCodeChanging(global::System.String value);
        partial void OnErrorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardErrorCode")]
        public PayCardErrorCode PayCardErrorCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardErrorCode>("NetStepsCommissionsDB.FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardErrorCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardErrorCode>("NetStepsCommissionsDB.FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardErrorCode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayCardErrorCode> PayCardErrorCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayCardErrorCode>("NetStepsCommissionsDB.FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardErrorCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayCardErrorCode>("NetStepsCommissionsDB.FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardErrorCode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardBatchDetailStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardBatchDetailStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardBatchDetailStatus object.
        /// </summary>
        /// <param name="payCardBatchDetailStatusID">Initial value of the PayCardBatchDetailStatusID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardBatchDetailStatus CreatePayCardBatchDetailStatus(global::System.Int32 payCardBatchDetailStatusID, global::System.String description, global::System.Byte[] dataVersion)
        {
            PayCardBatchDetailStatus payCardBatchDetailStatus = new PayCardBatchDetailStatus();
            payCardBatchDetailStatus.PayCardBatchDetailStatusID = payCardBatchDetailStatusID;
            payCardBatchDetailStatus.Description = description;
            payCardBatchDetailStatus.DataVersion = dataVersion;
            return payCardBatchDetailStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchDetailStatusID
        {
            get
            {
                return _PayCardBatchDetailStatusID;
            }
            set
            {
                if (_PayCardBatchDetailStatusID != value)
                {
                    OnPayCardBatchDetailStatusIDChanging(value);
                    ReportPropertyChanging("PayCardBatchDetailStatusID");
                    _PayCardBatchDetailStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardBatchDetailStatusID");
                    OnPayCardBatchDetailStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardBatchDetailStatusID;
        partial void OnPayCardBatchDetailStatusIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchDetailStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetail")]
        public EntityCollection<PayCardBatchDetail> PayCardBatchDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayCardBatchDetail>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayCardBatchDetail>("NetStepsCommissionsDB.FK_PayCardBatchDetails_PayCardBatchDetailStatuses", "PayCardBatchDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardBatchStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardBatchStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardBatchStatus object.
        /// </summary>
        /// <param name="payCardBatchStatusID">Initial value of the PayCardBatchStatusID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardBatchStatus CreatePayCardBatchStatus(global::System.Int32 payCardBatchStatusID, global::System.String description, global::System.Byte[] dataVersion)
        {
            PayCardBatchStatus payCardBatchStatus = new PayCardBatchStatus();
            payCardBatchStatus.PayCardBatchStatusID = payCardBatchStatusID;
            payCardBatchStatus.Description = description;
            payCardBatchStatus.DataVersion = dataVersion;
            return payCardBatchStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardBatchStatusID
        {
            get
            {
                return _PayCardBatchStatusID;
            }
            set
            {
                if (_PayCardBatchStatusID != value)
                {
                    OnPayCardBatchStatusIDChanging(value);
                    ReportPropertyChanging("PayCardBatchStatusID");
                    _PayCardBatchStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardBatchStatusID");
                    OnPayCardBatchStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardBatchStatusID;
        partial void OnPayCardBatchStatusIDChanging(global::System.Int32 value);
        partial void OnPayCardBatchStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatches_PayCardBatchStatus", "PayCardBatch")]
        public EntityCollection<PayCardBatch> PayCardBatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayCardBatch>("NetStepsCommissionsDB.FK_PayCardBatches_PayCardBatchStatus", "PayCardBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayCardBatch>("NetStepsCommissionsDB.FK_PayCardBatches_PayCardBatchStatus", "PayCardBatch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardEnrollmentStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardEnrollmentStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardEnrollmentStatus object.
        /// </summary>
        /// <param name="payCardEnrollmentStatusID">Initial value of the PayCardEnrollmentStatusID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardEnrollmentStatus CreatePayCardEnrollmentStatus(global::System.Int32 payCardEnrollmentStatusID, global::System.String description, global::System.Boolean enabled, global::System.Boolean editable, global::System.Byte[] dataVersion)
        {
            PayCardEnrollmentStatus payCardEnrollmentStatus = new PayCardEnrollmentStatus();
            payCardEnrollmentStatus.PayCardEnrollmentStatusID = payCardEnrollmentStatusID;
            payCardEnrollmentStatus.Description = description;
            payCardEnrollmentStatus.Enabled = enabled;
            payCardEnrollmentStatus.Editable = editable;
            payCardEnrollmentStatus.DataVersion = dataVersion;
            return payCardEnrollmentStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardEnrollmentStatusID
        {
            get
            {
                return _PayCardEnrollmentStatusID;
            }
            set
            {
                if (_PayCardEnrollmentStatusID != value)
                {
                    OnPayCardEnrollmentStatusIDChanging(value);
                    ReportPropertyChanging("PayCardEnrollmentStatusID");
                    _PayCardEnrollmentStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardEnrollmentStatusID");
                    OnPayCardEnrollmentStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardEnrollmentStatusID;
        partial void OnPayCardEnrollmentStatusIDChanging(global::System.Int32 value);
        partial void OnPayCardEnrollmentStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardErrorCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardErrorCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardErrorCode object.
        /// </summary>
        /// <param name="errorCode">Initial value of the ErrorCode property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardErrorCode CreatePayCardErrorCode(global::System.String errorCode, global::System.String description, global::System.Byte[] dataVersion)
        {
            PayCardErrorCode payCardErrorCode = new PayCardErrorCode();
            payCardErrorCode.ErrorCode = errorCode;
            payCardErrorCode.Description = description;
            payCardErrorCode.DataVersion = dataVersion;
            return payCardErrorCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ErrorCode
        {
            get
            {
                return _ErrorCode;
            }
            set
            {
                if (_ErrorCode != value)
                {
                    OnErrorCodeChanging(value);
                    ReportPropertyChanging("ErrorCode");
                    _ErrorCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ErrorCode");
                    OnErrorCodeChanged();
                }
            }
        }
        private global::System.String _ErrorCode;
        partial void OnErrorCodeChanging(global::System.String value);
        partial void OnErrorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardBatchDetailErrorCode")]
        public EntityCollection<PayCardBatchDetailErrorCode> PayCardBatchDetailErrorCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayCardBatchDetailErrorCode>("NetStepsCommissionsDB.FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardBatchDetailErrorCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayCardBatchDetailErrorCode>("NetStepsCommissionsDB.FK_PayCardBatchDetailErrorCodes_PayCardErrorCodes", "PayCardBatchDetailErrorCode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardFileSequence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardFileSequence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardFileSequence object.
        /// </summary>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        /// <param name="payCardFileSequenceID">Initial value of the PayCardFileSequenceID property.</param>
        public static PayCardFileSequence CreatePayCardFileSequence(global::System.Byte[] dataVersion, global::System.Int32 payCardFileSequenceID)
        {
            PayCardFileSequence payCardFileSequence = new PayCardFileSequence();
            payCardFileSequence.DataVersion = dataVersion;
            payCardFileSequence.PayCardFileSequenceID = payCardFileSequenceID;
            return payCardFileSequence;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastFileDate
        {
            get
            {
                return _LastFileDate;
            }
            set
            {
                OnLastFileDateChanging(value);
                ReportPropertyChanging("LastFileDate");
                _LastFileDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastFileDate");
                OnLastFileDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastFileDate;
        partial void OnLastFileDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastFileDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastFileSequence
        {
            get
            {
                return _LastFileSequence;
            }
            set
            {
                OnLastFileSequenceChanging(value);
                ReportPropertyChanging("LastFileSequence");
                _LastFileSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastFileSequence");
                OnLastFileSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _LastFileSequence;
        partial void OnLastFileSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnLastFileSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardFileSequenceID
        {
            get
            {
                return _PayCardFileSequenceID;
            }
            set
            {
                if (_PayCardFileSequenceID != value)
                {
                    OnPayCardFileSequenceIDChanging(value);
                    ReportPropertyChanging("PayCardFileSequenceID");
                    _PayCardFileSequenceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardFileSequenceID");
                    OnPayCardFileSequenceIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardFileSequenceID;
        partial void OnPayCardFileSequenceIDChanging(global::System.Int32 value);
        partial void OnPayCardFileSequenceIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PayCardStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayCardStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayCardStatus object.
        /// </summary>
        /// <param name="payCardStatusID">Initial value of the PayCardStatusID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static PayCardStatus CreatePayCardStatus(global::System.Int32 payCardStatusID, global::System.String description, global::System.Boolean enabled, global::System.Boolean editable, global::System.Byte[] dataVersion)
        {
            PayCardStatus payCardStatus = new PayCardStatus();
            payCardStatus.PayCardStatusID = payCardStatusID;
            payCardStatus.Description = description;
            payCardStatus.Enabled = enabled;
            payCardStatus.Editable = editable;
            payCardStatus.DataVersion = dataVersion;
            return payCardStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayCardStatusID
        {
            get
            {
                return _PayCardStatusID;
            }
            set
            {
                if (_PayCardStatusID != value)
                {
                    OnPayCardStatusIDChanging(value);
                    ReportPropertyChanging("PayCardStatusID");
                    _PayCardStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayCardStatusID");
                    OnPayCardStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _PayCardStatusID;
        partial void OnPayCardStatusIDChanging(global::System.Int32 value);
        partial void OnPayCardStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PayCardStatus", "PayCard")]
        public EntityCollection<PayCard> PayCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayCard>("NetStepsCommissionsDB.FK_PayCardStatus", "PayCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayCard>("NetStepsCommissionsDB.FK_PayCardStatus", "PayCard", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Period")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Period : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Period object.
        /// </summary>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Period CreatePeriod(global::System.Int32 periodID, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            Period period = new Period();
            period.PeriodID = periodID;
            period.StartDate = startDate;
            period.EndDate = endDate;
            return period;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ClosedDate
        {
            get
            {
                return _ClosedDate;
            }
            set
            {
                OnClosedDateChanging(value);
                ReportPropertyChanging("ClosedDate");
                _ClosedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosedDate");
                OnClosedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ClosedDate;
        partial void OnClosedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnClosedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlanID
        {
            get
            {
                return _PlanID;
            }
            set
            {
                OnPlanIDChanging(value);
                ReportPropertyChanging("PlanID");
                _PlanID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanID");
                OnPlanIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PlanID;
        partial void OnPlanIDChanging(Nullable<global::System.Int32> value);
        partial void OnPlanIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EarningsViewable
        {
            get
            {
                return _EarningsViewable;
            }
            set
            {
                OnEarningsViewableChanging(value);
                ReportPropertyChanging("EarningsViewable");
                _EarningsViewable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EarningsViewable");
                OnEarningsViewableChanged();
            }
        }
        private Nullable<global::System.Boolean> _EarningsViewable;
        partial void OnEarningsViewableChanging(Nullable<global::System.Boolean> value);
        partial void OnEarningsViewableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BackOfficeDisplayStartDate
        {
            get
            {
                return _BackOfficeDisplayStartDate;
            }
            set
            {
                OnBackOfficeDisplayStartDateChanging(value);
                ReportPropertyChanging("BackOfficeDisplayStartDate");
                _BackOfficeDisplayStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackOfficeDisplayStartDate");
                OnBackOfficeDisplayStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BackOfficeDisplayStartDate;
        partial void OnBackOfficeDisplayStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBackOfficeDisplayStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DisbursementsProcessed
        {
            get
            {
                return _DisbursementsProcessed;
            }
            set
            {
                OnDisbursementsProcessedChanging(value);
                ReportPropertyChanging("DisbursementsProcessed");
                _DisbursementsProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementsProcessed");
                OnDisbursementsProcessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _DisbursementsProcessed;
        partial void OnDisbursementsProcessedChanging(Nullable<global::System.Boolean> value);
        partial void OnDisbursementsProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateUTC
        {
            get
            {
                return _StartDateUTC;
            }
            set
            {
                OnStartDateUTCChanging(value);
                ReportPropertyChanging("StartDateUTC");
                _StartDateUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateUTC");
                OnStartDateUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateUTC;
        partial void OnStartDateUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateUTCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDateUTC
        {
            get
            {
                return _EndDateUTC;
            }
            set
            {
                OnEndDateUTCChanging(value);
                ReportPropertyChanging("EndDateUTC");
                _EndDateUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateUTC");
                OnEndDateUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDateUTC;
        partial void OnEndDateUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateUTCChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesPeriodID", "AccountTitle")]
        public EntityCollection<AccountTitle> AccountTitles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitle>("NetStepsCommissionsDB.fkAccountTitlesPeriodID", "AccountTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitle>("NetStepsCommissionsDB.fkAccountTitlesPeriodID", "AccountTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitlesOverriddenPeriodID", "AccountTitlesOverridden")]
        public EntityCollection<AccountTitlesOverridden> AccountTitlesOverriddens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.fkAccountTitlesOverriddenPeriodID", "AccountTitlesOverridden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.fkAccountTitlesOverriddenPeriodID", "AccountTitlesOverridden", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusDetailsPeriodID", "BonusDetail")]
        public EntityCollection<BonusDetail> BonusDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsPeriodID", "BonusDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusDetail>("NetStepsCommissionsDB.fkBonusDetailsPeriodID", "BonusDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusValuesPeriodID", "BonusValue")]
        public EntityCollection<BonusValue> BonusValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesPeriodID", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusValue>("NetStepsCommissionsDB.fkBonusValuesPeriodID", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationOverridesPeriodID", "CalculationOverride")]
        public EntityCollection<CalculationOverride> CalculationOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesPeriodID", "CalculationOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationOverride>("NetStepsCommissionsDB.fkCalculationOverridesPeriodID", "CalculationOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsPeriodID", "Calculation")]
        public EntityCollection<Calculation> Calculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Calculation>("NetStepsCommissionsDB.fkCalculationsPeriodID", "Calculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Calculation>("NetStepsCommissionsDB.fkCalculationsPeriodID", "Calculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsOverriddenPeriodID", "CalculationsOverridden")]
        public EntityCollection<CalculationsOverridden> CalculationsOverriddens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationsOverridden>("NetStepsCommissionsDB.fkCalculationsOverriddenPeriodID", "CalculationsOverridden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationsOverridden>("NetStepsCommissionsDB.fkCalculationsOverriddenPeriodID", "CalculationsOverridden", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkCalculationsRealTimePeriodID", "CalculationsRealTime")]
        public EntityCollection<CalculationsRealTime> CalculationsRealTimes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationsRealTime>("NetStepsCommissionsDB.fkCalculationsRealTimePeriodID", "CalculationsRealTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationsRealTime>("NetStepsCommissionsDB.fkCalculationsRealTimePeriodID", "CalculationsRealTime", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkDisbursementsPeriodID", "Disbursement")]
        public EntityCollection<Disbursement> Disbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsPeriodID", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Disbursement>("NetStepsCommissionsDB.fkDisbursementsPeriodID", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PeriodCalculationsPeriods", "PeriodCalculation")]
        public EntityCollection<PeriodCalculation> PeriodCalculations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PeriodCalculation>("NetStepsCommissionsDB.FK_PeriodCalculationsPeriods", "PeriodCalculation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PeriodCalculation>("NetStepsCommissionsDB.FK_PeriodCalculationsPeriods", "PeriodCalculation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_Periods_Plan", "Plan")]
        public Plan Plan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("NetStepsCommissionsDB.FK_Periods_Plan", "Plan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("NetStepsCommissionsDB.FK_Periods_Plan", "Plan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Plan> PlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("NetStepsCommissionsDB.FK_Periods_Plan", "Plan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Plan>("NetStepsCommissionsDB.FK_Periods_Plan", "Plan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_SystemEvents_Periods", "SystemEvent")]
        public EntityCollection<SystemEvent> SystemEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemEvent>("NetStepsCommissionsDB.FK_SystemEvents_Periods", "SystemEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemEvent>("NetStepsCommissionsDB.FK_SystemEvents_Periods", "SystemEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="PeriodCalculation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PeriodCalculation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PeriodCalculation object.
        /// </summary>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="calculationTypeID">Initial value of the CalculationTypeID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static PeriodCalculation CreatePeriodCalculation(global::System.Int32 periodID, global::System.Int32 calculationTypeID, global::System.Decimal value)
        {
            PeriodCalculation periodCalculation = new PeriodCalculation();
            periodCalculation.PeriodID = periodID;
            periodCalculation.CalculationTypeID = calculationTypeID;
            periodCalculation.Value = value;
            return periodCalculation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculationTypeID
        {
            get
            {
                return _CalculationTypeID;
            }
            set
            {
                if (_CalculationTypeID != value)
                {
                    OnCalculationTypeIDChanging(value);
                    ReportPropertyChanging("CalculationTypeID");
                    _CalculationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalculationTypeID");
                    OnCalculationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CalculationTypeID;
        partial void OnCalculationTypeIDChanging(global::System.Int32 value);
        partial void OnCalculationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PeriodCalculationsCalculationTypes", "CalculationType")]
        public CalculationType CalculationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_PeriodCalculationsCalculationTypes", "CalculationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_PeriodCalculationsCalculationTypes", "CalculationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationType> CalculationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_PeriodCalculationsCalculationTypes", "CalculationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationType>("NetStepsCommissionsDB.FK_PeriodCalculationsCalculationTypes", "CalculationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_PeriodCalculationsPeriods", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.FK_PeriodCalculationsPeriods", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.FK_PeriodCalculationsPeriods", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.FK_PeriodCalculationsPeriods", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.FK_PeriodCalculationsPeriods", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Plan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Plan object.
        /// </summary>
        /// <param name="planID">Initial value of the PlanID property.</param>
        /// <param name="planCode">Initial value of the PlanCode property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static Plan CreatePlan(global::System.Int32 planID, global::System.String planCode, global::System.Boolean enabled)
        {
            Plan plan = new Plan();
            plan.PlanID = planID;
            plan.PlanCode = planCode;
            plan.Enabled = enabled;
            return plan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlanID
        {
            get
            {
                return _PlanID;
            }
            set
            {
                if (_PlanID != value)
                {
                    OnPlanIDChanging(value);
                    ReportPropertyChanging("PlanID");
                    _PlanID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlanID");
                    OnPlanIDChanged();
                }
            }
        }
        private global::System.Int32 _PlanID;
        partial void OnPlanIDChanging(global::System.Int32 value);
        partial void OnPlanIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlanCode
        {
            get
            {
                return _PlanCode;
            }
            set
            {
                OnPlanCodeChanging(value);
                ReportPropertyChanging("PlanCode");
                _PlanCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlanCode");
                OnPlanCodeChanged();
            }
        }
        private global::System.String _PlanCode;
        partial void OnPlanCodeChanging(global::System.String value);
        partial void OnPlanCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DefaultPlan
        {
            get
            {
                return _DefaultPlan;
            }
            set
            {
                OnDefaultPlanChanging(value);
                ReportPropertyChanging("DefaultPlan");
                _DefaultPlan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultPlan");
                OnDefaultPlanChanged();
            }
        }
        private Nullable<global::System.Boolean> _DefaultPlan;
        partial void OnDefaultPlanChanging(Nullable<global::System.Boolean> value);
        partial void OnDefaultPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkBonusTypesPlanID", "BonusType")]
        public EntityCollection<BonusType> BonusTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BonusType>("NetStepsCommissionsDB.fkBonusTypesPlanID", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BonusType>("NetStepsCommissionsDB.fkBonusTypesPlanID", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_Periods_Plan", "Period")]
        public EntityCollection<Period> Periods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Period>("NetStepsCommissionsDB.FK_Periods_Plan", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Period>("NetStepsCommissionsDB.FK_Periods_Plan", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="ProductCreditLedger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCreditLedger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCreditLedger object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="entryID">Initial value of the EntryID property.</param>
        /// <param name="entryDescription">Initial value of the EntryDescription property.</param>
        /// <param name="entryReasonID">Initial value of the EntryReasonID property.</param>
        /// <param name="entryOriginID">Initial value of the EntryOriginID property.</param>
        /// <param name="entryTypeID">Initial value of the EntryTypeID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="entryAmount">Initial value of the EntryAmount property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="currencyTypeID">Initial value of the CurrencyTypeID property.</param>
        public static ProductCreditLedger CreateProductCreditLedger(global::System.Int32 accountID, global::System.Int32 entryID, global::System.String entryDescription, global::System.Int32 entryReasonID, global::System.Int32 entryOriginID, global::System.Int32 entryTypeID, global::System.Int32 userID, global::System.Decimal entryAmount, global::System.DateTime entryDate, global::System.DateTime effectiveDate, global::System.Int32 currencyTypeID)
        {
            ProductCreditLedger productCreditLedger = new ProductCreditLedger();
            productCreditLedger.AccountID = accountID;
            productCreditLedger.EntryID = entryID;
            productCreditLedger.EntryDescription = entryDescription;
            productCreditLedger.EntryReasonID = entryReasonID;
            productCreditLedger.EntryOriginID = entryOriginID;
            productCreditLedger.EntryTypeID = entryTypeID;
            productCreditLedger.UserID = userID;
            productCreditLedger.EntryAmount = entryAmount;
            productCreditLedger.EntryDate = entryDate;
            productCreditLedger.EffectiveDate = effectiveDate;
            productCreditLedger.CurrencyTypeID = currencyTypeID;
            return productCreditLedger;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryID
        {
            get
            {
                return _EntryID;
            }
            set
            {
                if (_EntryID != value)
                {
                    OnEntryIDChanging(value);
                    ReportPropertyChanging("EntryID");
                    _EntryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryID");
                    OnEntryIDChanged();
                }
            }
        }
        private global::System.Int32 _EntryID;
        partial void OnEntryIDChanging(global::System.Int32 value);
        partial void OnEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EntryDescription
        {
            get
            {
                return _EntryDescription;
            }
            set
            {
                OnEntryDescriptionChanging(value);
                ReportPropertyChanging("EntryDescription");
                _EntryDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EntryDescription");
                OnEntryDescriptionChanged();
            }
        }
        private global::System.String _EntryDescription;
        partial void OnEntryDescriptionChanging(global::System.String value);
        partial void OnEntryDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryReasonID
        {
            get
            {
                return _EntryReasonID;
            }
            set
            {
                OnEntryReasonIDChanging(value);
                ReportPropertyChanging("EntryReasonID");
                _EntryReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryReasonID");
                OnEntryReasonIDChanged();
            }
        }
        private global::System.Int32 _EntryReasonID;
        partial void OnEntryReasonIDChanging(global::System.Int32 value);
        partial void OnEntryReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryOriginID
        {
            get
            {
                return _EntryOriginID;
            }
            set
            {
                OnEntryOriginIDChanging(value);
                ReportPropertyChanging("EntryOriginID");
                _EntryOriginID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryOriginID");
                OnEntryOriginIDChanged();
            }
        }
        private global::System.Int32 _EntryOriginID;
        partial void OnEntryOriginIDChanging(global::System.Int32 value);
        partial void OnEntryOriginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryTypeID
        {
            get
            {
                return _EntryTypeID;
            }
            set
            {
                OnEntryTypeIDChanging(value);
                ReportPropertyChanging("EntryTypeID");
                _EntryTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTypeID");
                OnEntryTypeIDChanged();
            }
        }
        private global::System.Int32 _EntryTypeID;
        partial void OnEntryTypeIDChanging(global::System.Int32 value);
        partial void OnEntryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntryNotes
        {
            get
            {
                return _EntryNotes;
            }
            set
            {
                OnEntryNotesChanging(value);
                ReportPropertyChanging("EntryNotes");
                _EntryNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntryNotes");
                OnEntryNotesChanged();
            }
        }
        private global::System.String _EntryNotes;
        partial void OnEntryNotesChanging(global::System.String value);
        partial void OnEntryNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EntryAmount
        {
            get
            {
                return _EntryAmount;
            }
            set
            {
                OnEntryAmountChanging(value);
                ReportPropertyChanging("EntryAmount");
                _EntryAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryAmount");
                OnEntryAmountChanged();
            }
        }
        private global::System.Decimal _EntryAmount;
        partial void OnEntryAmountChanging(global::System.Decimal value);
        partial void OnEntryAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BonusTypeID
        {
            get
            {
                return _BonusTypeID;
            }
            set
            {
                OnBonusTypeIDChanging(value);
                ReportPropertyChanging("BonusTypeID");
                _BonusTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusTypeID");
                OnBonusTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BonusTypeID;
        partial void OnBonusTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnBonusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BonusValueID
        {
            get
            {
                return _BonusValueID;
            }
            set
            {
                OnBonusValueIDChanging(value);
                ReportPropertyChanging("BonusValueID");
                _BonusValueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusValueID");
                OnBonusValueIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BonusValueID;
        partial void OnBonusValueIDChanging(Nullable<global::System.Int32> value);
        partial void OnBonusValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyTypeID
        {
            get
            {
                return _CurrencyTypeID;
            }
            set
            {
                OnCurrencyTypeIDChanging(value);
                ReportPropertyChanging("CurrencyTypeID");
                _CurrencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeID");
                OnCurrencyTypeIDChanged();
            }
        }
        private global::System.Int32 _CurrencyTypeID;
        partial void OnCurrencyTypeIDChanging(global::System.Int32 value);
        partial void OnCurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderID;
        partial void OnOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderPaymentID
        {
            get
            {
                return _OrderPaymentID;
            }
            set
            {
                OnOrderPaymentIDChanging(value);
                ReportPropertyChanging("OrderPaymentID");
                _OrderPaymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderPaymentID");
                OnOrderPaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderPaymentID;
        partial void OnOrderPaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderPaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EndingBalance
        {
            get
            {
                return _EndingBalance;
            }
            set
            {
                OnEndingBalanceChanging(value);
                ReportPropertyChanging("EndingBalance");
                _EndingBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndingBalance");
                OnEndingBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _EndingBalance;
        partial void OnEndingBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnEndingBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkProductCreditLedgerAccountID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkProductCreditLedgerAccountID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkProductCreditLedgerAccountID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkProductCreditLedgerAccountID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkProductCreditLedgerAccountID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_BonusTypes", "BonusType")]
        public BonusType BonusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusTypes", "BonusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusTypes", "BonusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusType> BonusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusTypes", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusType>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusTypes", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_BonusValues", "BonusValue")]
        public BonusValue BonusValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusValue>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusValues", "BonusValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusValue>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusValues", "BonusValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusValue> BonusValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusValue>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusValues", "BonusValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusValue>("NetStepsCommissionsDB.FK_ProductCreditLedger_BonusValues", "BonusValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_CurrencyTypes", "CurrencyType")]
        public CurrencyType CurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_ProductCreditLedger_CurrencyTypes", "CurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_ProductCreditLedger_CurrencyTypes", "CurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyType> CurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_ProductCreditLedger_CurrencyTypes", "CurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyType>("NetStepsCommissionsDB.FK_ProductCreditLedger_CurrencyTypes", "CurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryOrigins", "LedgerEntryOrigin")]
        public LedgerEntryOrigin LedgerEntryOrigin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryOrigins", "LedgerEntryOrigin").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryOrigins", "LedgerEntryOrigin").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LedgerEntryOrigin> LedgerEntryOriginReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryOrigins", "LedgerEntryOrigin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LedgerEntryOrigin>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryOrigins", "LedgerEntryOrigin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryReasons", "LedgerEntryReason")]
        public LedgerEntryReason LedgerEntryReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryReasons", "LedgerEntryReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryReasons", "LedgerEntryReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LedgerEntryReason> LedgerEntryReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryReasons", "LedgerEntryReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LedgerEntryReason>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryReasons", "LedgerEntryReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_ProductCreditLedger_LedgerEntryTypes", "LedgerEntryType")]
        public LedgerEntryType LedgerEntryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryTypes", "LedgerEntryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryTypes", "LedgerEntryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LedgerEntryType> LedgerEntryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryTypes", "LedgerEntryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LedgerEntryType>("NetStepsCommissionsDB.FK_ProductCreditLedger_LedgerEntryTypes", "LedgerEntryType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="ProductPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductPrice object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="productPriceTypeID">Initial value of the ProductPriceTypeID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ProductPrice CreateProductPrice(global::System.Int32 productID, global::System.Int32 productPriceTypeID, global::System.Decimal price, global::System.Int32 currencyID, global::System.DateTime effectiveDate)
        {
            ProductPrice productPrice = new ProductPrice();
            productPrice.ProductID = productID;
            productPrice.ProductPriceTypeID = productPriceTypeID;
            productPrice.Price = price;
            productPrice.CurrencyID = currencyID;
            productPrice.EffectiveDate = effectiveDate;
            return productPrice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductPriceTypeID
        {
            get
            {
                return _ProductPriceTypeID;
            }
            set
            {
                if (_ProductPriceTypeID != value)
                {
                    OnProductPriceTypeIDChanging(value);
                    ReportPropertyChanging("ProductPriceTypeID");
                    _ProductPriceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductPriceTypeID");
                    OnProductPriceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductPriceTypeID;
        partial void OnProductPriceTypeIDChanging(global::System.Int32 value);
        partial void OnProductPriceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                if (_Price != value)
                {
                    OnPriceChanging(value);
                    ReportPropertyChanging("Price");
                    _Price = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Price");
                    OnPriceChanged();
                }
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                if (_CurrencyID != value)
                {
                    OnCurrencyIDChanging(value);
                    ReportPropertyChanging("CurrencyID");
                    _CurrencyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyID");
                    OnCurrencyIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int32 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                if (_EffectiveDate != value)
                {
                    OnEffectiveDateChanging(value);
                    ReportPropertyChanging("EffectiveDate");
                    _EffectiveDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectiveDate");
                    OnEffectiveDateChanged();
                }
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="SystemConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemConfig object.
        /// </summary>
        /// <param name="systemConfigID">Initial value of the SystemConfigID property.</param>
        /// <param name="configValue">Initial value of the ConfigValue property.</param>
        /// <param name="configCode">Initial value of the ConfigCode property.</param>
        /// <param name="editable">Initial value of the Editable property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static SystemConfig CreateSystemConfig(global::System.Int32 systemConfigID, global::System.String configValue, global::System.String configCode, global::System.Boolean editable, global::System.Byte[] dataVersion)
        {
            SystemConfig systemConfig = new SystemConfig();
            systemConfig.SystemConfigID = systemConfigID;
            systemConfig.ConfigValue = configValue;
            systemConfig.ConfigCode = configCode;
            systemConfig.Editable = editable;
            systemConfig.DataVersion = dataVersion;
            return systemConfig;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemConfigID
        {
            get
            {
                return _SystemConfigID;
            }
            set
            {
                if (_SystemConfigID != value)
                {
                    OnSystemConfigIDChanging(value);
                    ReportPropertyChanging("SystemConfigID");
                    _SystemConfigID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemConfigID");
                    OnSystemConfigIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemConfigID;
        partial void OnSystemConfigIDChanging(global::System.Int32 value);
        partial void OnSystemConfigIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfigValue
        {
            get
            {
                return _ConfigValue;
            }
            set
            {
                OnConfigValueChanging(value);
                ReportPropertyChanging("ConfigValue");
                _ConfigValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConfigValue");
                OnConfigValueChanged();
            }
        }
        private global::System.String _ConfigValue;
        partial void OnConfigValueChanging(global::System.String value);
        partial void OnConfigValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfigCode
        {
            get
            {
                return _ConfigCode;
            }
            set
            {
                OnConfigCodeChanging(value);
                ReportPropertyChanging("ConfigCode");
                _ConfigCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConfigCode");
                OnConfigCodeChanged();
            }
        }
        private global::System.String _ConfigCode;
        partial void OnConfigCodeChanging(global::System.String value);
        partial void OnConfigCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfigDescription
        {
            get
            {
                return _ConfigDescription;
            }
            set
            {
                OnConfigDescriptionChanging(value);
                ReportPropertyChanging("ConfigDescription");
                _ConfigDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfigDescription");
                OnConfigDescriptionChanged();
            }
        }
        private global::System.String _ConfigDescription;
        partial void OnConfigDescriptionChanging(global::System.String value);
        partial void OnConfigDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private global::System.Boolean _Editable;
        partial void OnEditableChanging(global::System.Boolean value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="SystemEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemEvent object.
        /// </summary>
        /// <param name="systemEventID">Initial value of the SystemEventID property.</param>
        /// <param name="systemEventApplicationID">Initial value of the SystemEventApplicationID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        public static SystemEvent CreateSystemEvent(global::System.Int32 systemEventID, global::System.Int32 systemEventApplicationID, global::System.DateTime startTime)
        {
            SystemEvent systemEvent = new SystemEvent();
            systemEvent.SystemEventID = systemEventID;
            systemEvent.SystemEventApplicationID = systemEventApplicationID;
            systemEvent.StartTime = startTime;
            return systemEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventID
        {
            get
            {
                return _SystemEventID;
            }
            set
            {
                if (_SystemEventID != value)
                {
                    OnSystemEventIDChanging(value);
                    ReportPropertyChanging("SystemEventID");
                    _SystemEventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemEventID");
                    OnSystemEventIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemEventID;
        partial void OnSystemEventIDChanging(global::System.Int32 value);
        partial void OnSystemEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventApplicationID
        {
            get
            {
                return _SystemEventApplicationID;
            }
            set
            {
                OnSystemEventApplicationIDChanging(value);
                ReportPropertyChanging("SystemEventApplicationID");
                _SystemEventApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemEventApplicationID");
                OnSystemEventApplicationIDChanged();
            }
        }
        private global::System.Int32 _SystemEventApplicationID;
        partial void OnSystemEventApplicationIDChanging(global::System.Int32 value);
        partial void OnSystemEventApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodID;
        partial void OnPeriodIDChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.Boolean> value);
        partial void OnCompletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventSystemEventApplications", "SystemEventApplication")]
        public SystemEventApplication SystemEventApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventSystemEventApplications", "SystemEventApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventSystemEventApplications", "SystemEventApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemEventApplication> SystemEventApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventSystemEventApplications", "SystemEventApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventSystemEventApplications", "SystemEventApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventLogSystemEvent", "SystemEventLog")]
        public EntityCollection<SystemEventLog> SystemEventLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemEventLog>("NetStepsCommissionsDB.FkSystemEventLogSystemEvent", "SystemEventLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemEventLog>("NetStepsCommissionsDB.FkSystemEventLogSystemEvent", "SystemEventLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_SystemEvents_Periods", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.FK_SystemEvents_Periods", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.FK_SystemEvents_Periods", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("NetStepsCommissionsDB.FK_SystemEvents_Periods", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("NetStepsCommissionsDB.FK_SystemEvents_Periods", "Period", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="SystemEventApplicaitonStep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemEventApplicaitonStep : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemEventApplicaitonStep object.
        /// </summary>
        /// <param name="systemEventApplicaitonStepID">Initial value of the SystemEventApplicaitonStepID property.</param>
        /// <param name="systemEventApplicaitonID">Initial value of the SystemEventApplicaitonID property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="storedProcedure">Initial value of the StoredProcedure property.</param>
        public static SystemEventApplicaitonStep CreateSystemEventApplicaitonStep(global::System.Int32 systemEventApplicaitonStepID, global::System.Int32 systemEventApplicaitonID, global::System.String displayName, global::System.String storedProcedure)
        {
            SystemEventApplicaitonStep systemEventApplicaitonStep = new SystemEventApplicaitonStep();
            systemEventApplicaitonStep.SystemEventApplicaitonStepID = systemEventApplicaitonStepID;
            systemEventApplicaitonStep.SystemEventApplicaitonID = systemEventApplicaitonID;
            systemEventApplicaitonStep.DisplayName = displayName;
            systemEventApplicaitonStep.StoredProcedure = storedProcedure;
            return systemEventApplicaitonStep;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventApplicaitonStepID
        {
            get
            {
                return _SystemEventApplicaitonStepID;
            }
            set
            {
                if (_SystemEventApplicaitonStepID != value)
                {
                    OnSystemEventApplicaitonStepIDChanging(value);
                    ReportPropertyChanging("SystemEventApplicaitonStepID");
                    _SystemEventApplicaitonStepID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemEventApplicaitonStepID");
                    OnSystemEventApplicaitonStepIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemEventApplicaitonStepID;
        partial void OnSystemEventApplicaitonStepIDChanging(global::System.Int32 value);
        partial void OnSystemEventApplicaitonStepIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventApplicaitonID
        {
            get
            {
                return _SystemEventApplicaitonID;
            }
            set
            {
                OnSystemEventApplicaitonIDChanging(value);
                ReportPropertyChanging("SystemEventApplicaitonID");
                _SystemEventApplicaitonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemEventApplicaitonID");
                OnSystemEventApplicaitonIDChanged();
            }
        }
        private global::System.Int32 _SystemEventApplicaitonID;
        partial void OnSystemEventApplicaitonIDChanging(global::System.Int32 value);
        partial void OnSystemEventApplicaitonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoredProcedure
        {
            get
            {
                return _StoredProcedure;
            }
            set
            {
                OnStoredProcedureChanging(value);
                ReportPropertyChanging("StoredProcedure");
                _StoredProcedure = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoredProcedure");
                OnStoredProcedureChanged();
            }
        }
        private global::System.String _StoredProcedure;
        partial void OnStoredProcedureChanging(global::System.String value);
        partial void OnStoredProcedureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplication")]
        public SystemEventApplication SystemEventApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemEventApplication> SystemEventApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="SystemEventApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemEventApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemEventApplication object.
        /// </summary>
        /// <param name="systemEventApplicationID">Initial value of the SystemEventApplicationID property.</param>
        public static SystemEventApplication CreateSystemEventApplication(global::System.Int32 systemEventApplicationID)
        {
            SystemEventApplication systemEventApplication = new SystemEventApplication();
            systemEventApplication.SystemEventApplicationID = systemEventApplicationID;
            return systemEventApplication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventApplicationID
        {
            get
            {
                return _SystemEventApplicationID;
            }
            set
            {
                if (_SystemEventApplicationID != value)
                {
                    OnSystemEventApplicationIDChanging(value);
                    ReportPropertyChanging("SystemEventApplicationID");
                    _SystemEventApplicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemEventApplicationID");
                    OnSystemEventApplicationIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemEventApplicationID;
        partial void OnSystemEventApplicationIDChanging(global::System.Int32 value);
        partial void OnSystemEventApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplicaitonStep")]
        public EntityCollection<SystemEventApplicaitonStep> SystemEventApplicaitonSteps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemEventApplicaitonStep>("NetStepsCommissionsDB.FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplicaitonStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemEventApplicaitonStep>("NetStepsCommissionsDB.FK_SystemEventApplicaitonSteps_SystemEventApplications", "SystemEventApplicaitonStep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventLogSystemEventApplications", "SystemEventLog")]
        public EntityCollection<SystemEventLog> SystemEventLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemEventLog>("NetStepsCommissionsDB.FkSystemEventLogSystemEventApplications", "SystemEventLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemEventLog>("NetStepsCommissionsDB.FkSystemEventLogSystemEventApplications", "SystemEventLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventSystemEventApplications", "SystemEvent")]
        public EntityCollection<SystemEvent> SystemEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemEvent>("NetStepsCommissionsDB.FkSystemEventSystemEventApplications", "SystemEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemEvent>("NetStepsCommissionsDB.FkSystemEventSystemEventApplications", "SystemEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="SystemEventLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemEventLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemEventLog object.
        /// </summary>
        /// <param name="systemEventLogID">Initial value of the SystemEventLogID property.</param>
        /// <param name="systemEventID">Initial value of the SystemEventID property.</param>
        /// <param name="systemEventApplicationID">Initial value of the SystemEventApplicationID property.</param>
        /// <param name="systemEventLogTypeID">Initial value of the SystemEventLogTypeID property.</param>
        public static SystemEventLog CreateSystemEventLog(global::System.Int32 systemEventLogID, global::System.Int32 systemEventID, global::System.Int32 systemEventApplicationID, global::System.Int32 systemEventLogTypeID)
        {
            SystemEventLog systemEventLog = new SystemEventLog();
            systemEventLog.SystemEventLogID = systemEventLogID;
            systemEventLog.SystemEventID = systemEventID;
            systemEventLog.SystemEventApplicationID = systemEventApplicationID;
            systemEventLog.SystemEventLogTypeID = systemEventLogTypeID;
            return systemEventLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventLogID
        {
            get
            {
                return _SystemEventLogID;
            }
            set
            {
                if (_SystemEventLogID != value)
                {
                    OnSystemEventLogIDChanging(value);
                    ReportPropertyChanging("SystemEventLogID");
                    _SystemEventLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemEventLogID");
                    OnSystemEventLogIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemEventLogID;
        partial void OnSystemEventLogIDChanging(global::System.Int32 value);
        partial void OnSystemEventLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventID
        {
            get
            {
                return _SystemEventID;
            }
            set
            {
                OnSystemEventIDChanging(value);
                ReportPropertyChanging("SystemEventID");
                _SystemEventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemEventID");
                OnSystemEventIDChanged();
            }
        }
        private global::System.Int32 _SystemEventID;
        partial void OnSystemEventIDChanging(global::System.Int32 value);
        partial void OnSystemEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventApplicationID
        {
            get
            {
                return _SystemEventApplicationID;
            }
            set
            {
                OnSystemEventApplicationIDChanging(value);
                ReportPropertyChanging("SystemEventApplicationID");
                _SystemEventApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemEventApplicationID");
                OnSystemEventApplicationIDChanged();
            }
        }
        private global::System.Int32 _SystemEventApplicationID;
        partial void OnSystemEventApplicationIDChanging(global::System.Int32 value);
        partial void OnSystemEventApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventLogTypeID
        {
            get
            {
                return _SystemEventLogTypeID;
            }
            set
            {
                OnSystemEventLogTypeIDChanging(value);
                ReportPropertyChanging("SystemEventLogTypeID");
                _SystemEventLogTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemEventLogTypeID");
                OnSystemEventLogTypeIDChanged();
            }
        }
        private global::System.Int32 _SystemEventLogTypeID;
        partial void OnSystemEventLogTypeIDChanging(global::System.Int32 value);
        partial void OnSystemEventLogTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventMessage
        {
            get
            {
                return _EventMessage;
            }
            set
            {
                OnEventMessageChanging(value);
                ReportPropertyChanging("EventMessage");
                _EventMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventMessage");
                OnEventMessageChanged();
            }
        }
        private global::System.String _EventMessage;
        partial void OnEventMessageChanging(global::System.String value);
        partial void OnEventMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventLogSystemEventApplications", "SystemEventApplication")]
        public SystemEventApplication SystemEventApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventLogSystemEventApplications", "SystemEventApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventLogSystemEventApplications", "SystemEventApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemEventApplication> SystemEventApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventLogSystemEventApplications", "SystemEventApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemEventApplication>("NetStepsCommissionsDB.FkSystemEventLogSystemEventApplications", "SystemEventApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventLogSystemEvent", "SystemEvent")]
        public SystemEvent SystemEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEvent>("NetStepsCommissionsDB.FkSystemEventLogSystemEvent", "SystemEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEvent>("NetStepsCommissionsDB.FkSystemEventLogSystemEvent", "SystemEvent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemEvent> SystemEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEvent>("NetStepsCommissionsDB.FkSystemEventLogSystemEvent", "SystemEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemEvent>("NetStepsCommissionsDB.FkSystemEventLogSystemEvent", "SystemEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventLogTypes", "SystemEventLogType")]
        public SystemEventLogType SystemEventLogType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventLogType>("NetStepsCommissionsDB.FkSystemEventLogTypes", "SystemEventLogType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventLogType>("NetStepsCommissionsDB.FkSystemEventLogTypes", "SystemEventLogType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemEventLogType> SystemEventLogTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemEventLogType>("NetStepsCommissionsDB.FkSystemEventLogTypes", "SystemEventLogType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemEventLogType>("NetStepsCommissionsDB.FkSystemEventLogTypes", "SystemEventLogType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="SystemEventLogType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemEventLogType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemEventLogType object.
        /// </summary>
        /// <param name="systemEventLogTypeID">Initial value of the SystemEventLogTypeID property.</param>
        public static SystemEventLogType CreateSystemEventLogType(global::System.Int32 systemEventLogTypeID)
        {
            SystemEventLogType systemEventLogType = new SystemEventLogType();
            systemEventLogType.SystemEventLogTypeID = systemEventLogTypeID;
            return systemEventLogType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemEventLogTypeID
        {
            get
            {
                return _SystemEventLogTypeID;
            }
            set
            {
                if (_SystemEventLogTypeID != value)
                {
                    OnSystemEventLogTypeIDChanging(value);
                    ReportPropertyChanging("SystemEventLogTypeID");
                    _SystemEventLogTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemEventLogTypeID");
                    OnSystemEventLogTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemEventLogTypeID;
        partial void OnSystemEventLogTypeIDChanging(global::System.Int32 value);
        partial void OnSystemEventLogTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FkSystemEventLogTypes", "SystemEventLog")]
        public EntityCollection<SystemEventLog> SystemEventLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemEventLog>("NetStepsCommissionsDB.FkSystemEventLogTypes", "SystemEventLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemEventLog>("NetStepsCommissionsDB.FkSystemEventLogTypes", "SystemEventLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="titleID">Initial value of the TitleID property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Title CreateTitle(global::System.Int32 titleID, global::System.Int32 sortOrder, global::System.Boolean active)
        {
            Title title = new Title();
            title.TitleID = titleID;
            title.SortOrder = sortOrder;
            title.Active = active;
            return title;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleID
        {
            get
            {
                return _TitleID;
            }
            set
            {
                if (_TitleID != value)
                {
                    OnTitleIDChanging(value);
                    ReportPropertyChanging("TitleID");
                    _TitleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleID");
                    OnTitleIDChanged();
                }
            }
        }
        private global::System.Int32 _TitleID;
        partial void OnTitleIDChanging(global::System.Int32 value);
        partial void OnTitleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleCode
        {
            get
            {
                return _TitleCode;
            }
            set
            {
                OnTitleCodeChanging(value);
                ReportPropertyChanging("TitleCode");
                _TitleCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleCode");
                OnTitleCodeChanged();
            }
        }
        private global::System.String _TitleCode;
        partial void OnTitleCodeChanging(global::System.String value);
        partial void OnTitleCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkStatusOverridesStatusTypes", "AccountTitleOverride")]
        public EntityCollection<AccountTitleOverride> AccountTitleOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkStatusOverridesStatusTypes", "AccountTitleOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkStatusOverridesStatusTypes", "AccountTitleOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fk_StatusTypeStatusTypeID_AccountStatusStatusID", "AccountTitle")]
        public EntityCollection<AccountTitle> AccountTitles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitle>("NetStepsCommissionsDB.fk_StatusTypeStatusTypeID_AccountStatusStatusID", "AccountTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitle>("NetStepsCommissionsDB.fk_StatusTypeStatusTypeID_AccountStatusStatusID", "AccountTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_Titles", "AccountTitlesOverridden")]
        public EntityCollection<AccountTitlesOverridden> AccountTitlesOverriddens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles", "AccountTitlesOverridden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles", "AccountTitlesOverridden", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_Titles1", "AccountTitlesOverridden")]
        public EntityCollection<AccountTitlesOverridden> AccountTitlesOverriddens1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles1", "AccountTitlesOverridden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_Titles1", "AccountTitlesOverridden", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="TitleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TitleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TitleType object.
        /// </summary>
        /// <param name="titleTypeID">Initial value of the TitleTypeID property.</param>
        /// <param name="titleTypeCode">Initial value of the TitleTypeCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TitleType CreateTitleType(global::System.Int32 titleTypeID, global::System.String titleTypeCode, global::System.String name)
        {
            TitleType titleType = new TitleType();
            titleType.TitleTypeID = titleTypeID;
            titleType.TitleTypeCode = titleTypeCode;
            titleType.Name = name;
            return titleType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleTypeID
        {
            get
            {
                return _TitleTypeID;
            }
            set
            {
                if (_TitleTypeID != value)
                {
                    OnTitleTypeIDChanging(value);
                    ReportPropertyChanging("TitleTypeID");
                    _TitleTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleTypeID");
                    OnTitleTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TitleTypeID;
        partial void OnTitleTypeIDChanging(global::System.Int32 value);
        partial void OnTitleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TitleTypeCode
        {
            get
            {
                return _TitleTypeCode;
            }
            set
            {
                OnTitleTypeCodeChanging(value);
                ReportPropertyChanging("TitleTypeCode");
                _TitleTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TitleTypeCode");
                OnTitleTypeCodeChanged();
            }
        }
        private global::System.String _TitleTypeCode;
        partial void OnTitleTypeCodeChanging(global::System.String value);
        partial void OnTitleTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkAccountTitleOverridesTitleTypes", "AccountTitleOverride")]
        public EntityCollection<AccountTitleOverride> AccountTitleOverrides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkAccountTitleOverridesTitleTypes", "AccountTitleOverride");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitleOverride>("NetStepsCommissionsDB.fkAccountTitleOverridesTitleTypes", "AccountTitleOverride", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitles_TitleTypes", "AccountTitle")]
        public EntityCollection<AccountTitle> AccountTitles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitle>("NetStepsCommissionsDB.FK_AccountTitles_TitleTypes", "AccountTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitle>("NetStepsCommissionsDB.FK_AccountTitles_TitleTypes", "AccountTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_AccountTitlesOverriden_TitleTypes", "AccountTitlesOverridden")]
        public EntityCollection<AccountTitlesOverridden> AccountTitlesOverriddens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_TitleTypes", "AccountTitlesOverridden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountTitlesOverridden>("NetStepsCommissionsDB.FK_AccountTitlesOverriden_TitleTypes", "AccountTitlesOverridden", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="Tree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tree : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tree object.
        /// </summary>
        /// <param name="treeID">Initial value of the TreeID property.</param>
        /// <param name="treeTypeID">Initial value of the TreeTypeID property.</param>
        /// <param name="downlineID">Initial value of the DownlineID property.</param>
        /// <param name="periodID">Initial value of the PeriodID property.</param>
        /// <param name="treeLevel">Initial value of the TreeLevel property.</param>
        public static Tree CreateTree(global::System.Int64 treeID, global::System.Int32 treeTypeID, global::System.Int32 downlineID, global::System.Int32 periodID, global::System.Int32 treeLevel)
        {
            Tree tree = new Tree();
            tree.TreeID = treeID;
            tree.TreeTypeID = treeTypeID;
            tree.DownlineID = downlineID;
            tree.PeriodID = periodID;
            tree.TreeLevel = treeLevel;
            return tree;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TreeID
        {
            get
            {
                return _TreeID;
            }
            set
            {
                OnTreeIDChanging(value);
                ReportPropertyChanging("TreeID");
                _TreeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreeID");
                OnTreeIDChanged();
            }
        }
        private global::System.Int64 _TreeID;
        partial void OnTreeIDChanging(global::System.Int64 value);
        partial void OnTreeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreeTypeID
        {
            get
            {
                return _TreeTypeID;
            }
            set
            {
                if (_TreeTypeID != value)
                {
                    OnTreeTypeIDChanging(value);
                    ReportPropertyChanging("TreeTypeID");
                    _TreeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TreeTypeID");
                    OnTreeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TreeTypeID;
        partial void OnTreeTypeIDChanging(global::System.Int32 value);
        partial void OnTreeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SponsorID
        {
            get
            {
                return _SponsorID;
            }
            set
            {
                OnSponsorIDChanging(value);
                ReportPropertyChanging("SponsorID");
                _SponsorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SponsorID");
                OnSponsorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SponsorID;
        partial void OnSponsorIDChanging(Nullable<global::System.Int32> value);
        partial void OnSponsorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownlineID
        {
            get
            {
                return _DownlineID;
            }
            set
            {
                if (_DownlineID != value)
                {
                    OnDownlineIDChanging(value);
                    ReportPropertyChanging("DownlineID");
                    _DownlineID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DownlineID");
                    OnDownlineIDChanged();
                }
            }
        }
        private global::System.Int32 _DownlineID;
        partial void OnDownlineIDChanging(global::System.Int32 value);
        partial void OnDownlineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                if (_PeriodID != value)
                {
                    OnPeriodIDChanging(value);
                    ReportPropertyChanging("PeriodID");
                    _PeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodID");
                    OnPeriodIDChanged();
                }
            }
        }
        private global::System.Int32 _PeriodID;
        partial void OnPeriodIDChanging(global::System.Int32 value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreeLevel
        {
            get
            {
                return _TreeLevel;
            }
            set
            {
                if (_TreeLevel != value)
                {
                    OnTreeLevelChanging(value);
                    ReportPropertyChanging("TreeLevel");
                    _TreeLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TreeLevel");
                    OnTreeLevelChanged();
                }
            }
        }
        private global::System.Int32 _TreeLevel;
        partial void OnTreeLevelChanging(global::System.Int32 value);
        partial void OnTreeLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TreeGeneration
        {
            get
            {
                return _TreeGeneration;
            }
            set
            {
                OnTreeGenerationChanging(value);
                ReportPropertyChanging("TreeGeneration");
                _TreeGeneration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreeGeneration");
                OnTreeGenerationChanged();
            }
        }
        private Nullable<global::System.Int32> _TreeGeneration;
        partial void OnTreeGenerationChanging(Nullable<global::System.Int32> value);
        partial void OnTreeGenerationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkTreeDownlineID", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkTreeDownlineID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkTreeDownlineID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkTreeDownlineID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkTreeDownlineID", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "fkTreeSponsorID", "Account")]
        public Account Account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkTreeSponsorID", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkTreeSponsorID", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> Account1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("NetStepsCommissionsDB.fkTreeSponsorID", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("NetStepsCommissionsDB.fkTreeSponsorID", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="TreeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreeType object.
        /// </summary>
        /// <param name="treeTypeID">Initial value of the TreeTypeID property.</param>
        public static TreeType CreateTreeType(global::System.Int32 treeTypeID)
        {
            TreeType treeType = new TreeType();
            treeType.TreeTypeID = treeTypeID;
            return treeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreeTypeID
        {
            get
            {
                return _TreeTypeID;
            }
            set
            {
                if (_TreeTypeID != value)
                {
                    OnTreeTypeIDChanging(value);
                    ReportPropertyChanging("TreeTypeID");
                    _TreeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TreeTypeID");
                    OnTreeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TreeTypeID;
        partial void OnTreeTypeIDChanging(global::System.Int32 value);
        partial void OnTreeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TreeCode
        {
            get
            {
                return _TreeCode;
            }
            set
            {
                OnTreeCodeChanging(value);
                ReportPropertyChanging("TreeCode");
                _TreeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TreeCode");
                OnTreeCodeChanged();
            }
        }
        private global::System.String _TreeCode;
        partial void OnTreeCodeChanging(global::System.String value);
        partial void OnTreeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Byte> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Byte> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="TreeValidation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreeValidation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreeValidation object.
        /// </summary>
        /// <param name="treeValidationID">Initial value of the TreeValidationID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="validationResultID">Initial value of the ValidationResultID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static TreeValidation CreateTreeValidation(global::System.Int32 treeValidationID, global::System.DateTime date, global::System.Int32 validationResultID, global::System.Byte[] dataVersion)
        {
            TreeValidation treeValidation = new TreeValidation();
            treeValidation.TreeValidationID = treeValidationID;
            treeValidation.Date = date;
            treeValidation.ValidationResultID = validationResultID;
            treeValidation.DataVersion = dataVersion;
            return treeValidation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreeValidationID
        {
            get
            {
                return _TreeValidationID;
            }
            set
            {
                if (_TreeValidationID != value)
                {
                    OnTreeValidationIDChanging(value);
                    ReportPropertyChanging("TreeValidationID");
                    _TreeValidationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TreeValidationID");
                    OnTreeValidationIDChanged();
                }
            }
        }
        private global::System.Int32 _TreeValidationID;
        partial void OnTreeValidationIDChanging(global::System.Int32 value);
        partial void OnTreeValidationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CommissionPeriodID
        {
            get
            {
                return _CommissionPeriodID;
            }
            set
            {
                OnCommissionPeriodIDChanging(value);
                ReportPropertyChanging("CommissionPeriodID");
                _CommissionPeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionPeriodID");
                OnCommissionPeriodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CommissionPeriodID;
        partial void OnCommissionPeriodIDChanging(Nullable<global::System.Int32> value);
        partial void OnCommissionPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValidationResultID
        {
            get
            {
                return _ValidationResultID;
            }
            set
            {
                OnValidationResultIDChanging(value);
                ReportPropertyChanging("ValidationResultID");
                _ValidationResultID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidationResultID");
                OnValidationResultIDChanged();
            }
        }
        private global::System.Int32 _ValidationResultID;
        partial void OnValidationResultIDChanging(global::System.Int32 value);
        partial void OnValidationResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_TreeValidations_TreeValidationResultTypes", "TreeValidationResultType")]
        public TreeValidationResultType TreeValidationResultType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeValidationResultType>("NetStepsCommissionsDB.FK_TreeValidations_TreeValidationResultTypes", "TreeValidationResultType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeValidationResultType>("NetStepsCommissionsDB.FK_TreeValidations_TreeValidationResultTypes", "TreeValidationResultType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TreeValidationResultType> TreeValidationResultTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeValidationResultType>("NetStepsCommissionsDB.FK_TreeValidations_TreeValidationResultTypes", "TreeValidationResultType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreeValidationResultType>("NetStepsCommissionsDB.FK_TreeValidations_TreeValidationResultTypes", "TreeValidationResultType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="TreeValidationIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreeValidationIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreeValidationIssue object.
        /// </summary>
        /// <param name="validationIssueID">Initial value of the ValidationIssueID property.</param>
        /// <param name="treeValidationID">Initial value of the TreeValidationID property.</param>
        /// <param name="issueTypeID">Initial value of the IssueTypeID property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static TreeValidationIssue CreateTreeValidationIssue(global::System.Int32 validationIssueID, global::System.Int32 treeValidationID, global::System.Int32 issueTypeID, global::System.Byte[] dataVersion)
        {
            TreeValidationIssue treeValidationIssue = new TreeValidationIssue();
            treeValidationIssue.ValidationIssueID = validationIssueID;
            treeValidationIssue.TreeValidationID = treeValidationID;
            treeValidationIssue.IssueTypeID = issueTypeID;
            treeValidationIssue.DataVersion = dataVersion;
            return treeValidationIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValidationIssueID
        {
            get
            {
                return _ValidationIssueID;
            }
            set
            {
                if (_ValidationIssueID != value)
                {
                    OnValidationIssueIDChanging(value);
                    ReportPropertyChanging("ValidationIssueID");
                    _ValidationIssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationIssueID");
                    OnValidationIssueIDChanged();
                }
            }
        }
        private global::System.Int32 _ValidationIssueID;
        partial void OnValidationIssueIDChanging(global::System.Int32 value);
        partial void OnValidationIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreeValidationID
        {
            get
            {
                return _TreeValidationID;
            }
            set
            {
                OnTreeValidationIDChanging(value);
                ReportPropertyChanging("TreeValidationID");
                _TreeValidationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreeValidationID");
                OnTreeValidationIDChanged();
            }
        }
        private global::System.Int32 _TreeValidationID;
        partial void OnTreeValidationIDChanging(global::System.Int32 value);
        partial void OnTreeValidationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountID;
        partial void OnAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueTypeID
        {
            get
            {
                return _IssueTypeID;
            }
            set
            {
                OnIssueTypeIDChanging(value);
                ReportPropertyChanging("IssueTypeID");
                _IssueTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTypeID");
                OnIssueTypeIDChanged();
            }
        }
        private global::System.Int32 _IssueTypeID;
        partial void OnIssueTypeIDChanging(global::System.Int32 value);
        partial void OnIssueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssueType")]
        public TreeValidationIssueType TreeValidationIssueType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeValidationIssueType>("NetStepsCommissionsDB.FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssueType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeValidationIssueType>("NetStepsCommissionsDB.FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssueType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TreeValidationIssueType> TreeValidationIssueTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeValidationIssueType>("NetStepsCommissionsDB.FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssueType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreeValidationIssueType>("NetStepsCommissionsDB.FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssueType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="TreeValidationIssueType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreeValidationIssueType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreeValidationIssueType object.
        /// </summary>
        /// <param name="validationIssueTypeID">Initial value of the ValidationIssueTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static TreeValidationIssueType CreateTreeValidationIssueType(global::System.Int32 validationIssueTypeID, global::System.String name, global::System.Boolean enabled, global::System.Byte[] dataVersion)
        {
            TreeValidationIssueType treeValidationIssueType = new TreeValidationIssueType();
            treeValidationIssueType.ValidationIssueTypeID = validationIssueTypeID;
            treeValidationIssueType.Name = name;
            treeValidationIssueType.Enabled = enabled;
            treeValidationIssueType.DataVersion = dataVersion;
            return treeValidationIssueType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValidationIssueTypeID
        {
            get
            {
                return _ValidationIssueTypeID;
            }
            set
            {
                if (_ValidationIssueTypeID != value)
                {
                    OnValidationIssueTypeIDChanging(value);
                    ReportPropertyChanging("ValidationIssueTypeID");
                    _ValidationIssueTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationIssueTypeID");
                    OnValidationIssueTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ValidationIssueTypeID;
        partial void OnValidationIssueTypeIDChanging(global::System.Int32 value);
        partial void OnValidationIssueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Editable;
        partial void OnEditableChanging(Nullable<global::System.Boolean> value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssue")]
        public EntityCollection<TreeValidationIssue> TreeValidationIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeValidationIssue>("NetStepsCommissionsDB.FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeValidationIssue>("NetStepsCommissionsDB.FK_TreeValidationIssues_TreeValidationIssueTypes", "TreeValidationIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="TreeValidationResultType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreeValidationResultType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreeValidationResultType object.
        /// </summary>
        /// <param name="validationResultID">Initial value of the ValidationResultID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="dataVersion">Initial value of the DataVersion property.</param>
        public static TreeValidationResultType CreateTreeValidationResultType(global::System.Int32 validationResultID, global::System.String name, global::System.Boolean enabled, global::System.Byte[] dataVersion)
        {
            TreeValidationResultType treeValidationResultType = new TreeValidationResultType();
            treeValidationResultType.ValidationResultID = validationResultID;
            treeValidationResultType.Name = name;
            treeValidationResultType.Enabled = enabled;
            treeValidationResultType.DataVersion = dataVersion;
            return treeValidationResultType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValidationResultID
        {
            get
            {
                return _ValidationResultID;
            }
            set
            {
                if (_ValidationResultID != value)
                {
                    OnValidationResultIDChanging(value);
                    ReportPropertyChanging("ValidationResultID");
                    _ValidationResultID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationResultID");
                    OnValidationResultIDChanged();
                }
            }
        }
        private global::System.Int32 _ValidationResultID;
        partial void OnValidationResultIDChanging(global::System.Int32 value);
        partial void OnValidationResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Editable;
        partial void OnEditableChanging(Nullable<global::System.Boolean> value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DataVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_DataVersion);
            }
            set
            {
                OnDataVersionChanging(value);
                ReportPropertyChanging("DataVersion");
                _DataVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataVersion");
                OnDataVersionChanged();
            }
        }
        private global::System.Byte[] _DataVersion;
        partial void OnDataVersionChanging(global::System.Byte[] value);
        partial void OnDataVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetStepsCommissionsDB", "FK_TreeValidations_TreeValidationResultTypes", "TreeValidation")]
        public EntityCollection<TreeValidation> TreeValidations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeValidation>("NetStepsCommissionsDB.FK_TreeValidations_TreeValidationResultTypes", "TreeValidation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeValidation>("NetStepsCommissionsDB.FK_TreeValidations_TreeValidationResultTypes", "TreeValidation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="UniqueKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UniqueKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UniqueKey object.
        /// </summary>
        /// <param name="uniqueKeyId">Initial value of the UniqueKeyId property.</param>
        /// <param name="keyName">Initial value of the KeyName property.</param>
        /// <param name="keyValue">Initial value of the KeyValue property.</param>
        public static UniqueKey CreateUniqueKey(global::System.Int32 uniqueKeyId, global::System.String keyName, global::System.Int32 keyValue)
        {
            UniqueKey uniqueKey = new UniqueKey();
            uniqueKey.UniqueKeyId = uniqueKeyId;
            uniqueKey.KeyName = keyName;
            uniqueKey.KeyValue = keyValue;
            return uniqueKey;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniqueKeyId
        {
            get
            {
                return _UniqueKeyId;
            }
            set
            {
                if (_UniqueKeyId != value)
                {
                    OnUniqueKeyIdChanging(value);
                    ReportPropertyChanging("UniqueKeyId");
                    _UniqueKeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UniqueKeyId");
                    OnUniqueKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _UniqueKeyId;
        partial void OnUniqueKeyIdChanging(global::System.Int32 value);
        partial void OnUniqueKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyName
        {
            get
            {
                return _KeyName;
            }
            set
            {
                OnKeyNameChanging(value);
                ReportPropertyChanging("KeyName");
                _KeyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KeyName");
                OnKeyNameChanged();
            }
        }
        private global::System.String _KeyName;
        partial void OnKeyNameChanging(global::System.String value);
        partial void OnKeyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyValue
        {
            get
            {
                return _KeyValue;
            }
            set
            {
                OnKeyValueChanging(value);
                ReportPropertyChanging("KeyValue");
                _KeyValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeyValue");
                OnKeyValueChanged();
            }
        }
        private global::System.Int32 _KeyValue;
        partial void OnKeyValueChanging(global::System.Int32 value);
        partial void OnKeyValueChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetStepsCommissionsDB", Name="uspIntegrationsGetDisbursementProfileDataResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspIntegrationsGetDisbursementProfileDataResult : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameOnAccount
        {
            get
            {
                return _NameOnAccount;
            }
            set
            {
                OnNameOnAccountChanging(value);
                ReportPropertyChanging("NameOnAccount");
                _NameOnAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameOnAccount");
                OnNameOnAccountChanged();
            }
        }
        private global::System.String _NameOnAccount;
        partial void OnNameOnAccountChanging(global::System.String value);
        partial void OnNameOnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoutingNumber
        {
            get
            {
                return _RoutingNumber;
            }
            set
            {
                OnRoutingNumberChanging(value);
                ReportPropertyChanging("RoutingNumber");
                _RoutingNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoutingNumber");
                OnRoutingNumberChanged();
            }
        }
        private global::System.String _RoutingNumber;
        partial void OnRoutingNumberChanging(global::System.String value);
        partial void OnRoutingNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccountNumber
        {
            get
            {
                return _BankAccountNumber;
            }
            set
            {
                OnBankAccountNumberChanging(value);
                ReportPropertyChanging("BankAccountNumber");
                _BankAccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccountNumber");
                OnBankAccountNumberChanged();
            }
        }
        private global::System.String _BankAccountNumber;
        partial void OnBankAccountNumberChanging(global::System.String value);
        partial void OnBankAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankPhone
        {
            get
            {
                return _BankPhone;
            }
            set
            {
                OnBankPhoneChanging(value);
                ReportPropertyChanging("BankPhone");
                _BankPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankPhone");
                OnBankPhoneChanged();
            }
        }
        private global::System.String _BankPhone;
        partial void OnBankPhoneChanging(global::System.String value);
        partial void OnBankPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EnrollmentFormReceived
        {
            get
            {
                return _EnrollmentFormReceived;
            }
            set
            {
                OnEnrollmentFormReceivedChanging(value);
                ReportPropertyChanging("EnrollmentFormReceived");
                _EnrollmentFormReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrollmentFormReceived");
                OnEnrollmentFormReceivedChanged();
            }
        }
        private Nullable<global::System.Boolean> _EnrollmentFormReceived;
        partial void OnEnrollmentFormReceivedChanging(Nullable<global::System.Boolean> value);
        partial void OnEnrollmentFormReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine3
        {
            get
            {
                return _AddressLine3;
            }
            set
            {
                OnAddressLine3Changing(value);
                ReportPropertyChanging("AddressLine3");
                _AddressLine3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine3");
                OnAddressLine3Changed();
            }
        }
        private global::System.String _AddressLine3;
        partial void OnAddressLine3Changing(global::System.String value);
        partial void OnAddressLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Locality
        {
            get
            {
                return _Locality;
            }
            set
            {
                OnLocalityChanging(value);
                ReportPropertyChanging("Locality");
                _Locality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Locality");
                OnLocalityChanged();
            }
        }
        private global::System.String _Locality;
        partial void OnLocalityChanging(global::System.String value);
        partial void OnLocalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountyDistrict
        {
            get
            {
                return _CountyDistrict;
            }
            set
            {
                OnCountyDistrictChanging(value);
                ReportPropertyChanging("CountyDistrict");
                _CountyDistrict = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountyDistrict");
                OnCountyDistrictChanged();
            }
        }
        private global::System.String _CountyDistrict;
        partial void OnCountyDistrictChanging(global::System.String value);
        partial void OnCountyDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryISOCode
        {
            get
            {
                return _CountryISOCode;
            }
            set
            {
                OnCountryISOCodeChanging(value);
                ReportPropertyChanging("CountryISOCode");
                _CountryISOCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryISOCode");
                OnCountryISOCodeChanged();
            }
        }
        private global::System.String _CountryISOCode;
        partial void OnCountryISOCodeChanging(global::System.String value);
        partial void OnCountryISOCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();

        #endregion
    }

    #endregion
    
}
