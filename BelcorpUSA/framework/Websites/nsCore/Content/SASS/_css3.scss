/***********************************
CSS3 Mixins
***********************************/
@mixin BorderRadius($values: .5em) {
	-moz-border-radius:$values;
	-webkit-border-radius:$values;
	border-radius:$values;
}

@mixin BoxShadow($values, $type: standard) {
	@if $type == inset {
		-moz-box-shadow:inset unquote($values);
		-webkit-box-shadow:inset unquote($values);
		box-shadow:inset unquote($values);
	} @else {
		-moz-box-shadow:unquote($values);
		-webkit-box-shadow:unquote($values);
		box-shadow:unquote($values);
	}
}

@mixin Gradient($default, $colors, $radius: null, $position: null, $type: Linear){
	$ieVals: nth(nth($colors,1), 1), nth(nth($colors, length($colors)), 1);
	@if $type == 'Linear' {
		@if $radius == null {
			@include LinearGradient($default, $colors, $ieVals);
		} @else {
			@include AngleGradient($default, $colors, $radius, $ieVals);
		}
	} @else if $type == 'Radial' {
		@if $position == null {
			$position: center center;
		}
		@include RadialGradient($default, $colors, $position, $ieVals);
	}
}

@mixin LinearGradient($default, $colors, $ieColors){
	background-color:$default; /* Old browsers */
	background-image: -moz-linear-gradient(top, getGradientValues($colors, moz)); /* FF3.6+ */
    background-image:-webkit-gradient(linear, left top, left bottom, getGradientValues($colors, webkit1)); /* Chrome,Safari4+ */
    background-image:-webkit-linear-gradient(top, getGradientValues($colors, webkit2)); /* Chrome10+,Safari5.1+ */
    background-image:-o-linear-gradient(top, getGradientValues($colors, opera)); /* Opera 11.10+ */
    background-image:-ms-linear-gradient(top, getGradientValues($colors, ms)); /* IE10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str(nth($ieColors,1))}', endColorstr='#{ie-hex-str(nth($ieColors,2))}'); // IE6-9
	//This is not liking the return format from the function???????????????????????
	//background:linear-gradient(to bottom, getGradientValues($colors, w3c)); /* W3C */
	//background:radial-gradient(ellipse at center, getGradientValues($colors, w3c)) no-repeat scroll nth($position, 1) nth($position, 2) nth(nth($colors, length($colors)), 1); /* W3C */
	//background:linear-gradient(135deg,  getGradientValues($colors, w3c)); /* W3C */
	
	//This is using the variable data, it is putting into just one string???????????????????????
	
}

@mixin AngleGradient($default, $colors, $radius, $ieColors) {
	$radiusW3C: 135deg;
	@if $radius == -45deg {
		$radiusW3C: 135deg;
	}@else {
		$radiusW3C: $radius;
	}	
	background-color:$default; /* Old browsers */
	background-image:-moz-linear-gradient($radius, getGradientValues($colors, moz)); /* FF3.6+ */
	background-image:-webkit-gradient(linear, left top, right bottom, getGradientValues($colors, webkit1)); /* Chrome,Safari4+ */
	background-image:-webkit-linear-gradient($radius,  getGradientValues($colors, webkit2)); /* Chrome10+,Safari5.1+ */
	background-image:-o-linear-gradient($radius,  getGradientValues($colors, opera)); /* Opera 11.10+ */
	background-image:-ms-linear-gradient($radius,  getGradientValues($colors, ms)); /* IE10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str(nth($ieColors,1))}', endColorstr='#{ie-hex-str(nth($ieColors,2))}', GradientType=1); // IE6-9
	/*****
	* background:linear-gradient still not working so it is up in my test function at the top
	*****/
}

@mixin RadialGradient($default, $colors, $position, $ieColors){
	background:$default; /* Old browsers */
	background: -moz-radial-gradient(nth($position, 1) nth($position, 2), ellipse cover, getGradientValues($colors, moz)) no-repeat scroll nth(nth($colors, length($colors)), 1); /* FF3.6+ */
	background:-webkit-gradient(radial, nth($position, 1) nth($position, 2), 0px, center center, 100%, getGradientValues($colors, webkit1)) no-repeat scroll nth(nth($colors, length($colors)), 1); /* Chrome,Safari4+ */
	background:-webkit-radial-gradient(nth($position, 1) nth($position, 2), ellipse cover, getGradientValues($colors, webkit2)) no-repeat scroll nth(nth($colors, length($colors)), 1); /* Chrome10+,Safari5.1+ */
	background:-o-radial-gradient( nth($position, 1) nth($position, 2), ellipse cover,  getGradientValues($colors, opera)) no-repeat scroll nth(nth($colors, length($colors)), 1); /* Opera 11.10+ */
	background:-ms-radial-gradient( nth($position, 1) nth($position, 2), ellipse cover,  getGradientValues($colors, ms)) no-repeat scroll nth(nth($colors, length($colors)), 1); /* IE10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str(nth($ieColors,1))}', endColorstr='#{ie-hex-str(nth($ieColors,2))}'); // IE6-9
	/*****
	* background:radial-gradient still not working so it is up in my test function at the top
	*****/
}

/*** Transistions ***/
@mixin transition ($p: background-color, $time: $transition_time) {
	-moz-transition-property: $p;
	-moz-transition-duration: $time; 
	-webkit-transition-property: $p;
	-webkit-transition-duration: $time; 
	-o-transition-property: $p;
	-o-transition-duration: $time; 
	transition-property: $p;
	transition-duration: $time;
}

/**********************
* Functions
**********************/
@function getGradientValues($c, $b) {
	$list: '';
	$count: 0;
	@each $values in $c {
		$count: $count + 1;
		@if $count == 1 {
			@if $b == webkit1 {
				$list: color-stop(nth($values, 2), nth($values, 1));
			} @else if $b == w3c {
				
			} @else {
				$list: nth($values, 1) nth($values, 2);
			}
		} @else {
			@if $b == webkit1 {
				$list: $list, color-stop(nth($values, 2), nth($values, 1));
			} @else if $b == w3c {
				
			} @else {
				$list: $list, nth($values, 1) nth($values, 2);
			}		
		}
	}
	@return $list;
}