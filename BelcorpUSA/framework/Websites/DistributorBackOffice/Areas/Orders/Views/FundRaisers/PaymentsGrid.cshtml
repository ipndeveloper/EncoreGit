@model NetSteps.Data.Entities.Party

@helper DisplayPayment(OrderPayment payment)
    {
    <div class="Payment">
        @{string declinedMessage = payment.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Declined ? string.Format(" <i style=\"color:red\">({0})</i>", Html.Term("Declined")) : string.Empty;}
        @if (payment.PaymentTypeID == (int)Constants.PaymentType.CreditCard
            || payment.PaymentTypeID == (int)Constants.PaymentType.GiftCard)
        {
            @Html.Raw(payment.MaskedAccountNumber + declinedMessage)
        }
        else
        {
            @Html.Raw(SmallCollectionCache.Instance.PaymentTypes.GetById(payment.PaymentTypeID).GetTerm() + declinedMessage)
        }
        <br />
        @if ((payment.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Pending || payment.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Declined)
            && payment.PaymentTypeID != (int)Constants.PaymentType.InstantCommission)
        {
            <a href="javascript:void(0);" class="UI-icon icon-x removePayment">
                <input type="hidden" class="paymentId" value="@payment.Guid.ToString("N")" /></a>
        }
        @Html.Term("Amount"):
        @payment.Amount.ToString(Model.Order.CurrencyID)
    </div>
}

<div class="UI-bg UI-header">
    <div class="FL splitCol partyAppliedHeader">
        <span class="pad5">@Html.Term("FundraiserPayments", "Fundraiser Payments")</span></div>
    <div class="FL splitCol custAppliedHeader">
        <span class="pad5">@Html.Term("CustomerPayments", "Customer Payments")</span></div>
    <span class="clr"></span>
</div>
<div class="FL splitCol partyPaymentsColumn">
    <div id="partyPayments" class="pad10 content">
        @{var partyPayments = Model.Order.OrderPayments.Where(op => !op.OrderCustomerID.HasValue 
              && (op.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Pending 
              || op.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Completed 
              || op.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Declined)).ToList();}
        <p class="lawyer" style="@(partyPayments.Any() ? "display:none;" : string.Empty)">@Html.Term("NoFundraiserPaymentsApplied", "You have not applied any payments towards the fundraiser yet.")</p>
        @foreach (var partyPayment in partyPayments)
        {
            @DisplayPayment(partyPayment);
        }
    </div>
</div>
<div class="FL splitCol customerPaymentsColumn">
    <div id="customerPayments" class="pad10 content">
        @{int customerPaymentCount = 0;}
        @foreach (var customer in Model.Order.OrderCustomers.Where(oc => oc.OrderPayments.Count > 0))
        {
            var customerPayments = customer.OrderPayments.Where(op => op.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Pending 
                || op.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Completed
                || op.OrderPaymentStatusID == (int)Constants.OrderPaymentStatus.Declined).ToList();
            customerPaymentCount += customerPayments.Count();
            if (customerPayments.Any())
            {
            <div id="customer@(customer.Guid.ToString("N"))" class="Customer">
                @customer.FullName
                <input type="hidden" class="orderCustomerId" value="@customer.Guid.ToString("N")" />
                @foreach (var customerPayment in customerPayments)
                {
                    @DisplayPayment(customerPayment);
                }
            </div>
            }
        }
        <p class="lawyer" style="@(customerPaymentCount > 0 ? "display:none;" : string.Empty)">@Html.Term("NoCustomerPaymentsApplied", "You have not applied any payments directly towards customers yet.")</p>
    </div>
</div>
<span class="clr"></span>