@model NetSteps.Data.Entities.OrderCustomer
<div id="@("orderCustomerHeader" + Model.Guid.ToString("N"))" class="UI-bg UI-header brdrYYNN pad5 GuestTag customerCartHeader">
    <a href="javascript:void(0);" class="FL UI-icon-container collapseCart guestName"><span
        class="UI-icon icon-arrowDown"></span><span>
            @Model.FullName
            @if (Model.IsHostess)
            {
                @Html.Term("HostIndicator", "(Host)")
            }
            <input type="hidden" value="@Model.Guid.ToString("N")" class="orderCustomerId" />
        </span></a>
    <div class="FR mr10 GuestControls">
        @*<a href="@Href("~/Orders/Fundraisers/EditDirectShip", new { orderCustomerId = Model.Guid.ToString("N") })" class="directShip@(Model.OrderShipments.Count > 0 ? " isDirectShip" : "")">@(Model.OrderShipments.Count > 0 ? Html.Term("EditDirectShip", "Edit Direct Ship") : Html.Term("AddDirectShip", "Add Direct Ship"))</a>*@
        @if (!Model.IsHostess)
        {
            <a href="javascript:void(0);" class="removeGuest">@Html.Term("RemoveGuest", "Remove Guest")<input type="hidden" value="@Model.Guid.ToString("N")" class="orderCustomerId" /></a>
            if (Model.IsBookingCredit)
            {
            @Html.Term("FutureHostess", "Future Hostess")
            }
            else
            {
            @*<a href="javascript:void(0);" class="partyBooking">@Html.Term("BookAParty", "Book a party")<input type="hidden" value="@Model.Guid.ToString("N")" class="partyBookingOrderCustomerGuid" /></a>*@
            }
        }
    </div>
    <span class="clrall"></span>
</div>
<div id="@("orderCustomerBody" + Model.Guid.ToString("N"))" class="clr CustomerCart">
    <div class="overflow BundleOption" style="display:@(string.IsNullOrEmpty(ViewBag.DynamicKitUpSaleHTML) ? "none" : "block");">
        <span class="FL UI-bundle icon-bundle-option mr10">@Html.Term("BundleCarrotText", "Bundle and Save")</span>
        <span class="FL optionText">@Html.Term("OneItemAwayFromCustomerBundle", "Get a deal by combining this guest's cart into one of these product bundles:")&nbsp;</span>
        <span id="@("BundleOptionsSpan" + Model.Guid.ToString("N"))">
            @Html.Raw(ViewBag.DynamicKitUpSaleHTML)
        </span>
    </div>
    <div class="UI-lightBg brdrNNYY pad5 icon-24 GridFilters CartTools">
        <div class="FL">
            <b>@Html.Term("Item")</b>:
            <input type="text" value="" class="TextInput productLookUp" id="item" />
            <input type="hidden" value="" class="productId" />
            <input type="hidden" class="needsBackOrderConfirmation" value="" />
            <input type="hidden" value="@Model.Guid.ToString("N")" class="orderCustomerId" />
        </div>
        <div class="FL">
            <b>@Html.Term("Quantity")</b>:
            <input type="text" value="1" maxlength="3" class="TextInput numeric quantity" autocomplete="off"
                id="quantity" />
        </div>
        <a class="FL UI-icon-container TextLink Add addToCart" href="javascript:void(0);" title="@Html.Term("AddToCart", "Add to cart")">
            <span class="UI-icon icon-plus"></span></a><span class="clr"></span>
    </div>
    <table id="@("orderCustomer" + Model.Guid.ToString("N"))" width="100%" cellspacing="0" class="DataGrid editableGrid responsive">
        <thead class="UI-bg UI-header">
            <tr>
                <th style="width: 20px;">
                </th>
                <th style="width: 80px;">@Html.Term("SKU")
                </th>
                <th style="width: 100%">@Html.Term("Product")
                </th>
                <th style="width: 75px;">@Html.Term("Price")
                </th>
                <th style="width: 60px;">@Html.Term("Quantity")
                </th>
                <th style="width: 150px;">@Html.Term("CV_QV")
                </th>
                <th style="width: 175px;">@Html.Term("Total")
                </th>
            </tr>
        </thead>
        <tbody>
            <tr class="EmptyCart" style="@(Model.OrderItems.Count > 0 ? "display:none;" : "display:table-row;")">
                <td class="Lawyer" colspan="8">
                    @Html.Term("CartIsCurrentlyEmpty", "Cart is currently empty")
                </td>
            </tr>
        </tbody>
        <tbody class="OrderItems">
								@{ var inventory = NetSteps.Encore.Core.IoC.Create.New<InventoryBaseRepository>(); }

            @foreach (var orderItem in Model.ParentOrderItems.OrderByDescending(oi => oi.OrderItemTypeID))
            {

                decimal commissionableTotal = (orderItem.CommissionableTotalOverride != null) ? orderItem.CommissionableTotalOverride.ToDecimal() : orderItem.CommissionableTotal.ToDecimal();
                var product = inventory.GetProduct(orderItem.ProductID.ToInt());

                string trClass = string.Empty;

                if (product.IsDynamicKit())
                {
                    trClass = "DynamicKit";
                }

                if (orderItem.OrderItemTypeID == (int)Constants.OrderItemType.ExclusiveProduct)
                {
                    trClass = string.Format("{0} {1}", trClass, "ExclusiveProductsRow").Trim();
                }
                
                <tr id="@("oi" + orderItem.Guid.ToString("N"))" @(Html.Raw(!string.IsNullOrWhiteSpace(trClass) ? string.Format("class=\"{0}\"", trClass) : ""))>
                    <td data-label="" class="icon-24">
                        @if (!orderItem.IsHostReward)
                        {
                            <a href="javascript:void(0);" class="UI-icon icon-x RemoveOrderItem" title="@Html.Term("RemoveItemFromCart", "Remove item from cart")">
                                <input type="hidden" value="@orderItem.Guid.ToString("N")" class="orderItemGuid" />
                                <input type="hidden" value="@Model.Guid.ToString("N")" class="orderCustomerId" /></a>
                            <input type="hidden" value="@product.ProductID" class="productId" />
                        }
                    </td>
                    <td data-label="@Html.Term("SKU")">
                        @orderItem.SKU
                    </td>
                    <td data-label="@Html.Term("Product")">
                        @if (product.IsDynamicKit())
                        { 
                            <a href="@Url.Content("~/Orders/Fundraisers/BundlePackItems?productId=" + product.ProductID + "&bundleGuid=" + orderItem.Guid.ToString("N") + "&orderCustomerId=" + Model.Guid.ToString("N"))">
                                @Html.Raw((orderItem.OrderItemTypeID == (int)Constants.OrderItemType.ExclusiveProduct ? String.Format("<span class=\"ExclusiveProductsIndicator\">{0}</span>", Html.Term("ExclusiveProductsIndicator", "*")) : ""))
                                @product.Translations.Name()</a>
                        }
                        else
                        { 
                            @Html.Raw((orderItem.OrderItemTypeID == (int)Constants.OrderItemType.ExclusiveProduct ? String.Format("<span class=\"ExclusiveProductsIndicator\">{0}</span> ", Html.Term("ExclusiveProductsIndicator", "*")) : ""))@product.Translations.Name()    
                        }
                        @if (product.IsDynamicKit() || product.IsStaticKit())
                        {
                            if (product.IsDynamicKit())
                            {
                                int requiredItemsInBundleCount = product.DynamicKits[0].DynamicKitGroups.Sum(g => g.MinimumProductCount);
                                if (orderItem.ChildOrderItems.Sum(oi => oi.Quantity) == requiredItemsInBundleCount)
                                {
                            <span class="UI-icon icon-bundle-full"></span>
                                }
                                else
                                {
                            <span class="UI-icon icon-bundle-add"></span>
                                }
                            }
                            <div class="bundlePackItemList">
                                <table cellspacing="0" width="100%">
                                    <tbody>
                                        <tr>
                                            <th>
                                            </th>
                                            <th>@Html.Term("SKU")
                                            </th>
                                            <th>@Html.Term("Product")
                                            </th>
                                            <th>@Html.Term("Quantity")
                                            </th>
                                        </tr>
                                        @foreach (OrderItem childItem in orderItem.ChildOrderItems)
                                        {
                                            Product childProduct = inventory.GetProduct(childItem.ProductID.Value);
                                            <tr>
                                                <td>
                                                    <span class="UI-icon icon-bundle-arrow"></span>
                                                </td>
                                                <td class="KitSKU">
                                                    @childItem.SKU
                                                </td>
                                                <td>
                                                    @childProduct.Translations.Name()
                                                </td>
                                                <td>
                                                    @childItem.Quantity
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </td>
                    <td data-label="@Html.Term("Price")">
                        @orderItem.ItemPrice.ToString(Model.Order.CurrencyID)
                    </td>
                    <td data-label="@Html.Term("Quantity")" class="center quantity">
                        @if (orderItem.IsHostReward)
                        {
                            @orderItem.Quantity
                        }
                        else
                        {
                            if (product.IsDynamicKit())
                            {
                            <input type="hidden" class="quantity" value="@orderItem.Quantity" />@orderItem.Quantity
                            }
                            else
                            {
                            <input type="text" class="quantity" value="@orderItem.Quantity" style="width: 50px;" />
                            }
                        }
                    </td>
                    <td data-label="@Html.Term("CV_QV")">
                        @orderItem.CommissionableTotal.ToString(Model.Order.CurrencyID)
                    </td>
                    <td data-label="@Html.Term("Total")">
                        @((orderItem.GetAdjustedPrice() * orderItem.Quantity).ToString(Model.Order.CurrencyID))
                        @if (orderItem.IsHostReward)
                        {
                            decimal discount = 0;
                            if (orderItem.Discount.HasValue)
                            {
                                discount = orderItem.Discount.Value;
                            }
                            else if (orderItem.DiscountPercent.HasValue)
                            {
                                discount = (orderItem.ItemPrice * orderItem.Quantity) * orderItem.DiscountPercent.ToDecimal();
                            }
                            @Html.Term("HostRewardDiscount", "(discounted {0})", discount.ToString(Model.Order.CurrencyID))
                        }
                    </td>
                </tr>
            }
        </tbody>
        <tbody class="@("orderCustomerTotals" + Model.Guid.ToString("N")) GuestTotals">
            <tr class="updateRow">
                <td colspan="4">
                    &nbsp;
                </td>
                <td>
                    <a href="javascript:void(0);" class="DTL Update updateCart">
                        @Html.Term("Update")
                        <input type="hidden" value="@Model.Guid.ToString("N")" class="orderCustomerId" /></a>
                </td>
                <td colspan="2">
                    &nbsp;
                </td>
            </tr>
            <tr class="GuestTotal">
                <td colspan="6" class="right bold">
                    <span>@Html.Term("CV_QV")</span>:
                </td>
                <td>
                    <span class="commissionableTotal Total">@Model.CommissionableTotal.ToString(Model.Order.CurrencyID)</span>
                </td>
            </tr>
            <tr class="GuestTotal">
                <td colspan="6" class="right bold">
                    <span>@Html.Term("Subtotal")</span>:
                </td>
                <td>
                    <span class="subtotal Total">@Model.Subtotal.ToString(Model.Order.CurrencyID)</span>
                </td>
            </tr>
            <tr class="GuestTotal">
                <td colspan="6" class="right bold">
                    <span>@Html.Term("Tax")</span>:
                </td>
                <td>
                    <span class="taxTotal Total">@Model.TaxAmountTotal.ToString(Model.Order.CurrencyID)</span>
                </td>
            </tr>
            <tr class="UI-secBg GuestTotal GuestTotalBalance">
                <td colspan="6" class="right bold">
                    <span>@Html.Term("Total"):</span>
                </td>
                <td class="bold">
                    <span class="grandTotal Total">@Model.Total.ToString(Model.Order.CurrencyID)</span>
                </td>
            </tr>
        </tbody>
    </table>
</div>
