<?xml version="1.0"?>
<doc>
  <assembly>
    <name>NetSteps.Promotions.Plugins.Base</name>
  </assembly>
  <members>
    <member name="M:NetSteps.Promotions.Plugins.Qualifications.Base.BasePromotionQualificationRepository`2.Convert(`1)">
      <summary>
            Converts the specified entity to a DTO.
            </summary>
      <param name="entity">The entity.</param>
      <returns />
    </member>
    <member name="M:NetSteps.Promotions.Plugins.Qualifications.Base.BasePromotionQualificationRepository`2.Convert(`0)">
      <summary>
            Converts the specified DTO to a specific data object.
            </summary>
      <param name="dto">The dto.</param>
      <returns />
    </member>
    <member name="M:NetSteps.Promotions.Plugins.Qualifications.Base.BasePromotionQualificationRepository`2.UpdateEntity(`1,`0)">
      <summary>
            Updates an entity with information in the DTO.
            </summary>
      <param name="entity">The entity.</param>
      <param name="dto">The dto.</param>
    </member>
    <member name="M:NetSteps.Promotions.Plugins.Rewards.Base.BasePromotionRewardEffectExtensionRepository`2.Convert(`1)">
      <summary>
            Converts the specified entity to a DTO.
            </summary>
      <param name="entity">The entity.</param>
      <returns />
    </member>
    <member name="M:NetSteps.Promotions.Plugins.Rewards.Base.BasePromotionRewardEffectExtensionRepository`2.Convert(`0)">
      <summary>
            Converts the specified DTO to a specific data object.
            </summary>
      <param name="dto">The dto.</param>
      <returns />
    </member>
    <member name="M:NetSteps.Promotions.Plugins.Rewards.Base.BasePromotionRewardEffectExtensionRepository`2.UpdateEntity(`1,`0)">
      <summary>
            Updates an entity with information in the DTO.
            </summary>
      <param name="entity">The entity.</param>
      <param name="dto">The dto.</param>
    </member>
    <member name="M:NetSteps.Promotions.Plugins.Rewards.Base.BasePromotionRewardEffectExtensionHandler`3.CheckValidity(System.String,NetSteps.Promotions.Common.Model.IPromotionRewardEffect,NetSteps.Promotions.Common.Model.IPromotionState)">
      <requires csharp="rewardEffect != null" vb="rewardEffect &lt;&gt; Nothing">rewardEffect != null</requires>
      <requires csharp="rewardEffect.Extension != null" vb="rewardEffect.Extension &lt;&gt; Nothing">rewardEffect.Extension != null</requires>
      <requires csharp="typeof(T).IsAssignableFrom(rewardEffect.Extension.GetType())" vb="typeof(T).IsAssignableFrom(rewardEffect.Extension.GetType())">typeof(T).IsAssignableFrom(rewardEffect.Extension.GetType())</requires>
    </member>
  </members>
</doc>