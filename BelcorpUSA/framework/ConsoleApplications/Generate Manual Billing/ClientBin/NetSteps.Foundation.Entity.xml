<?xml version="1.0"?>
<doc>
  <assembly>
    <name>NetSteps.Foundation.Entity</name>
  </assembly>
  <members>
    <member name="T:NetSteps.Foundation.Entity.Mocks.MockDbSet`1">
      <summary>
            An in-memory <see cref="T:System.Data.Entity.IDbSet`1" /> for testing.
            </summary>
      <typeparam name="T">The type of entity.</typeparam>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.GetPredicateForModel(`1)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.GetPredicateForModel(`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.UpdateEntity(`0,`1)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.UpdateEntity(`0,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)entity != null" vb="((Object)entity) &lt;&gt; Nothing">(decimal)entity != null</requires>
      <exception cref="T:System.ArgumentNullException">entity == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.UpdateEntity(`0,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.UpdateModel(`1,`0)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.UpdateModel(`1,`0)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.UpdateModel(`1,`0)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)entity != null" vb="((Object)entity) &lt;&gt; Nothing">(decimal)entity != null</requires>
      <exception cref="T:System.ArgumentNullException">entity == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Add(`2,`1)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Add(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Add(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Any(`2)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Any(`2)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Any(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Any(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Any(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Count(`2)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Count(`2)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Count(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Count(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Count(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.First(`2)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.First(`2,System.Object[])">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="keyValues != null" vb="keyValues &lt;&gt; Nothing">keyValues != null</requires>
      <exception cref="T:System.ArgumentNullException">keyValues == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentException" csharp="keyValues.Length &gt; 0" vb="keyValues.Length &gt; 0">keyValues.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keyValues.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.First(`2,`1)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.First(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.FirstOrDefault(`2)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.FirstOrDefault(`2,System.Object[])">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="keyValues != null" vb="keyValues &lt;&gt; Nothing">keyValues != null</requires>
      <exception cref="T:System.ArgumentNullException">keyValues == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentException" csharp="keyValues.Length &gt; 0" vb="keyValues.Length &gt; 0">keyValues.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keyValues.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.FirstOrDefault(`2,`1)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.FirstOrDefault(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Remove(`2,System.Object[])">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Remove(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Remove(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="keyValues != null" vb="keyValues &lt;&gt; Nothing">keyValues != null</requires>
      <exception cref="T:System.ArgumentNullException">keyValues == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Remove(`2,System.Object[])" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentException" csharp="keyValues.Length &gt; 0" vb="keyValues.Length &gt; 0">keyValues.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keyValues.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.RemoveWhere(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.RemoveWhere(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.RemoveWhere(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.ToList(`2)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.ToList(`2)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Update(`2,`1)">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Update(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Update(`2,`1)" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.Where(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Where(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires inheritedFrom="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Where(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" inheritedFromTypeName="IEntityModelRepository" exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.EntityModelRepository`3.CreateModel(`0)">
      <requires exception="T:System.ArgumentNullException" csharp="(object)entity != null" vb="((Object)entity) &lt;&gt; Nothing">(object)entity != null</requires>
      <exception cref="T:System.ArgumentNullException">entity == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.Mocks.MockDbSet`1.#ctor(System.Func{`0,System.Object}[])">
      <requires exception="T:System.ArgumentNullException" csharp="keySelectors != null" vb="keySelectors &lt;&gt; Nothing">keySelectors != null</requires>
      <exception cref="T:System.ArgumentNullException">keySelectors == null</exception>
      <requires exception="T:System.ArgumentException" csharp="keySelectors.Length &gt; 0" vb="keySelectors.Length &gt; 0">keySelectors.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keySelectors.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.Mocks.MockDbSet`1.#ctor(System.Collections.Generic.ICollection{`0},System.Func{`0,System.Object}[])">
      <requires exception="T:System.ArgumentNullException" csharp="data != null" vb="data &lt;&gt; Nothing">data != null</requires>
      <exception cref="T:System.ArgumentNullException">data == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="keySelectors != null" vb="keySelectors &lt;&gt; Nothing">keySelectors != null</requires>
      <exception cref="T:System.ArgumentNullException">keySelectors == null</exception>
      <requires exception="T:System.ArgumentException" csharp="keySelectors.Length &gt; 0" vb="keySelectors.Length &gt; 0">keySelectors.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keySelectors.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.Mocks.MockDbSet`1.GetEnumerator">
      <ensures inheritedFrom="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" inheritedFromTypeName="IEnumerable" csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      <ensures inheritedFrom="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" inheritedFromTypeName="IEnumerable" csharp="result.get_Model == this.get_Model" vb="result.get_Model = Me.get_Model">result.get_Model == this.get_Model</ensures>
    </member>
    <member name="M:NetSteps.Foundation.Entity.Mocks.MockDbSet`1.System#Collections#IEnumerable#GetEnumerator">
      <ensures inheritedFrom="M:System.Collections.IEnumerable.GetEnumerator" inheritedFromTypeName="IEnumerable" csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      <ensures inheritedFrom="M:System.Collections.IEnumerable.GetEnumerator" inheritedFromTypeName="IEnumerable" csharp="result.get_Model == this.get_Model" vb="result.get_Model = Me.get_Model">result.get_Model == this.get_Model</ensures>
      <ensures inheritedFrom="M:System.Collections.IEnumerable.GetEnumerator" inheritedFromTypeName="IEnumerable" csharp="result.get_CurrentIndex == -1" vb="result.get_CurrentIndex = -1">result.get_CurrentIndex == -1</ensures>
    </member>
    <member name="P:NetSteps.Foundation.Entity.Mocks.MockDbSet`1.ElementType">
      <getter>
        <ensures inheritedFrom="M:System.Linq.IQueryable.get_ElementType" inheritedFromTypeName="IQueryable" csharp="result != null" vb="result &lt;&gt; Nothing ">result != null</ensures>
      </getter>
    </member>
    <member name="P:NetSteps.Foundation.Entity.Mocks.MockDbSet`1.Expression">
      <getter>
        <ensures inheritedFrom="M:System.Linq.IQueryable.get_Expression" inheritedFromTypeName="IQueryable" csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="P:NetSteps.Foundation.Entity.Mocks.MockDbSet`1.Provider">
      <getter>
        <ensures inheritedFrom="M:System.Linq.IQueryable.get_Provider" inheritedFromTypeName="IQueryable" csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Add(`2,`1)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Any(`2)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Any(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Count(`2)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Count(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,System.Object[])">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="keyValues != null" vb="keyValues &lt;&gt; Nothing">keyValues != null</requires>
      <exception cref="T:System.ArgumentNullException">keyValues == null</exception>
      <requires exception="T:System.ArgumentException" csharp="keyValues.Length &gt; 0" vb="keyValues.Length &gt; 0">keyValues.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keyValues.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,`1)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.First(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,System.Object[])">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="keyValues != null" vb="keyValues &lt;&gt; Nothing">keyValues != null</requires>
      <exception cref="T:System.ArgumentNullException">keyValues == null</exception>
      <requires exception="T:System.ArgumentException" csharp="keyValues.Length &gt; 0" vb="keyValues.Length &gt; 0">keyValues.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keyValues.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,`1)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.FirstOrDefault(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.GetPredicateForModel(`1)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Remove(`2,System.Object[])">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="keyValues != null" vb="keyValues &lt;&gt; Nothing">keyValues != null</requires>
      <exception cref="T:System.ArgumentNullException">keyValues == null</exception>
      <requires exception="T:System.ArgumentException" csharp="keyValues.Length &gt; 0" vb="keyValues.Length &gt; 0">keyValues.Length &gt; 0</requires>
      <exception cref="T:System.ArgumentException">keyValues.Length &lt;= 0</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.RemoveWhere(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.ToList(`2)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Update(`2,`1)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.UpdateEntity(`0,`1)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)entity != null" vb="((Object)entity) &lt;&gt; Nothing">(decimal)entity != null</requires>
      <exception cref="T:System.ArgumentNullException">entity == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.UpdateModel(`1,`0)">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)model != null" vb="((Object)model) &lt;&gt; Nothing">(decimal)model != null</requires>
      <exception cref="T:System.ArgumentNullException">model == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)entity != null" vb="((Object)entity) &lt;&gt; Nothing">(decimal)entity != null</requires>
      <exception cref="T:System.ArgumentNullException">entity == null</exception>
    </member>
    <member name="M:NetSteps.Foundation.Entity.IEntityModelRepository`3.Where(`2,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <requires exception="T:System.ArgumentNullException" csharp="(decimal)context != null" vb="((Object)context) &lt;&gt; Nothing">(decimal)context != null</requires>
      <exception cref="T:System.ArgumentNullException">context == null</exception>
      <requires exception="T:System.ArgumentNullException" csharp="predicate != null" vb="predicate &lt;&gt; Nothing">predicate != null</requires>
      <exception cref="T:System.ArgumentNullException">predicate == null</exception>
    </member>
  </members>
</doc>