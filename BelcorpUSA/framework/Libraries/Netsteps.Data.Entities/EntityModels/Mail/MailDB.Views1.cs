

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsCAC2CB5F372C7D6318E7BF8FC01887A9CBE746875F9607101DFF7E9C7CACE98C))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsCAC2CB5F372C7D6318E7BF8FC01887A9CBE746875F9607101DFF7E9C7CACE98C : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsCAC2CB5F372C7D6318E7BF8FC01887A9CBE746875F9607101DFF7E9C7CACE98C()
        {
            this.EdmEntityContainerName = "MailEntities";
            this.StoreEntityContainerName = "NSFramework_Mail_TestModelStoreContainer";
            this.HashOverMappingClosure = "3e7bb4a15a8658f933fe72d2c67667b3228fd78bc42bb682686cdd7a0ceea50b";
            this.HashOverAllExtentViews = "8013d7b128b88df99363cfba471358f86ec2ab28e7da8296d8754c6e18a5d8df";
            this.ViewCount = 34;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.AddressTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.AddressTypes", @"
    SELECT VALUE -- Constructing AddressTypes
        [NSFramework_Mail_TestModel.Store.AddressTypes](T1.AddressTypes_AddressTypeID, T1.AddressTypes_Description)
    FROM (
        SELECT 
            T.AddressTypeID AS AddressTypes_AddressTypeID, 
            T.Description AS AddressTypes_Description, 
            True AS _from0
        FROM MailEntities.AddressTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.AddressTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.AddressTypes", @"
    SELECT VALUE -- Constructing AddressTypes
        [NSFramework_Mail_TestModel.AddressType](T1.AddressType_AddressTypeID, T1.AddressType_Description)
    FROM (
        SELECT 
            T.AddressTypeID AS AddressType_AddressTypeID, 
            T.Description AS AddressType_Description, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.AddressTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailAttachments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailAttachments", @"
    SELECT VALUE -- Constructing MailAttachments
        [NSFramework_Mail_TestModel.Store.MailAttachments](T1.MailAttachments_MailAttachmentID, T1.MailAttachments_FileName, T1.MailAttachments_Size)
    FROM (
        SELECT 
            T.MailAttachmentID AS MailAttachments_MailAttachmentID, 
            T.FileName AS MailAttachments_FileName, 
            T.Size AS MailAttachments_Size, 
            True AS _from0
        FROM MailEntities.MailAttachments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailAttachments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailAttachments", @"
    SELECT VALUE -- Constructing MailAttachments
        [NSFramework_Mail_TestModel.MailAttachment](T1.MailAttachment_MailAttachmentID, T1.MailAttachment_FileName, T1.MailAttachment_Size)
    FROM (
        SELECT 
            T.MailAttachmentID AS MailAttachment_MailAttachmentID, 
            T.FileName AS MailAttachment_FileName, 
            T.Size AS MailAttachment_Size, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailAttachments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailFolderTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailFolderTypes", @"
    SELECT VALUE -- Constructing MailFolderTypes
        [NSFramework_Mail_TestModel.Store.MailFolderTypes](T1.MailFolderTypes_MailFolderTypeID, T1.MailFolderTypes_Description)
    FROM (
        SELECT 
            T.MailFolderTypeID AS MailFolderTypes_MailFolderTypeID, 
            T.Description AS MailFolderTypes_Description, 
            True AS _from0
        FROM MailEntities.MailFolderTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailFolderTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailFolderTypes", @"
    SELECT VALUE -- Constructing MailFolderTypes
        [NSFramework_Mail_TestModel.MailFolderType](T1.MailFolderType_MailFolderTypeID, T1.MailFolderType_Description)
    FROM (
        SELECT 
            T.MailFolderTypeID AS MailFolderType_MailFolderTypeID, 
            T.Description AS MailFolderType_Description, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailFolderTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessageAttachments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessageAttachments", @"
    SELECT VALUE -- Constructing MailMessageAttachments
        [NSFramework_Mail_TestModel.Store.MailMessageAttachments](T1.MailMessageAttachments_MailMessageAttachmentID, T1.MailMessageAttachments_MailMessageID, T1.MailMessageAttachments_MailAttachmentID)
    FROM (
        SELECT 
            T.MailMessageAttachmentID AS MailMessageAttachments_MailMessageAttachmentID, 
            T.MailMessageID AS MailMessageAttachments_MailMessageID, 
            T.MailAttachmentID AS MailMessageAttachments_MailAttachmentID, 
            True AS _from0
        FROM MailEntities.MailMessageAttachments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessageAttachments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessageAttachments", @"
    SELECT VALUE -- Constructing MailMessageAttachments
        [NSFramework_Mail_TestModel.MailMessageAttachment](T1.MailMessageAttachment_MailMessageAttachmentID, T1.MailMessageAttachment_MailMessageID, T1.MailMessageAttachment_MailAttachmentID)
    FROM (
        SELECT 
            T.MailMessageAttachmentID AS MailMessageAttachment_MailMessageAttachmentID, 
            T.MailMessageID AS MailMessageAttachment_MailMessageID, 
            T.MailAttachmentID AS MailMessageAttachment_MailAttachmentID, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessageAttachments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessageGroupAddresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessageGroupAddresses", @"
    SELECT VALUE -- Constructing MailMessageGroupAddresses
        [NSFramework_Mail_TestModel.Store.MailMessageGroupAddresses](T1.MailMessageGroupAddresses_MailMessageGroupAddressID, T1.MailMessageGroupAddresses_MailMessageGroupID, T1.MailMessageGroupAddresses_EmailAddress, T1.MailMessageGroupAddresses_NickName, T1.MailMessageGroupAddresses_AddressTypeID, T1.MailMessageGroupAddresses_RecipientTypeID, T1.MailMessageGroupAddresses_RecipientStatusID, T1.MailMessageGroupAddresses_AccountID)
    FROM (
        SELECT 
            T.MailMessageGroupAddressID AS MailMessageGroupAddresses_MailMessageGroupAddressID, 
            T.MailMessageGroupID AS MailMessageGroupAddresses_MailMessageGroupID, 
            T.EmailAddress AS MailMessageGroupAddresses_EmailAddress, 
            T.NickName AS MailMessageGroupAddresses_NickName, 
            T.AddressTypeID AS MailMessageGroupAddresses_AddressTypeID, 
            T.RecipientTypeID AS MailMessageGroupAddresses_RecipientTypeID, 
            T.RecipientStatusID AS MailMessageGroupAddresses_RecipientStatusID, 
            T.AccountID AS MailMessageGroupAddresses_AccountID, 
            True AS _from0
        FROM MailEntities.MailMessageGroupAddresses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessageGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessageGroups", @"
    SELECT VALUE -- Constructing MailMessageGroups
        [NSFramework_Mail_TestModel.Store.MailMessageGroups](T1.MailMessageGroups_MailMessageGroupID, T1.MailMessageGroups_MailMessageID, T1.MailMessageGroups_MessageGroupStatusID, T1.MailMessageGroups_AttemptCount, T1.MailMessageGroups_RetryTimeUTC, T1.MailMessageGroups_IsOriginal, T1.MailMessageGroups_tmpAccountID)
    FROM (
        SELECT 
            T.MailMessageGroupID AS MailMessageGroups_MailMessageGroupID, 
            T.MailMessageID AS MailMessageGroups_MailMessageID, 
            T.MessageGroupStatusID AS MailMessageGroups_MessageGroupStatusID, 
            T.AttemptCount AS MailMessageGroups_AttemptCount, 
            T.RetryTimeUTC AS MailMessageGroups_RetryTimeUTC, 
            T.IsOriginal AS MailMessageGroups_IsOriginal, 
            T.tmpAccountID AS MailMessageGroups_tmpAccountID, 
            True AS _from0
        FROM MailEntities.MailMessageGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessageGroupStatusAudit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessageGroupStatusAudit", @"
    SELECT VALUE -- Constructing MailMessageGroupStatusAudit
        [NSFramework_Mail_TestModel.Store.MailMessageGroupStatusAudit](T1.MailMessageGroupStatusAudit_MailMessageGroupStatusAuditID, T1.MailMessageGroupStatusAudit_MailMessageGroupID, T1.MailMessageGroupStatusAudit_MessageGroupStatusID, T1.MailMessageGroupStatusAudit_AttemptCount, T1.MailMessageGroupStatusAudit_RetryTimeUTC, T1.MailMessageGroupStatusAudit_DateAddedUTC)
    FROM (
        SELECT 
            T.MailMessageGroupStatusAuditID AS MailMessageGroupStatusAudit_MailMessageGroupStatusAuditID, 
            T.MailMessageGroupID AS MailMessageGroupStatusAudit_MailMessageGroupID, 
            T.MessageGroupStatusID AS MailMessageGroupStatusAudit_MessageGroupStatusID, 
            T.AttemptCount AS MailMessageGroupStatusAudit_AttemptCount, 
            T.RetryTimeUTC AS MailMessageGroupStatusAudit_RetryTimeUTC, 
            T.DateAddedUTC AS MailMessageGroupStatusAudit_DateAddedUTC, 
            True AS _from0
        FROM MailEntities.MailMessageGroupStatusAudits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessages", "\r\n    SELECT VALUE -- Constructing MailMessages\r\n        [NSFramework_Mail_TestMo" +
                    "del.Store.MailMessages](T1.MailMessages_MailMessageID, T1.MailMessages_Subject, " +
                    "T1.MailMessages_Body, T1.MailMessages_HTMLBody, T1.MailMessages_DateAddedUTC, T1" +
                    ".MailMessages_FromAddress, T1.MailMessages_FromNickName, T1.MailMessages_MailAcc" +
                    "ountID, T1.MailMessages_IsOutbound, T1.MailMessages_MailMessageTypeID, T1.MailMe" +
                    "ssages_BeenRead, T1.MailMessages_MailMessagePriorityID, T1.MailMessages_VisualTe" +
                    "mplateID, T1.MailMessages_MailFolderTypeID, T1.MailMessages_AttachmentUniqueID, " +
                    "T1.MailMessages_Locked, T1.MailMessages_SiteID, T1.MailMessages_CampaignActionID" +
                    ", T1.MailMessages_EnableEventTracking, T1.MailMessages_ReplyToAddress)\r\n    FROM" +
                    " (\r\n        SELECT \r\n            T.MailMessageID AS MailMessages_MailMessageID, " +
                    "\r\n            T.Subject AS MailMessages_Subject, \r\n            T.Body AS MailMes" +
                    "sages_Body, \r\n            T.HTMLBody AS MailMessages_HTMLBody, \r\n            T.D" +
                    "ateAddedUTC AS MailMessages_DateAddedUTC, \r\n            T.FromAddress AS MailMes" +
                    "sages_FromAddress, \r\n            T.FromNickName AS MailMessages_FromNickName, \r\n" +
                    "            T.MailAccountID AS MailMessages_MailAccountID, \r\n            T.IsOut" +
                    "bound AS MailMessages_IsOutbound, \r\n            T.MailMessageTypeID AS MailMessa" +
                    "ges_MailMessageTypeID, \r\n            T.BeenRead AS MailMessages_BeenRead, \r\n    " +
                    "        T.MailMessagePriorityID AS MailMessages_MailMessagePriorityID, \r\n       " +
                    "     T.VisualTemplateID AS MailMessages_VisualTemplateID, \r\n            T.MailFo" +
                    "lderTypeID AS MailMessages_MailFolderTypeID, \r\n            T.AttachmentUniqueID " +
                    "AS MailMessages_AttachmentUniqueID, \r\n            T.Locked AS MailMessages_Locke" +
                    "d, \r\n            T.SiteID AS MailMessages_SiteID, \r\n            T.CampaignAction" +
                    "ID AS MailMessages_CampaignActionID, \r\n            T.EnableEventTracking AS Mail" +
                    "Messages_EnableEventTracking, \r\n            T.ReplyToAddress AS MailMessages_Rep" +
                    "lyToAddress, \r\n            True AS _from0\r\n        FROM MailEntities.MailMessage" +
                    "s AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessageRecipientEvents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessageRecipientEvents", @"
    SELECT VALUE -- Constructing MailMessageRecipientEvents
        [NSFramework_Mail_TestModel.Store.MailMessageRecipientEvents](T1.MailMessageRecipientEvents_MailMessageRecipientEventID, T1.MailMessageRecipientEvents_MailMessageGroupAddressID, T1.MailMessageRecipientEvents_MailMessageRecipientEventTypeID, T1.MailMessageRecipientEvents_DateCreatedUTC, T1.MailMessageRecipientEvents_Text, T1.MailMessageRecipientEvents_Url)
    FROM (
        SELECT 
            T.MailMessageRecipientEventID AS MailMessageRecipientEvents_MailMessageRecipientEventID, 
            T.MailMessageGroupAddressID AS MailMessageRecipientEvents_MailMessageGroupAddressID, 
            T.MailMessageRecipientEventTypeID AS MailMessageRecipientEvents_MailMessageRecipientEventTypeID, 
            T.DateCreatedUTC AS MailMessageRecipientEvents_DateCreatedUTC, 
            T.Text AS MailMessageRecipientEvents_Text, 
            T.Url AS MailMessageRecipientEvents_Url, 
            True AS _from0
        FROM MailEntities.MailMessageRecipientEvents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessageRecipientEventTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessageRecipientEventTypes", @"
    SELECT VALUE -- Constructing MailMessageRecipientEventTypes
        [NSFramework_Mail_TestModel.Store.MailMessageRecipientEventTypes](T1.MailMessageRecipientEventTypes_MailMessageRecipientEventTypeID, T1.MailMessageRecipientEventTypes_Name, T1.MailMessageRecipientEventTypes_TermName, T1.MailMessageRecipientEventTypes_Description, T1.MailMessageRecipientEventTypes_Active)
    FROM (
        SELECT 
            T.MailMessageRecipientEventTypeID AS MailMessageRecipientEventTypes_MailMessageRecipientEventTypeID, 
            T.Name AS MailMessageRecipientEventTypes_Name, 
            T.TermName AS MailMessageRecipientEventTypes_TermName, 
            T.Description AS MailMessageRecipientEventTypes_Description, 
            T.Active AS MailMessageRecipientEventTypes_Active, 
            True AS _from0
        FROM MailEntities.MailMessageRecipientEventTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessageGroupAddresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessageGroupAddresses", @"
    SELECT VALUE -- Constructing MailMessageGroupAddresses
        [NSFramework_Mail_TestModel.MailMessageGroupAddress](T1.MailMessageGroupAddress_MailMessageGroupAddressID, T1.MailMessageGroupAddress_MailMessageGroupID, T1.MailMessageGroupAddress_EmailAddress, T1.MailMessageGroupAddress_NickName, T1.MailMessageGroupAddress_AddressTypeID, T1.MailMessageGroupAddress_RecipientTypeID, T1.MailMessageGroupAddress_RecipientStatusID, T1.MailMessageGroupAddress_AccountID)
    FROM (
        SELECT 
            T.MailMessageGroupAddressID AS MailMessageGroupAddress_MailMessageGroupAddressID, 
            T.MailMessageGroupID AS MailMessageGroupAddress_MailMessageGroupID, 
            T.EmailAddress AS MailMessageGroupAddress_EmailAddress, 
            T.NickName AS MailMessageGroupAddress_NickName, 
            T.AddressTypeID AS MailMessageGroupAddress_AddressTypeID, 
            T.RecipientTypeID AS MailMessageGroupAddress_RecipientTypeID, 
            T.RecipientStatusID AS MailMessageGroupAddress_RecipientStatusID, 
            T.AccountID AS MailMessageGroupAddress_AccountID, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessageGroupAddresses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessageGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessageGroups", @"
    SELECT VALUE -- Constructing MailMessageGroups
        [NSFramework_Mail_TestModel.MailMessageGroup](T1.MailMessageGroup_MailMessageGroupID, T1.MailMessageGroup_MailMessageID, T1.MailMessageGroup_MessageGroupStatusID, T1.MailMessageGroup_AttemptCount, T1.MailMessageGroup_IsOriginal, T1.MailMessageGroup_tmpAccountID, T1.MailMessageGroup_RetryTimeUTC)
    FROM (
        SELECT 
            T.MailMessageGroupID AS MailMessageGroup_MailMessageGroupID, 
            T.MailMessageID AS MailMessageGroup_MailMessageID, 
            T.MessageGroupStatusID AS MailMessageGroup_MessageGroupStatusID, 
            T.AttemptCount AS MailMessageGroup_AttemptCount, 
            T.IsOriginal AS MailMessageGroup_IsOriginal, 
            T.tmpAccountID AS MailMessageGroup_tmpAccountID, 
            T.RetryTimeUTC AS MailMessageGroup_RetryTimeUTC, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessageGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessageGroupStatusAudits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessageGroupStatusAudits", @"
    SELECT VALUE -- Constructing MailMessageGroupStatusAudits
        [NSFramework_Mail_TestModel.MailMessageGroupStatusAudit](T1.MailMessageGroupStatusAudit_MailMessageGroupStatusAuditID, T1.MailMessageGroupStatusAudit_MailMessageGroupID, T1.MailMessageGroupStatusAudit_MessageGroupStatusID, T1.MailMessageGroupStatusAudit_AttemptCount, T1.MailMessageGroupStatusAudit_RetryTimeUTC, T1.MailMessageGroupStatusAudit_DateAddedUTC)
    FROM (
        SELECT 
            T.MailMessageGroupStatusAuditID AS MailMessageGroupStatusAudit_MailMessageGroupStatusAuditID, 
            T.MailMessageGroupID AS MailMessageGroupStatusAudit_MailMessageGroupID, 
            T.MessageGroupStatusID AS MailMessageGroupStatusAudit_MessageGroupStatusID, 
            T.AttemptCount AS MailMessageGroupStatusAudit_AttemptCount, 
            T.RetryTimeUTC AS MailMessageGroupStatusAudit_RetryTimeUTC, 
            T.DateAddedUTC AS MailMessageGroupStatusAudit_DateAddedUTC, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessageGroupStatusAudit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessages", "\r\n    SELECT VALUE -- Constructing MailMessages\r\n        [NSFramework_Mail_TestMo" +
                    "del.MailMessage](T1.MailMessage_MailMessageID, T1.MailMessage_Subject, T1.MailMe" +
                    "ssage_Body, T1.MailMessage_HTMLBody, T1.MailMessage_FromAddress, T1.MailMessage_" +
                    "FromNickName, T1.MailMessage_MailAccountID, T1.MailMessage_IsOutbound, T1.MailMe" +
                    "ssage_MailMessageTypeID, T1.MailMessage_BeenRead, T1.MailMessage_MailMessagePrio" +
                    "rityID, T1.MailMessage_VisualTemplateID, T1.MailMessage_MailFolderTypeID, T1.Mai" +
                    "lMessage_AttachmentUniqueID, T1.MailMessage_Locked, T1.MailMessage_SiteID, T1.Ma" +
                    "ilMessage_DateAddedUTC, T1.MailMessage_CampaignActionID, T1.MailMessage_EnableEv" +
                    "entTracking, T1.MailMessage_ReplyToAddress)\r\n    FROM (\r\n        SELECT \r\n      " +
                    "      T.MailMessageID AS MailMessage_MailMessageID, \r\n            T.Subject AS M" +
                    "ailMessage_Subject, \r\n            T.Body AS MailMessage_Body, \r\n            T.HT" +
                    "MLBody AS MailMessage_HTMLBody, \r\n            T.FromAddress AS MailMessage_FromA" +
                    "ddress, \r\n            T.FromNickName AS MailMessage_FromNickName, \r\n            " +
                    "T.MailAccountID AS MailMessage_MailAccountID, \r\n            T.IsOutbound AS Mail" +
                    "Message_IsOutbound, \r\n            T.MailMessageTypeID AS MailMessage_MailMessage" +
                    "TypeID, \r\n            T.BeenRead AS MailMessage_BeenRead, \r\n            T.MailMe" +
                    "ssagePriorityID AS MailMessage_MailMessagePriorityID, \r\n            T.VisualTemp" +
                    "lateID AS MailMessage_VisualTemplateID, \r\n            T.MailFolderTypeID AS Mail" +
                    "Message_MailFolderTypeID, \r\n            T.AttachmentUniqueID AS MailMessage_Atta" +
                    "chmentUniqueID, \r\n            T.Locked AS MailMessage_Locked, \r\n            T.Si" +
                    "teID AS MailMessage_SiteID, \r\n            T.DateAddedUTC AS MailMessage_DateAdde" +
                    "dUTC, \r\n            T.CampaignActionID AS MailMessage_CampaignActionID, \r\n      " +
                    "      T.EnableEventTracking AS MailMessage_EnableEventTracking, \r\n            T." +
                    "ReplyToAddress AS MailMessage_ReplyToAddress, \r\n            True AS _from0\r\n    " +
                    "    FROM NSFramework_Mail_TestModelStoreContainer.MailMessages AS T\r\n    ) AS T1" +
                    "");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessageRecipientEvents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessageRecipientEvents", @"
    SELECT VALUE -- Constructing MailMessageRecipientEvents
        [NSFramework_Mail_TestModel.MailMessageRecipientEvent](T1.MailMessageRecipientEvent_MailMessageRecipientEventID, T1.MailMessageRecipientEvent_MailMessageGroupAddressID, T1.MailMessageRecipientEvent_MailMessageRecipientEventTypeID, T1.MailMessageRecipientEvent_DateCreatedUTC, T1.MailMessageRecipientEvent_Text, T1.MailMessageRecipientEvent_Url)
    FROM (
        SELECT 
            T.MailMessageRecipientEventID AS MailMessageRecipientEvent_MailMessageRecipientEventID, 
            T.MailMessageGroupAddressID AS MailMessageRecipientEvent_MailMessageGroupAddressID, 
            T.MailMessageRecipientEventTypeID AS MailMessageRecipientEvent_MailMessageRecipientEventTypeID, 
            T.DateCreatedUTC AS MailMessageRecipientEvent_DateCreatedUTC, 
            T.Text AS MailMessageRecipientEvent_Text, 
            T.Url AS MailMessageRecipientEvent_Url, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessageRecipientEvents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessageRecipientEventTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessageRecipientEventTypes", @"
    SELECT VALUE -- Constructing MailMessageRecipientEventTypes
        [NSFramework_Mail_TestModel.MailMessageRecipientEventType](T1.MailMessageRecipientEventType_MailMessageRecipientEventTypeID, T1.MailMessageRecipientEventType_Name, T1.MailMessageRecipientEventType_TermName, T1.MailMessageRecipientEventType_Description, T1.MailMessageRecipientEventType_Active)
    FROM (
        SELECT 
            T.MailMessageRecipientEventTypeID AS MailMessageRecipientEventType_MailMessageRecipientEventTypeID, 
            T.Name AS MailMessageRecipientEventType_Name, 
            T.TermName AS MailMessageRecipientEventType_TermName, 
            T.Description AS MailMessageRecipientEventType_Description, 
            T.Active AS MailMessageRecipientEventType_Active, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessageRecipientEventTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessagePriority
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessagePriority", @"
    SELECT VALUE -- Constructing MailMessagePriority
        [NSFramework_Mail_TestModel.Store.MailMessagePriority](T1.MailMessagePriority_MailMessagePriorityID, T1.MailMessagePriority_Description)
    FROM (
        SELECT 
            T.MailMessagePriorityID AS MailMessagePriority_MailMessagePriorityID, 
            T.Description AS MailMessagePriority_Description, 
            True AS _from0
        FROM MailEntities.MailMessagePriorities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessagePriorities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessagePriorities", @"
    SELECT VALUE -- Constructing MailMessagePriorities
        [NSFramework_Mail_TestModel.MailMessagePriority](T1.MailMessagePriority_MailMessagePriorityID, T1.MailMessagePriority_Description)
    FROM (
        SELECT 
            T.MailMessagePriorityID AS MailMessagePriority_MailMessagePriorityID, 
            T.Description AS MailMessagePriority_Description, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessagePriority AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MailMessageTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MailMessageTypes", @"
    SELECT VALUE -- Constructing MailMessageTypes
        [NSFramework_Mail_TestModel.Store.MailMessageTypes](T1.MailMessageTypes_MailMessageTypeID, T1.MailMessageTypes_Description)
    FROM (
        SELECT 
            T.MailMessageTypeID AS MailMessageTypes_MailMessageTypeID, 
            T.Description AS MailMessageTypes_Description, 
            True AS _from0
        FROM MailEntities.MailMessageTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MailMessageTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MailMessageTypes", @"
    SELECT VALUE -- Constructing MailMessageTypes
        [NSFramework_Mail_TestModel.MailMessageType](T1.MailMessageType_MailMessageTypeID, T1.MailMessageType_Description)
    FROM (
        SELECT 
            T.MailMessageTypeID AS MailMessageType_MailMessageTypeID, 
            T.Description AS MailMessageType_Description, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MailMessageTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.MessageGroupStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.MessageGroupStatus", @"
    SELECT VALUE -- Constructing MessageGroupStatus
        [NSFramework_Mail_TestModel.Store.MessageGroupStatus](T1.MessageGroupStatus_MessageGroupStatusID, T1.MessageGroupStatus_Description)
    FROM (
        SELECT 
            T.MessageGroupStatusID AS MessageGroupStatus_MessageGroupStatusID, 
            T.Description AS MessageGroupStatus_Description, 
            True AS _from0
        FROM MailEntities.MessageGroupStatus1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.MessageGroupStatus1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.MessageGroupStatus1", @"
    SELECT VALUE -- Constructing MessageGroupStatus1
        [NSFramework_Mail_TestModel.MessageGroupStatus](T1.MessageGroupStatus_MessageGroupStatusID, T1.MessageGroupStatus_Description)
    FROM (
        SELECT 
            T.MessageGroupStatusID AS MessageGroupStatus_MessageGroupStatusID, 
            T.Description AS MessageGroupStatus_Description, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.MessageGroupStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.RecipientStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.RecipientStatus", @"
    SELECT VALUE -- Constructing RecipientStatus
        [NSFramework_Mail_TestModel.Store.RecipientStatus](T1.RecipientStatus_RecipientStatusID, T1.RecipientStatus_Description)
    FROM (
        SELECT 
            T.RecipientStatusID AS RecipientStatus_RecipientStatusID, 
            T.Description AS RecipientStatus_Description, 
            True AS _from0
        FROM MailEntities.RecipientStatus1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.RecipientStatus1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.RecipientStatus1", @"
    SELECT VALUE -- Constructing RecipientStatus1
        [NSFramework_Mail_TestModel.RecipientStatus](T1.RecipientStatus_RecipientStatusID, T1.RecipientStatus_Description)
    FROM (
        SELECT 
            T.RecipientStatusID AS RecipientStatus_RecipientStatusID, 
            T.Description AS RecipientStatus_Description, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.RecipientStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.RecipientTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.RecipientTypes", @"
    SELECT VALUE -- Constructing RecipientTypes
        [NSFramework_Mail_TestModel.Store.RecipientTypes](T1.RecipientTypes_RecipientTypeID, T1.RecipientTypes_Description)
    FROM (
        SELECT 
            T.RecipientTypeID AS RecipientTypes_RecipientTypeID, 
            T.Description AS RecipientTypes_Description, 
            True AS _from0
        FROM MailEntities.RecipientTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.RecipientTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.RecipientTypes", @"
    SELECT VALUE -- Constructing RecipientTypes
        [NSFramework_Mail_TestModel.RecipientType](T1.RecipientType_RecipientTypeID, T1.RecipientType_Description)
    FROM (
        SELECT 
            T.RecipientTypeID AS RecipientType_RecipientTypeID, 
            T.Description AS RecipientType_Description, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.RecipientTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.SitesAccounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3348);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SitesAccounts\r\n        [NSFramework_Mail_Test");
            viewString.Append("Model.Store.SitesAccounts](T1.SitesAccounts_AccountID, T1.SitesAccounts_AccountN");
            viewString.Append("umber, T1.SitesAccounts_AccountTypeID, T1.SitesAccounts_AccountStatusID, T1.Site");
            viewString.Append("sAccounts_PreferedContactMethodID, T1.SitesAccounts_DefaultLanguageID, T1.SitesA");
            viewString.Append("ccounts_UserID, T1.SitesAccounts_FirstName, T1.SitesAccounts_MiddleName, T1.Site");
            viewString.Append("sAccounts_LastName, T1.SitesAccounts_NickName, T1.SitesAccounts_CoApplicant, T1.");
            viewString.Append("SitesAccounts_EmailAddress, T1.SitesAccounts_SponsorID, T1.SitesAccounts_Enrolle");
            viewString.Append("rID, T1.SitesAccounts_EnrollmentDateUTC, T1.SitesAccounts_IsTaxExempt, T1.SitesA");
            viewString.Append("ccounts_TaxNumber, T1.SitesAccounts_IsEntity, T1.SitesAccounts_EntityName, T1.Si");
            viewString.Append("tesAccounts_AccountStatusChangeReasonID, T1.SitesAccounts_LastRenewalUTC, T1.Sit");
            viewString.Append("esAccounts_NextRenewalUTC, T1.SitesAccounts_ReceivedApplication, T1.SitesAccount");
            viewString.Append("s_IsTaxExemptVerified, T1.SitesAccounts_DateApplicationReceivedUTC, T1.SitesAcco");
            viewString.Append("unts_BirthdayUTC, T1.SitesAccounts_GenderID, T1.SitesAccounts_DataVersion, T1.Si");
            viewString.Append("tesAccounts_ModifiedByUserID, T1.SitesAccounts_DateCreatedUTC, T1.SitesAccounts_");
            viewString.Append("CreatedByUserID, T1.SitesAccounts_AccountSourceID)\r\n    FROM (\r\n        SELECT \r");
            viewString.Append("\n            T.AccountID AS SitesAccounts_AccountID, \r\n            T.AccountNumb");
            viewString.Append("er AS SitesAccounts_AccountNumber, \r\n            T.AccountTypeID AS SitesAccount");
            viewString.Append("s_AccountTypeID, \r\n            T.AccountStatusID AS SitesAccounts_AccountStatusI");
            viewString.Append("D, \r\n            T.PreferedContactMethodID AS SitesAccounts_PreferedContactMetho");
            viewString.Append("dID, \r\n            T.DefaultLanguageID AS SitesAccounts_DefaultLanguageID, \r\n   ");
            viewString.Append("         T.UserID AS SitesAccounts_UserID, \r\n            T.FirstName AS SitesAcc");
            viewString.Append("ounts_FirstName, \r\n            T.MiddleName AS SitesAccounts_MiddleName, \r\n     ");
            viewString.Append("       T.LastName AS SitesAccounts_LastName, \r\n            T.NickName AS SitesAc");
            viewString.Append("counts_NickName, \r\n            T.CoApplicant AS SitesAccounts_CoApplicant, \r\n   ");
            viewString.Append("         T.EmailAddress AS SitesAccounts_EmailAddress, \r\n            T.SponsorID");
            viewString.Append(" AS SitesAccounts_SponsorID, \r\n            T.EnrollerID AS SitesAccounts_Enrolle");
            viewString.Append("rID, \r\n            T.EnrollmentDateUTC AS SitesAccounts_EnrollmentDateUTC, \r\n   ");
            viewString.Append("         T.IsTaxExempt AS SitesAccounts_IsTaxExempt, \r\n            T.TaxNumber A");
            viewString.Append("S SitesAccounts_TaxNumber, \r\n            T.IsEntity AS SitesAccounts_IsEntity, \r");
            viewString.Append("\n            T.EntityName AS SitesAccounts_EntityName, \r\n            T.AccountSt");
            viewString.Append("atusChangeReasonID AS SitesAccounts_AccountStatusChangeReasonID, \r\n            T");
            viewString.Append(".LastRenewalUTC AS SitesAccounts_LastRenewalUTC, \r\n            T.NextRenewalUTC ");
            viewString.Append("AS SitesAccounts_NextRenewalUTC, \r\n            T.ReceivedApplication AS SitesAcc");
            viewString.Append("ounts_ReceivedApplication, \r\n            T.IsTaxExemptVerified AS SitesAccounts_");
            viewString.Append("IsTaxExemptVerified, \r\n            T.DateApplicationReceivedUTC AS SitesAccounts");
            viewString.Append("_DateApplicationReceivedUTC, \r\n            T.BirthdayUTC AS SitesAccounts_Birthd");
            viewString.Append("ayUTC, \r\n            T.GenderID AS SitesAccounts_GenderID, \r\n            T.DataV");
            viewString.Append("ersion AS SitesAccounts_DataVersion, \r\n            T.ModifiedByUserID AS SitesAc");
            viewString.Append("counts_ModifiedByUserID, \r\n            T.DateCreatedUTC AS SitesAccounts_DateCre");
            viewString.Append("atedUTC, \r\n            T.CreatedByUserID AS SitesAccounts_CreatedByUserID, \r\n   ");
            viewString.Append("         T.AccountSourceID AS SitesAccounts_AccountSourceID, \r\n            True ");
            viewString.Append("AS _from0\r\n        FROM MailEntities.SitesAccounts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.SitesAccounts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for MailEntities.SitesAccounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3303);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SitesAccounts\r\n        [NSFramework_Mail_Test");
            viewString.Append("Model.SitesAccount](T1.SitesAccount_AccountID, T1.SitesAccount_AccountNumber, T1");
            viewString.Append(".SitesAccount_AccountTypeID, T1.SitesAccount_AccountStatusID, T1.SitesAccount_Pr");
            viewString.Append("eferedContactMethodID, T1.SitesAccount_DefaultLanguageID, T1.SitesAccount_UserID");
            viewString.Append(", T1.SitesAccount_FirstName, T1.SitesAccount_MiddleName, T1.SitesAccount_LastNam");
            viewString.Append("e, T1.SitesAccount_NickName, T1.SitesAccount_CoApplicant, T1.SitesAccount_EmailA");
            viewString.Append("ddress, T1.SitesAccount_SponsorID, T1.SitesAccount_EnrollerID, T1.SitesAccount_E");
            viewString.Append("nrollmentDateUTC, T1.SitesAccount_IsTaxExempt, T1.SitesAccount_TaxNumber, T1.Sit");
            viewString.Append("esAccount_IsEntity, T1.SitesAccount_EntityName, T1.SitesAccount_AccountStatusCha");
            viewString.Append("ngeReasonID, T1.SitesAccount_LastRenewalUTC, T1.SitesAccount_NextRenewalUTC, T1.");
            viewString.Append("SitesAccount_ReceivedApplication, T1.SitesAccount_IsTaxExemptVerified, T1.SitesA");
            viewString.Append("ccount_DateApplicationReceivedUTC, T1.SitesAccount_BirthdayUTC, T1.SitesAccount_");
            viewString.Append("GenderID, T1.SitesAccount_DataVersion, T1.SitesAccount_ModifiedByUserID, T1.Site");
            viewString.Append("sAccount_DateCreatedUTC, T1.SitesAccount_CreatedByUserID, T1.SitesAccount_Accoun");
            viewString.Append("tSourceID)\r\n    FROM (\r\n        SELECT \r\n            T.AccountID AS SitesAccount");
            viewString.Append("_AccountID, \r\n            T.AccountNumber AS SitesAccount_AccountNumber, \r\n     ");
            viewString.Append("       T.AccountTypeID AS SitesAccount_AccountTypeID, \r\n            T.AccountSta");
            viewString.Append("tusID AS SitesAccount_AccountStatusID, \r\n            T.PreferedContactMethodID A");
            viewString.Append("S SitesAccount_PreferedContactMethodID, \r\n            T.DefaultLanguageID AS Sit");
            viewString.Append("esAccount_DefaultLanguageID, \r\n            T.UserID AS SitesAccount_UserID, \r\n  ");
            viewString.Append("          T.FirstName AS SitesAccount_FirstName, \r\n            T.MiddleName AS S");
            viewString.Append("itesAccount_MiddleName, \r\n            T.LastName AS SitesAccount_LastName, \r\n   ");
            viewString.Append("         T.NickName AS SitesAccount_NickName, \r\n            T.CoApplicant AS Sit");
            viewString.Append("esAccount_CoApplicant, \r\n            T.EmailAddress AS SitesAccount_EmailAddress");
            viewString.Append(", \r\n            T.SponsorID AS SitesAccount_SponsorID, \r\n            T.EnrollerI");
            viewString.Append("D AS SitesAccount_EnrollerID, \r\n            T.EnrollmentDateUTC AS SitesAccount_");
            viewString.Append("EnrollmentDateUTC, \r\n            T.IsTaxExempt AS SitesAccount_IsTaxExempt, \r\n  ");
            viewString.Append("          T.TaxNumber AS SitesAccount_TaxNumber, \r\n            T.IsEntity AS Sit");
            viewString.Append("esAccount_IsEntity, \r\n            T.EntityName AS SitesAccount_EntityName, \r\n   ");
            viewString.Append("         T.AccountStatusChangeReasonID AS SitesAccount_AccountStatusChangeReason");
            viewString.Append("ID, \r\n            T.LastRenewalUTC AS SitesAccount_LastRenewalUTC, \r\n           ");
            viewString.Append(" T.NextRenewalUTC AS SitesAccount_NextRenewalUTC, \r\n            T.ReceivedApplic");
            viewString.Append("ation AS SitesAccount_ReceivedApplication, \r\n            T.IsTaxExemptVerified A");
            viewString.Append("S SitesAccount_IsTaxExemptVerified, \r\n            T.DateApplicationReceivedUTC A");
            viewString.Append("S SitesAccount_DateApplicationReceivedUTC, \r\n            T.BirthdayUTC AS SitesA");
            viewString.Append("ccount_BirthdayUTC, \r\n            T.GenderID AS SitesAccount_GenderID, \r\n       ");
            viewString.Append("     T.DataVersion AS SitesAccount_DataVersion, \r\n            T.ModifiedByUserID");
            viewString.Append(" AS SitesAccount_ModifiedByUserID, \r\n            T.DateCreatedUTC AS SitesAccoun");
            viewString.Append("t_DateCreatedUTC, \r\n            T.CreatedByUserID AS SitesAccount_CreatedByUserI");
            viewString.Append("D, \r\n            T.AccountSourceID AS SitesAccount_AccountSourceID, \r\n          ");
            viewString.Append("  True AS _from0\r\n        FROM NSFramework_Mail_TestModelStoreContainer.SitesAcc");
            viewString.Append("ounts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.SitesAccounts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for NSFramework_Mail_TestModelStoreContainer.SitesCampaignSubscribers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NSFramework_Mail_TestModelStoreContainer.SitesCampaignSubscribers", @"
    SELECT VALUE -- Constructing SitesCampaignSubscribers
        [NSFramework_Mail_TestModel.Store.SitesCampaignSubscribers](T1.SitesCampaignSubscribers_CampaignSubscriberID, T1.SitesCampaignSubscribers_CampaignID, T1.SitesCampaignSubscribers_AddedByAccountID, T1.SitesCampaignSubscribers_AccountID, T1.SitesCampaignSubscribers_DateAddedUTC)
    FROM (
        SELECT 
            T.CampaignSubscriberID AS SitesCampaignSubscribers_CampaignSubscriberID, 
            T.CampaignID AS SitesCampaignSubscribers_CampaignID, 
            T.AddedByAccountID AS SitesCampaignSubscribers_AddedByAccountID, 
            T.AccountID AS SitesCampaignSubscribers_AccountID, 
            T.DateAddedUTC AS SitesCampaignSubscribers_DateAddedUTC, 
            True AS _from0
        FROM MailEntities.SitesCampaignSubscribers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MailEntities.SitesCampaignSubscribers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MailEntities.SitesCampaignSubscribers", @"
    SELECT VALUE -- Constructing SitesCampaignSubscribers
        [NSFramework_Mail_TestModel.SitesCampaignSubscriber](T1.SitesCampaignSubscriber_CampaignSubscriberID, T1.SitesCampaignSubscriber_CampaignID, T1.SitesCampaignSubscriber_AddedByAccountID, T1.SitesCampaignSubscriber_AccountID, T1.SitesCampaignSubscriber_DateAddedUTC)
    FROM (
        SELECT 
            T.CampaignSubscriberID AS SitesCampaignSubscriber_CampaignSubscriberID, 
            T.CampaignID AS SitesCampaignSubscriber_CampaignID, 
            T.AddedByAccountID AS SitesCampaignSubscriber_AddedByAccountID, 
            T.AccountID AS SitesCampaignSubscriber_AccountID, 
            T.DateAddedUTC AS SitesCampaignSubscriber_DateAddedUTC, 
            True AS _from0
        FROM NSFramework_Mail_TestModelStoreContainer.SitesCampaignSubscribers AS T
    ) AS T1");
        }
    }
}


