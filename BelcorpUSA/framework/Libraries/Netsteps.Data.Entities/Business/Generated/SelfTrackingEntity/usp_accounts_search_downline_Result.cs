//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace NetSteps.Data.Entities
{
    
    [Serializable]
    public partial class usp_accounts_search_downline_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
    	public int AccountID
    	{
    		get { return _accountID; }
    		set
    		{
    			if (_accountID != value)
    			{
    				OnComplexPropertyChanging();
    				_accountID = value;
    				OnPropertyChanged("AccountID");
    			}
    		}
    	}
    	private int _accountID;
    
    	public string AccountNumber
    	{
    		get { return _accountNumber; }
    		set
    		{
    			if (_accountNumber != value)
    			{
    				OnComplexPropertyChanging();
    				_accountNumber = value;
    				OnPropertyChanged("AccountNumber");
    			}
    		}
    	}
    	private string _accountNumber;
    
    	public Nullable<int> SponsorID
    	{
    		get { return _sponsorID; }
    		set
    		{
    			if (_sponsorID != value)
    			{
    				OnComplexPropertyChanging();
    				_sponsorID = value;
    				OnPropertyChanged("SponsorID");
    			}
    		}
    	}
    	private Nullable<int> _sponsorID;
    
    	public short AccountTypeID
    	{
    		get { return _accountTypeID; }
    		set
    		{
    			if (_accountTypeID != value)
    			{
    				OnComplexPropertyChanging();
    				_accountTypeID = value;
    				OnPropertyChanged("AccountTypeID");
    			}
    		}
    	}
    	private short _accountTypeID;
    
    	public string FirstName
    	{
    		get { return _firstName; }
    		set
    		{
    			if (_firstName != value)
    			{
    				OnComplexPropertyChanging();
    				_firstName = value;
    				OnPropertyChanged("FirstName");
    			}
    		}
    	}
    	private string _firstName;
    
    	public string LastName
    	{
    		get { return _lastName; }
    		set
    		{
    			if (_lastName != value)
    			{
    				OnComplexPropertyChanging();
    				_lastName = value;
    				OnPropertyChanged("LastName");
    			}
    		}
    	}
    	private string _lastName;

        #endregion
        #region ChangeTracking
    
    	private void OnComplexPropertyChanging()
    	{
    		if (_complexPropertyChanging != null)
    		{
    			_complexPropertyChanging(this, new EventArgs());
    		}
    	}
    
    	event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
    	private event EventHandler _complexPropertyChanging;
    
    	private void OnPropertyChanged(String propertyName)
    	{
    		if (_propertyChanged != null)
    		{
    			_propertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		}
    	}
    
    	event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
    	private event PropertyChangedEventHandler _propertyChanged;
    
    	public static void RecordComplexOriginalValues(String parentPropertyName, usp_accounts_search_downline_Result complexObject, ObjectChangeTracker changeTracker)
    	{
    		if (String.IsNullOrEmpty(parentPropertyName))
    		{
    			throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
    		}
    
    		if (changeTracker == null)
    		{
    			throw new ArgumentNullException("changeTracker");
    		}
    		changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AccountID", parentPropertyName), complexObject == null ? null : (object)complexObject.AccountID);
    		changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AccountNumber", parentPropertyName), complexObject == null ? null : (object)complexObject.AccountNumber);
    		changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.SponsorID", parentPropertyName), complexObject == null ? null : (object)complexObject.SponsorID);
    		changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AccountTypeID", parentPropertyName), complexObject == null ? null : (object)complexObject.AccountTypeID);
    		changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FirstName", parentPropertyName), complexObject == null ? null : (object)complexObject.FirstName);
    		changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.LastName", parentPropertyName), complexObject == null ? null : (object)complexObject.LastName);
    	}

        #endregion
    }
}
