 
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Diagnostics.Contracts;
using System.Linq;
using NetSteps.Encore.Core.IoC;

namespace NetSteps.Data.Entities
{
	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccount), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Account : NetSteps.Accounts.Common.Models.IAccount
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccount.Account2
		{
			get { return Account2; }
			set { Account2 = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountListValue NetSteps.Accounts.Common.Models.IAccount.AccountListValue
		{
			get { return AccountListValue; }
			set { AccountListValue = (AccountListValue)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountSource NetSteps.Accounts.Common.Models.IAccount.AccountSource
		{
			get { return AccountSource; }
			set { AccountSource = (AccountSource)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountStatus NetSteps.Accounts.Common.Models.IAccount.AccountStatus
		{
			get { return AccountStatus; }
			set { AccountStatus = (AccountStatus)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountStatusChangeReason NetSteps.Accounts.Common.Models.IAccount.AccountStatusChangeReason
		{
			get { return AccountStatusChangeReason; }
			set { AccountStatusChangeReason = (AccountStatusChangeReason)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountType NetSteps.Accounts.Common.Models.IAccount.AccountType
		{
			get { return AccountType; }
			set { AccountType = (AccountType)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccount.CreatedByUser
		{
			get { return CreatedByUser; }
			set { CreatedByUser = (User)value; }
		}

		NetSteps.Accounts.Common.Models.IGender NetSteps.Accounts.Common.Models.IAccount.Gender
		{
			get { return Gender; }
			set { Gender = (Gender)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccount.ModifiedByUser
		{
			get { return ModifiedByUser; }
			set { ModifiedByUser = (User)value; }
		}

		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccount.Sponsor
		{
			get { return Sponsor; }
			set { Sponsor = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccount.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountContactTag> NetSteps.Accounts.Common.Models.IAccount.AccountContactTags
		{
			get { return AccountContactTags.Cast<NetSteps.Accounts.Common.Models.IAccountContactTag>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountContactTag(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags.Add((AccountContactTag)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountContactTag(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags.Remove((AccountContactTag)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountLanguage> NetSteps.Accounts.Common.Models.IAccount.AccountLanguages
		{
			get { return AccountLanguages.Cast<NetSteps.Accounts.Common.Models.IAccountLanguage>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountLanguage(NetSteps.Accounts.Common.Models.IAccountLanguage item)
		{
			AccountLanguages.Add((AccountLanguage)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountLanguage(NetSteps.Accounts.Common.Models.IAccountLanguage item)
		{
			AccountLanguages.Remove((AccountLanguage)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountListValue> NetSteps.Accounts.Common.Models.IAccount.AccountListValues
		{
			get { return AccountListValues.Cast<NetSteps.Accounts.Common.Models.IAccountListValue>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountListValue(NetSteps.Accounts.Common.Models.IAccountListValue item)
		{
			AccountListValues.Add((AccountListValue)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountListValue(NetSteps.Accounts.Common.Models.IAccountListValue item)
		{
			AccountListValues.Remove((AccountListValue)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountPaymentMethod> NetSteps.Accounts.Common.Models.IAccount.AccountPaymentMethods
		{
			get { return AccountPaymentMethods.Cast<NetSteps.Accounts.Common.Models.IAccountPaymentMethod>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountPaymentMethod(NetSteps.Accounts.Common.Models.IAccountPaymentMethod item)
		{
			AccountPaymentMethods.Add((AccountPaymentMethod)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountPaymentMethod(NetSteps.Accounts.Common.Models.IAccountPaymentMethod item)
		{
			AccountPaymentMethods.Remove((AccountPaymentMethod)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountPhone> NetSteps.Accounts.Common.Models.IAccount.AccountPhones
		{
			get { return AccountPhones.Cast<NetSteps.Accounts.Common.Models.IAccountPhone>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountPhone(NetSteps.Accounts.Common.Models.IAccountPhone item)
		{
			AccountPhones.Add((AccountPhone)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountPhone(NetSteps.Accounts.Common.Models.IAccountPhone item)
		{
			AccountPhones.Remove((AccountPhone)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountPolicy> NetSteps.Accounts.Common.Models.IAccount.AccountPolicies
		{
			get { return AccountPolicies.Cast<NetSteps.Accounts.Common.Models.IAccountPolicy>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountPolicy(NetSteps.Accounts.Common.Models.IAccountPolicy item)
		{
			AccountPolicies.Add((AccountPolicy)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountPolicy(NetSteps.Accounts.Common.Models.IAccountPolicy item)
		{
			AccountPolicies.Remove((AccountPolicy)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountProperty> NetSteps.Accounts.Common.Models.IAccount.AccountProperties
		{
			get { return AccountProperties.Cast<NetSteps.Accounts.Common.Models.IAccountProperty>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountProperty(NetSteps.Accounts.Common.Models.IAccountProperty item)
		{
			AccountProperties.Add((AccountProperty)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountProperty(NetSteps.Accounts.Common.Models.IAccountProperty item)
		{
			AccountProperties.Remove((AccountProperty)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountPublicContactInfo> NetSteps.Accounts.Common.Models.IAccount.AccountPublicContactInfos
		{
			get { return AccountPublicContactInfos.Cast<NetSteps.Accounts.Common.Models.IAccountPublicContactInfo>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountPublicContactInfo(NetSteps.Accounts.Common.Models.IAccountPublicContactInfo item)
		{
			AccountPublicContactInfos.Add((AccountPublicContactInfo)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountPublicContactInfo(NetSteps.Accounts.Common.Models.IAccountPublicContactInfo item)
		{
			AccountPublicContactInfos.Remove((AccountPublicContactInfo)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountReport> NetSteps.Accounts.Common.Models.IAccount.AccountReports
		{
			get { return AccountReports.Cast<NetSteps.Accounts.Common.Models.IAccountReport>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountReport(NetSteps.Accounts.Common.Models.IAccountReport item)
		{
			AccountReports.Add((AccountReport)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountReport(NetSteps.Accounts.Common.Models.IAccountReport item)
		{
			AccountReports.Remove((AccountReport)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccount> NetSteps.Accounts.Common.Models.IAccount.Accounts1
		{
			get { return Accounts1.Cast<NetSteps.Accounts.Common.Models.IAccount>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccounts1(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts1.Add((Account)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccounts1(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts1.Remove((Account)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccount> NetSteps.Accounts.Common.Models.IAccount.Accounts11
		{
			get { return Accounts11.Cast<NetSteps.Accounts.Common.Models.IAccount>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccounts11(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts11.Add((Account)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccounts11(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts11.Remove((Account)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountSponsor> NetSteps.Accounts.Common.Models.IAccount.AccountSponsors
		{
			get { return AccountSponsors.Cast<NetSteps.Accounts.Common.Models.IAccountSponsor>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountSponsor(NetSteps.Accounts.Common.Models.IAccountSponsor item)
		{
			AccountSponsors.Add((AccountSponsor)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountSponsor(NetSteps.Accounts.Common.Models.IAccountSponsor item)
		{
			AccountSponsors.Remove((AccountSponsor)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountSponsor> NetSteps.Accounts.Common.Models.IAccount.AccountSponsors1
		{
			get { return AccountSponsors1.Cast<NetSteps.Accounts.Common.Models.IAccountSponsor>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountSponsors1(NetSteps.Accounts.Common.Models.IAccountSponsor item)
		{
			AccountSponsors1.Add((AccountSponsor)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountSponsors1(NetSteps.Accounts.Common.Models.IAccountSponsor item)
		{
			AccountSponsors1.Remove((AccountSponsor)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountTag> NetSteps.Accounts.Common.Models.IAccount.AccountTags
		{
			get { return AccountTags.Cast<NetSteps.Accounts.Common.Models.IAccountTag>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountTag(NetSteps.Accounts.Common.Models.IAccountTag item)
		{
			AccountTags.Add((AccountTag)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountTag(NetSteps.Accounts.Common.Models.IAccountTag item)
		{
			AccountTags.Remove((AccountTag)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountTag> NetSteps.Accounts.Common.Models.IAccount.AccountTags1
		{
			get { return AccountTags1.Cast<NetSteps.Accounts.Common.Models.IAccountTag>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAccountTags1(NetSteps.Accounts.Common.Models.IAccountTag item)
		{
			AccountTags1.Add((AccountTag)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAccountTags1(NetSteps.Accounts.Common.Models.IAccountTag item)
		{
			AccountTags1.Remove((AccountTag)item);
		}

		IEnumerable<NetSteps.Addresses.Common.Models.IAddress> NetSteps.Accounts.Common.Models.IAccount.Addresses
		{
			get { return Addresses.Cast<NetSteps.Addresses.Common.Models.IAddress>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddAddress(NetSteps.Addresses.Common.Models.IAddress item)
		{
			Addresses.Add((Address)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveAddress(NetSteps.Addresses.Common.Models.IAddress item)
		{
			Addresses.Remove((Address)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IEmailSignature> NetSteps.Accounts.Common.Models.IAccount.EmailSignatures
		{
			get { return EmailSignatures.Cast<NetSteps.Accounts.Common.Models.IEmailSignature>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddEmailSignature(NetSteps.Accounts.Common.Models.IEmailSignature item)
		{
			EmailSignatures.Add((EmailSignature)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveEmailSignature(NetSteps.Accounts.Common.Models.IEmailSignature item)
		{
			EmailSignatures.Remove((EmailSignature)item);
		}

		IEnumerable<NetSteps.Common.Models.INote> NetSteps.Accounts.Common.Models.IAccount.Notes
		{
			get { return Notes.Cast<NetSteps.Common.Models.INote>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccount.AddNote(NetSteps.Common.Models.INote item)
		{
			Notes.Add((Note)item);
		}

		void NetSteps.Accounts.Common.Models.IAccount.RemoveNote(NetSteps.Common.Models.INote item)
		{
			Notes.Remove((Note)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountContactTag), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountContactTag : NetSteps.Accounts.Common.Models.IAccountContactTag
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountContactTag.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountListValue NetSteps.Accounts.Common.Models.IAccountContactTag.AccountListValue
		{
			get { return AccountListValue; }
			set { AccountListValue = (AccountListValue)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountListValue NetSteps.Accounts.Common.Models.IAccountContactTag.AccountListValue1
		{
			get { return AccountListValue1; }
			set { AccountListValue1 = (AccountListValue)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountListValue NetSteps.Accounts.Common.Models.IAccountContactTag.AccountListValue2
		{
			get { return AccountListValue2; }
			set { AccountListValue2 = (AccountListValue)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountContactTag.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAccountDevice), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountDevice : NetSteps.Communication.Common.Models.IAccountDevice
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IDeviceType NetSteps.Communication.Common.Models.IAccountDevice.DeviceType
		{
			get { return DeviceType; }
			set { DeviceType = (DeviceType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IDeviceNotification> NetSteps.Communication.Common.Models.IAccountDevice.DeviceNotifications
		{
			get { return DeviceNotifications.Cast<NetSteps.Communication.Common.Models.IDeviceNotification>(); }
		}

		void NetSteps.Communication.Common.Models.IAccountDevice.AddDeviceNotification(NetSteps.Communication.Common.Models.IDeviceNotification item)
		{
			DeviceNotifications.Add((DeviceNotification)item);
		}

		void NetSteps.Communication.Common.Models.IAccountDevice.RemoveDeviceNotification(NetSteps.Communication.Common.Models.IDeviceNotification item)
		{
			DeviceNotifications.Remove((DeviceNotification)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAccountEmailLog), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountEmailLog : NetSteps.Communication.Common.Models.IAccountEmailLog
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IEmailType NetSteps.Communication.Common.Models.IAccountEmailLog.EmailType
		{
			get { return EmailType; }
			set { EmailType = (EmailType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountGlobalSearchData), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountGlobalSearchData : NetSteps.Accounts.Common.Models.IAccountGlobalSearchData
	{
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountLanguage), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountLanguage : NetSteps.Accounts.Common.Models.IAccountLanguage
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountLanguage.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountLanguage.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountListValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountListValue : NetSteps.Accounts.Common.Models.IAccountListValue
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountListValue.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IListValueType NetSteps.Accounts.Common.Models.IAccountListValue.ListValueType
		{
			get { return ListValueType; }
			set { ListValueType = (ListValueType)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountListValue.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountContactTag> NetSteps.Accounts.Common.Models.IAccountListValue.AccountContactTags
		{
			get { return AccountContactTags.Cast<NetSteps.Accounts.Common.Models.IAccountContactTag>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.AddAccountContactTag(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags.Add((AccountContactTag)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.RemoveAccountContactTag(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags.Remove((AccountContactTag)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountContactTag> NetSteps.Accounts.Common.Models.IAccountListValue.AccountContactTags1
		{
			get { return AccountContactTags1.Cast<NetSteps.Accounts.Common.Models.IAccountContactTag>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.AddAccountContactTags1(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags1.Add((AccountContactTag)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.RemoveAccountContactTags1(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags1.Remove((AccountContactTag)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountContactTag> NetSteps.Accounts.Common.Models.IAccountListValue.AccountContactTags2
		{
			get { return AccountContactTags2.Cast<NetSteps.Accounts.Common.Models.IAccountContactTag>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.AddAccountContactTags2(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags2.Add((AccountContactTag)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.RemoveAccountContactTags2(NetSteps.Accounts.Common.Models.IAccountContactTag item)
		{
			AccountContactTags2.Remove((AccountContactTag)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccount> NetSteps.Accounts.Common.Models.IAccountListValue.Accounts
		{
			get { return Accounts.Cast<NetSteps.Accounts.Common.Models.IAccount>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.AddAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Add((Account)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.RemoveAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Remove((Account)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountTag> NetSteps.Accounts.Common.Models.IAccountListValue.AccountTags
		{
			get { return AccountTags.Cast<NetSteps.Accounts.Common.Models.IAccountTag>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.AddAccountTag(NetSteps.Accounts.Common.Models.IAccountTag item)
		{
			AccountTags.Add((AccountTag)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountListValue.RemoveAccountTag(NetSteps.Accounts.Common.Models.IAccountTag item)
		{
			AccountTags.Remove((AccountTag)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountPaymentMethod), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountPaymentMethod : NetSteps.Accounts.Common.Models.IAccountPaymentMethod
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountPaymentMethod.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Addresses.Common.Models.IAddress NetSteps.Accounts.Common.Models.IAccountPaymentMethod.BillingAddress
		{
			get { return BillingAddress; }
			set { BillingAddress = (Address)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountPaymentMethod.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountPhone), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountPhone : NetSteps.Accounts.Common.Models.IAccountPhone
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountPhone.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountPhone.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountPolicy), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountPolicy : NetSteps.Accounts.Common.Models.IAccountPolicy
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountPolicy.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IPolicy NetSteps.Accounts.Common.Models.IAccountPolicy.Policy
		{
			get { return Policy; }
			set { Policy = (Policy)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountPolicy.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IAccountPriceType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountPriceType : NetSteps.Products.Common.Models.IAccountPriceType
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IPriceRelationshipType NetSteps.Products.Common.Models.IAccountPriceType.PriceRelationshipType
		{
			get { return PriceRelationshipType; }
			set { PriceRelationshipType = (PriceRelationshipType)value; }
		}

		NetSteps.Products.Common.Models.IProductPriceType NetSteps.Products.Common.Models.IAccountPriceType.ProductPriceType
		{
			get { return ProductPriceType; }
			set { ProductPriceType = (ProductPriceType)value; }
		}

		NetSteps.Products.Common.Models.IStoreFront NetSteps.Products.Common.Models.IAccountPriceType.StoreFront
		{
			get { return StoreFront; }
			set { StoreFront = (StoreFront)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountProperty), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountProperty : NetSteps.Accounts.Common.Models.IAccountProperty
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountProperty.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountPropertyType NetSteps.Accounts.Common.Models.IAccountProperty.AccountPropertyType
		{
			get { return AccountPropertyType; }
			set { AccountPropertyType = (AccountPropertyType)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountPropertyValue NetSteps.Accounts.Common.Models.IAccountProperty.AccountPropertyValue
		{
			get { return AccountPropertyValue; }
			set { AccountPropertyValue = (AccountPropertyValue)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountPropertyType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountPropertyType : NetSteps.Accounts.Common.Models.IAccountPropertyType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountProperty> NetSteps.Accounts.Common.Models.IAccountPropertyType.AccountProperties
		{
			get { return AccountProperties.Cast<NetSteps.Accounts.Common.Models.IAccountProperty>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountPropertyType.AddAccountProperty(NetSteps.Accounts.Common.Models.IAccountProperty item)
		{
			AccountProperties.Add((AccountProperty)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountPropertyType.RemoveAccountProperty(NetSteps.Accounts.Common.Models.IAccountProperty item)
		{
			AccountProperties.Remove((AccountProperty)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IAccountPropertyValue> NetSteps.Accounts.Common.Models.IAccountPropertyType.AccountPropertyValues
		{
			get { return AccountPropertyValues.Cast<NetSteps.Accounts.Common.Models.IAccountPropertyValue>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountPropertyType.AddAccountPropertyValue(NetSteps.Accounts.Common.Models.IAccountPropertyValue item)
		{
			AccountPropertyValues.Add((AccountPropertyValue)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountPropertyType.RemoveAccountPropertyValue(NetSteps.Accounts.Common.Models.IAccountPropertyValue item)
		{
			AccountPropertyValues.Remove((AccountPropertyValue)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountPropertyValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountPropertyValue : NetSteps.Accounts.Common.Models.IAccountPropertyValue
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccountPropertyType NetSteps.Accounts.Common.Models.IAccountPropertyValue.AccountPropertyType
		{
			get { return AccountPropertyType; }
			set { AccountPropertyType = (AccountPropertyType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountProperty> NetSteps.Accounts.Common.Models.IAccountPropertyValue.AccountProperties
		{
			get { return AccountProperties.Cast<NetSteps.Accounts.Common.Models.IAccountProperty>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountPropertyValue.AddAccountProperty(NetSteps.Accounts.Common.Models.IAccountProperty item)
		{
			AccountProperties.Add((AccountProperty)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountPropertyValue.RemoveAccountProperty(NetSteps.Accounts.Common.Models.IAccountProperty item)
		{
			AccountProperties.Remove((AccountProperty)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountPublicContactInfo), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountPublicContactInfo : NetSteps.Accounts.Common.Models.IAccountPublicContactInfo
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountPublicContactInfo.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountPublicContactInfo.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountReport), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountReport : NetSteps.Accounts.Common.Models.IAccountReport
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountReport.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountReportType NetSteps.Accounts.Common.Models.IAccountReport.AccountReportType
		{
			get { return AccountReportType; }
			set { AccountReportType = (AccountReportType)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountReport.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountReport.User1
		{
			get { return User1; }
			set { User1 = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountReportType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountReportType : NetSteps.Accounts.Common.Models.IAccountReportType
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountReportType.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountReport> NetSteps.Accounts.Common.Models.IAccountReportType.AccountReports
		{
			get { return AccountReports.Cast<NetSteps.Accounts.Common.Models.IAccountReport>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountReportType.AddAccountReport(NetSteps.Accounts.Common.Models.IAccountReport item)
		{
			AccountReports.Add((AccountReport)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountReportType.RemoveAccountReport(NetSteps.Accounts.Common.Models.IAccountReport item)
		{
			AccountReports.Remove((AccountReport)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountSource), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountSource : NetSteps.Accounts.Common.Models.IAccountSource
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccount> NetSteps.Accounts.Common.Models.IAccountSource.Accounts
		{
			get { return Accounts.Cast<NetSteps.Accounts.Common.Models.IAccount>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountSource.AddAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Add((Account)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountSource.RemoveAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Remove((Account)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountSponsor), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountSponsor : NetSteps.Accounts.Common.Models.IAccountSponsor
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountSponsor.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountSponsor.Account1
		{
			get { return Account1; }
			set { Account1 = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountSponsorType NetSteps.Accounts.Common.Models.IAccountSponsor.AccountSponsorType
		{
			get { return AccountSponsorType; }
			set { AccountSponsorType = (AccountSponsorType)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountSponsor.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountSponsorType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountSponsorType : NetSteps.Accounts.Common.Models.IAccountSponsorType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountSponsor> NetSteps.Accounts.Common.Models.IAccountSponsorType.AccountSponsors
		{
			get { return AccountSponsors.Cast<NetSteps.Accounts.Common.Models.IAccountSponsor>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountSponsorType.AddAccountSponsor(NetSteps.Accounts.Common.Models.IAccountSponsor item)
		{
			AccountSponsors.Add((AccountSponsor)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountSponsorType.RemoveAccountSponsor(NetSteps.Accounts.Common.Models.IAccountSponsor item)
		{
			AccountSponsors.Remove((AccountSponsor)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountStatus : NetSteps.Accounts.Common.Models.IAccountStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccount> NetSteps.Accounts.Common.Models.IAccountStatus.Accounts
		{
			get { return Accounts.Cast<NetSteps.Accounts.Common.Models.IAccount>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountStatus.AddAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Add((Account)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountStatus.RemoveAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Remove((Account)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountStatusChangeReason), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountStatusChangeReason : NetSteps.Accounts.Common.Models.IAccountStatusChangeReason
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IAccountStatusChangeReason.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccount> NetSteps.Accounts.Common.Models.IAccountStatusChangeReason.Accounts
		{
			get { return Accounts.Cast<NetSteps.Accounts.Common.Models.IAccount>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountStatusChangeReason.AddAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Add((Account)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountStatusChangeReason.RemoveAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Remove((Account)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountTag), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountTag : NetSteps.Accounts.Common.Models.IAccountTag
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountTag.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IAccountTag.Account1
		{
			get { return Account1; }
			set { Account1 = (Account)value; }
		}

		NetSteps.Accounts.Common.Models.IAccountListValue NetSteps.Accounts.Common.Models.IAccountTag.AccountListValue
		{
			get { return AccountListValue; }
			set { AccountListValue = (AccountListValue)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IAccountType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AccountType : NetSteps.Accounts.Common.Models.IAccountType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IRole> NetSteps.Accounts.Common.Models.IAccountType.Roles
		{
			get { return Roles.Cast<NetSteps.Accounts.Common.Models.IRole>(); }
		}

		void NetSteps.Accounts.Common.Models.IAccountType.AddRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Add((Role)item);
		}

		void NetSteps.Accounts.Common.Models.IAccountType.RemoveRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Remove((Role)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Addresses.Common.Models.IAddress), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Address : NetSteps.Addresses.Common.Models.IAddress
	{
	}

	[ContainerRegister(typeof(NetSteps.Addresses.Common.Models.IAddressProperty), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AddressProperty : NetSteps.Addresses.Common.Models.IAddressProperty
	{
		#region Singular Navigation Properties
		NetSteps.Addresses.Common.Models.IAddress NetSteps.Addresses.Common.Models.IAddressProperty.Address
		{
			get { return Address; }
			set { Address = (Address)value; }
		}

		NetSteps.Addresses.Common.Models.IAddressPropertyType NetSteps.Addresses.Common.Models.IAddressProperty.AddressPropertyType
		{
			get { return AddressPropertyType; }
			set { AddressPropertyType = (AddressPropertyType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Addresses.Common.Models.IAddressPropertyType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AddressPropertyType : NetSteps.Addresses.Common.Models.IAddressPropertyType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Addresses.Common.Models.IAddressProperty> NetSteps.Addresses.Common.Models.IAddressPropertyType.AddressProperties
		{
			get { return AddressProperties.Cast<NetSteps.Addresses.Common.Models.IAddressProperty>(); }
		}

		void NetSteps.Addresses.Common.Models.IAddressPropertyType.AddAddressProperty(NetSteps.Addresses.Common.Models.IAddressProperty item)
		{
			AddressProperties.Add((AddressProperty)item);
		}

		void NetSteps.Addresses.Common.Models.IAddressPropertyType.RemoveAddressProperty(NetSteps.Addresses.Common.Models.IAddressProperty item)
		{
			AddressProperties.Remove((AddressProperty)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Taxes.Common.Models.IAddressTaxOverride), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AddressTaxOverride : NetSteps.Taxes.Common.Models.IAddressTaxOverride
	{
	}

	[ContainerRegister(typeof(NetSteps.Addresses.Common.Models.IAddressType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AddressType : NetSteps.Addresses.Common.Models.IAddressType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Addresses.Common.Models.IAddress> NetSteps.Addresses.Common.Models.IAddressType.Addresses
		{
			get { return Addresses.Cast<NetSteps.Addresses.Common.Models.IAddress>(); }
		}

		void NetSteps.Addresses.Common.Models.IAddressType.AddAddress(NetSteps.Addresses.Common.Models.IAddress item)
		{
			Addresses.Add((Address)item);
		}

		void NetSteps.Addresses.Common.Models.IAddressType.RemoveAddress(NetSteps.Addresses.Common.Models.IAddress item)
		{
			Addresses.Remove((Address)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAlertCampaignAction), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AlertCampaignAction : NetSteps.Communication.Common.Models.IAlertCampaignAction
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.ICampaignAction NetSteps.Communication.Common.Models.IAlertCampaignAction.CampaignAction
		{
			get { return CampaignAction; }
			set { CampaignAction = (CampaignAction)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAlertPriority), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AlertPriority : NetSteps.Communication.Common.Models.IAlertPriority
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAlertTemplate> NetSteps.Communication.Common.Models.IAlertPriority.AlertTemplates
		{
			get { return AlertTemplates.Cast<NetSteps.Communication.Common.Models.IAlertTemplate>(); }
		}

		void NetSteps.Communication.Common.Models.IAlertPriority.AddAlertTemplate(NetSteps.Communication.Common.Models.IAlertTemplate item)
		{
			AlertTemplates.Add((AlertTemplate)item);
		}

		void NetSteps.Communication.Common.Models.IAlertPriority.RemoveAlertTemplate(NetSteps.Communication.Common.Models.IAlertTemplate item)
		{
			AlertTemplates.Remove((AlertTemplate)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAlertTemplate), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AlertTemplate : NetSteps.Communication.Common.Models.IAlertTemplate
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAlertTemplateTranslation> NetSteps.Communication.Common.Models.IAlertTemplate.AlertTemplateTranslations
		{
			get { return AlertTemplateTranslations.Cast<NetSteps.Communication.Common.Models.IAlertTemplateTranslation>(); }
		}

		void NetSteps.Communication.Common.Models.IAlertTemplate.AddAlertTemplateTranslation(NetSteps.Communication.Common.Models.IAlertTemplateTranslation item)
		{
			AlertTemplateTranslations.Add((AlertTemplateTranslation)item);
		}

		void NetSteps.Communication.Common.Models.IAlertTemplate.RemoveAlertTemplateTranslation(NetSteps.Communication.Common.Models.IAlertTemplateTranslation item)
		{
			AlertTemplateTranslations.Remove((AlertTemplateTranslation)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IToken> NetSteps.Communication.Common.Models.IAlertTemplate.Tokens
		{
			get { return Tokens.Cast<NetSteps.Communication.Common.Models.IToken>(); }
		}

		void NetSteps.Communication.Common.Models.IAlertTemplate.AddToken(NetSteps.Communication.Common.Models.IToken item)
		{
			Tokens.Add((Token)item);
		}

		void NetSteps.Communication.Common.Models.IAlertTemplate.RemoveToken(NetSteps.Communication.Common.Models.IToken item)
		{
			Tokens.Remove((Token)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAlertTemplateTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AlertTemplateTranslation : NetSteps.Communication.Common.Models.IAlertTemplateTranslation
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IAlertTemplate NetSteps.Communication.Common.Models.IAlertTemplateTranslation.AlertTemplate
		{
			get { return AlertTemplate; }
			set { AlertTemplate = (AlertTemplate)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Common.Models.IApplication), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Application : NetSteps.Common.Models.IApplication
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.IApplicationRunningInstance> NetSteps.Common.Models.IApplication.ApplicationRunningInstances
		{
			get { return ApplicationRunningInstances.Cast<NetSteps.Common.Models.IApplicationRunningInstance>(); }
		}

		void NetSteps.Common.Models.IApplication.AddApplicationRunningInstance(NetSteps.Common.Models.IApplicationRunningInstance item)
		{
			ApplicationRunningInstances.Add((ApplicationRunningInstance)item);
		}

		void NetSteps.Common.Models.IApplication.RemoveApplicationRunningInstance(NetSteps.Common.Models.IApplicationRunningInstance item)
		{
			ApplicationRunningInstances.Remove((ApplicationRunningInstance)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Common.Models.IApplicationRunningInstance), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ApplicationRunningInstance : NetSteps.Common.Models.IApplicationRunningInstance
	{
		#region Singular Navigation Properties
		NetSteps.Common.Models.IApplication NetSteps.Common.Models.IApplicationRunningInstance.Application
		{
			get { return Application; }
			set { Application = (Application)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Logging.Common.Models.IApplicationUsageLog), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ApplicationUsageLog : NetSteps.Diagnostics.Logging.Common.Models.IApplicationUsageLog
	{
	}

	[ContainerRegister(typeof(NetSteps.Marketing.Common.Models.IArchive), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Archive : NetSteps.Marketing.Common.Models.IArchive
	{
		#region Singular Navigation Properties
		NetSteps.Marketing.Common.Models.IArchiveType NetSteps.Marketing.Common.Models.IArchive.ArchiveType
		{
			get { return ArchiveType; }
			set { ArchiveType = (ArchiveType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.ICategory> NetSteps.Marketing.Common.Models.IArchive.Categories
		{
			get { return Categories.Cast<NetSteps.Common.Models.ICategory>(); }
		}

		void NetSteps.Marketing.Common.Models.IArchive.AddCategory(NetSteps.Common.Models.ICategory item)
		{
			Categories.Add((Category)item);
		}

		void NetSteps.Marketing.Common.Models.IArchive.RemoveCategory(NetSteps.Common.Models.ICategory item)
		{
			Categories.Remove((Category)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IDescriptionTranslation> NetSteps.Marketing.Common.Models.IArchive.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.IDescriptionTranslation>(); }
		}

		void NetSteps.Marketing.Common.Models.IArchive.AddTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Add((DescriptionTranslation)item);
		}

		void NetSteps.Marketing.Common.Models.IArchive.RemoveTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Remove((DescriptionTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Marketing.Common.Models.IArchiveType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ArchiveType : NetSteps.Marketing.Common.Models.IArchiveType
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Auditing.Common.Models.IAuditChangeType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AuditChangeType : NetSteps.Diagnostics.Auditing.Common.Models.IAuditChangeType
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Auditing.Common.Models.IAuditLog), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AuditLog : NetSteps.Diagnostics.Auditing.Common.Models.IAuditLog
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Auditing.Common.Models.IAuditLogRow), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AuditLogRow : NetSteps.Diagnostics.Auditing.Common.Models.IAuditLogRow
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Auditing.Common.Models.IAuditMachineName), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AuditMachineName : NetSteps.Diagnostics.Auditing.Common.Models.IAuditMachineName
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Auditing.Common.Models.IAuditSqlUserName), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AuditSqlUserName : NetSteps.Diagnostics.Auditing.Common.Models.IAuditSqlUserName
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Auditing.Common.Models.IAuditTable), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AuditTable : NetSteps.Diagnostics.Auditing.Common.Models.IAuditTable
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Auditing.Common.Models.IAuditTableColumn), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AuditTableColumn : NetSteps.Diagnostics.Auditing.Common.Models.IAuditTableColumn
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAutoresponder), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Autoresponder : NetSteps.Communication.Common.Models.IAutoresponder
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IAutoresponderType NetSteps.Communication.Common.Models.IAutoresponder.AutoresponderType
		{
			get { return AutoresponderType; }
			set { AutoresponderType = (AutoresponderType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAutoresponderMessage> NetSteps.Communication.Common.Models.IAutoresponder.AutoresponderMessages
		{
			get { return AutoresponderMessages.Cast<NetSteps.Communication.Common.Models.IAutoresponderMessage>(); }
		}

		void NetSteps.Communication.Common.Models.IAutoresponder.AddAutoresponderMessage(NetSteps.Communication.Common.Models.IAutoresponderMessage item)
		{
			AutoresponderMessages.Add((AutoresponderMessage)item);
		}

		void NetSteps.Communication.Common.Models.IAutoresponder.RemoveAutoresponderMessage(NetSteps.Communication.Common.Models.IAutoresponderMessage item)
		{
			AutoresponderMessages.Remove((AutoresponderMessage)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IAutoresponderTranslation> NetSteps.Communication.Common.Models.IAutoresponder.Translations
		{
			get { return Translations.Cast<NetSteps.Communication.Common.Models.IAutoresponderTranslation>(); }
		}

		void NetSteps.Communication.Common.Models.IAutoresponder.AddTranslation(NetSteps.Communication.Common.Models.IAutoresponderTranslation item)
		{
			Translations.Add((AutoresponderTranslation)item);
		}

		void NetSteps.Communication.Common.Models.IAutoresponder.RemoveTranslation(NetSteps.Communication.Common.Models.IAutoresponderTranslation item)
		{
			Translations.Remove((AutoresponderTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAutoresponderMessage), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoresponderMessage : NetSteps.Communication.Common.Models.IAutoresponderMessage
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IAutoresponder NetSteps.Communication.Common.Models.IAutoresponderMessage.Autoresponder
		{
			get { return Autoresponder; }
			set { Autoresponder = (Autoresponder)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAutoresponderMessageToken> NetSteps.Communication.Common.Models.IAutoresponderMessage.AutoresponderMessageTokens
		{
			get { return AutoresponderMessageTokens.Cast<NetSteps.Communication.Common.Models.IAutoresponderMessageToken>(); }
		}

		void NetSteps.Communication.Common.Models.IAutoresponderMessage.AddAutoresponderMessageToken(NetSteps.Communication.Common.Models.IAutoresponderMessageToken item)
		{
			AutoresponderMessageTokens.Add((AutoresponderMessageToken)item);
		}

		void NetSteps.Communication.Common.Models.IAutoresponderMessage.RemoveAutoresponderMessageToken(NetSteps.Communication.Common.Models.IAutoresponderMessageToken item)
		{
			AutoresponderMessageTokens.Remove((AutoresponderMessageToken)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAutoresponderMessageToken), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoresponderMessageToken : NetSteps.Communication.Common.Models.IAutoresponderMessageToken
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IAutoresponderMessage NetSteps.Communication.Common.Models.IAutoresponderMessageToken.AutoresponderMessage
		{
			get { return AutoresponderMessage; }
			set { AutoresponderMessage = (AutoresponderMessage)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAutoresponderTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoresponderTranslation : NetSteps.Communication.Common.Models.IAutoresponderTranslation
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IAutoresponderType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoresponderType : NetSteps.Communication.Common.Models.IAutoresponderType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAutoresponder> NetSteps.Communication.Common.Models.IAutoresponderType.Autoresponders
		{
			get { return Autoresponders.Cast<NetSteps.Communication.Common.Models.IAutoresponder>(); }
		}

		void NetSteps.Communication.Common.Models.IAutoresponderType.AddAutoresponder(NetSteps.Communication.Common.Models.IAutoresponder item)
		{
			Autoresponders.Add((Autoresponder)item);
		}

		void NetSteps.Communication.Common.Models.IAutoresponderType.RemoveAutoresponder(NetSteps.Communication.Common.Models.IAutoresponder item)
		{
			Autoresponders.Remove((Autoresponder)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IAutoshipBatch), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoshipBatch : NetSteps.Orders.Common.Models.IAutoshipBatch
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IAutoshipLog> NetSteps.Orders.Common.Models.IAutoshipBatch.AutoshipLogs
		{
			get { return AutoshipLogs.Cast<NetSteps.Orders.Common.Models.IAutoshipLog>(); }
		}

		void NetSteps.Orders.Common.Models.IAutoshipBatch.AddAutoshipLog(NetSteps.Orders.Common.Models.IAutoshipLog item)
		{
			AutoshipLogs.Add((AutoshipLog)item);
		}

		void NetSteps.Orders.Common.Models.IAutoshipBatch.RemoveAutoshipLog(NetSteps.Orders.Common.Models.IAutoshipLog item)
		{
			AutoshipLogs.Remove((AutoshipLog)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IAutoshipLog), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoshipLog : NetSteps.Orders.Common.Models.IAutoshipLog
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IAutoshipBatch NetSteps.Orders.Common.Models.IAutoshipLog.AutoshipBatch
		{
			get { return AutoshipBatch; }
			set { AutoshipBatch = (AutoshipBatch)value; }
		}

		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IAutoshipLog.NewOrder
		{
			get { return NewOrder; }
			set { NewOrder = (Order)value; }
		}

		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IAutoshipLog.TemplateOrder
		{
			get { return TemplateOrder; }
			set { TemplateOrder = (Order)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IAutoshipOrder), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoshipOrder : NetSteps.Orders.Common.Models.IAutoshipOrder
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IAutoshipOrder.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IAutoshipSchedule), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoshipSchedule : NetSteps.Orders.Common.Models.IAutoshipSchedule
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IAutoshipScheduleDay> NetSteps.Orders.Common.Models.IAutoshipSchedule.AutoshipScheduleDays
		{
			get { return AutoshipScheduleDays.Cast<NetSteps.Orders.Common.Models.IAutoshipScheduleDay>(); }
		}

		void NetSteps.Orders.Common.Models.IAutoshipSchedule.AddAutoshipScheduleDay(NetSteps.Orders.Common.Models.IAutoshipScheduleDay item)
		{
			AutoshipScheduleDays.Add((AutoshipScheduleDay)item);
		}

		void NetSteps.Orders.Common.Models.IAutoshipSchedule.RemoveAutoshipScheduleDay(NetSteps.Orders.Common.Models.IAutoshipScheduleDay item)
		{
			AutoshipScheduleDays.Remove((AutoshipScheduleDay)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IAutoshipScheduleProduct> NetSteps.Orders.Common.Models.IAutoshipSchedule.AutoshipScheduleProducts
		{
			get { return AutoshipScheduleProducts.Cast<NetSteps.Orders.Common.Models.IAutoshipScheduleProduct>(); }
		}

		void NetSteps.Orders.Common.Models.IAutoshipSchedule.AddAutoshipScheduleProduct(NetSteps.Orders.Common.Models.IAutoshipScheduleProduct item)
		{
			AutoshipScheduleProducts.Add((AutoshipScheduleProduct)item);
		}

		void NetSteps.Orders.Common.Models.IAutoshipSchedule.RemoveAutoshipScheduleProduct(NetSteps.Orders.Common.Models.IAutoshipScheduleProduct item)
		{
			AutoshipScheduleProducts.Remove((AutoshipScheduleProduct)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IAutoshipScheduleDay), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoshipScheduleDay : NetSteps.Orders.Common.Models.IAutoshipScheduleDay
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IAutoshipSchedule NetSteps.Orders.Common.Models.IAutoshipScheduleDay.AutoshipSchedule
		{
			get { return AutoshipSchedule; }
			set { AutoshipSchedule = (AutoshipSchedule)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IAutoshipScheduleProduct), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoshipScheduleProduct : NetSteps.Orders.Common.Models.IAutoshipScheduleProduct
	{
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IAutoshipScheduleType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AutoshipScheduleType : NetSteps.Orders.Common.Models.IAutoshipScheduleType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IAutoshipSchedule> NetSteps.Orders.Common.Models.IAutoshipScheduleType.AutoshipSchedules
		{
			get { return AutoshipSchedules.Cast<NetSteps.Orders.Common.Models.IAutoshipSchedule>(); }
		}

		void NetSteps.Orders.Common.Models.IAutoshipScheduleType.AddAutoshipSchedule(NetSteps.Orders.Common.Models.IAutoshipSchedule item)
		{
			AutoshipSchedules.Add((AutoshipSchedule)item);
		}

		void NetSteps.Orders.Common.Models.IAutoshipScheduleType.RemoveAutoshipSchedule(NetSteps.Orders.Common.Models.IAutoshipSchedule item)
		{
			AutoshipSchedules.Remove((AutoshipSchedule)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Payments.Common.Models.IBankAccountType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class BankAccountType : NetSteps.Payments.Common.Models.IBankAccountType
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IBrand), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Brand : NetSteps.Products.Common.Models.IBrand
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IDescriptionTranslation> NetSteps.Products.Common.Models.IBrand.DescriptionTranslations
		{
			get { return DescriptionTranslations.Cast<NetSteps.Content.Common.Models.IDescriptionTranslation>(); }
		}

		void NetSteps.Products.Common.Models.IBrand.AddDescriptionTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			DescriptionTranslations.Add((DescriptionTranslation)item);
		}

		void NetSteps.Products.Common.Models.IBrand.RemoveDescriptionTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			DescriptionTranslations.Remove((DescriptionTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Marketing.Common.Models.ICalendarEvent), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CalendarEvent : NetSteps.Marketing.Common.Models.ICalendarEvent
	{
		#region Singular Navigation Properties
		NetSteps.Addresses.Common.Models.IAddress NetSteps.Marketing.Common.Models.ICalendarEvent.Address
		{
			get { return Address; }
			set { Address = (Address)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Marketing.Common.Models.ICalendarEventAttribute> NetSteps.Marketing.Common.Models.ICalendarEvent.CalendarEventAttributes
		{
			get { return CalendarEventAttributes.Cast<NetSteps.Marketing.Common.Models.ICalendarEventAttribute>(); }
		}

		void NetSteps.Marketing.Common.Models.ICalendarEvent.AddCalendarEventAttribute(NetSteps.Marketing.Common.Models.ICalendarEventAttribute item)
		{
			CalendarEventAttributes.Add((CalendarEventAttribute)item);
		}

		void NetSteps.Marketing.Common.Models.ICalendarEvent.RemoveCalendarEventAttribute(NetSteps.Marketing.Common.Models.ICalendarEventAttribute item)
		{
			CalendarEventAttributes.Remove((CalendarEventAttribute)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Marketing.Common.Models.ICalendarEventAttribute), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CalendarEventAttribute : NetSteps.Marketing.Common.Models.ICalendarEventAttribute
	{
		#region Singular Navigation Properties
		NetSteps.Marketing.Common.Models.ICalendarEvent NetSteps.Marketing.Common.Models.ICalendarEventAttribute.CalendarEvent
		{
			get { return CalendarEvent; }
			set { CalendarEvent = (CalendarEvent)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaign), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Campaign : NetSteps.Communication.Common.Models.ICampaign
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignAction> NetSteps.Communication.Common.Models.ICampaign.CampaignActions
		{
			get { return CampaignActions.Cast<NetSteps.Communication.Common.Models.ICampaignAction>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaign.AddCampaignAction(NetSteps.Communication.Common.Models.ICampaignAction item)
		{
			CampaignActions.Add((CampaignAction)item);
		}

		void NetSteps.Communication.Common.Models.ICampaign.RemoveCampaignAction(NetSteps.Communication.Common.Models.ICampaignAction item)
		{
			CampaignActions.Remove((CampaignAction)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaignEmail> NetSteps.Communication.Common.Models.ICampaign.CampaignEmails
		{
			get { return CampaignEmails.Cast<NetSteps.Communication.Common.Models.ICampaignEmail>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaign.AddCampaignEmail(NetSteps.Communication.Common.Models.ICampaignEmail item)
		{
			CampaignEmails.Add((CampaignEmail)item);
		}

		void NetSteps.Communication.Common.Models.ICampaign.RemoveCampaignEmail(NetSteps.Communication.Common.Models.ICampaignEmail item)
		{
			CampaignEmails.Remove((CampaignEmail)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaignOptOut> NetSteps.Communication.Common.Models.ICampaign.CampaignOptOuts
		{
			get { return CampaignOptOuts.Cast<NetSteps.Communication.Common.Models.ICampaignOptOut>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaign.AddCampaignOptOut(NetSteps.Communication.Common.Models.ICampaignOptOut item)
		{
			CampaignOptOuts.Add((CampaignOptOut)item);
		}

		void NetSteps.Communication.Common.Models.ICampaign.RemoveCampaignOptOut(NetSteps.Communication.Common.Models.ICampaignOptOut item)
		{
			CampaignOptOuts.Remove((CampaignOptOut)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaignSubscriber> NetSteps.Communication.Common.Models.ICampaign.CampaignSubscribers
		{
			get { return CampaignSubscribers.Cast<NetSteps.Communication.Common.Models.ICampaignSubscriber>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaign.AddCampaignSubscriber(NetSteps.Communication.Common.Models.ICampaignSubscriber item)
		{
			CampaignSubscribers.Add((CampaignSubscriber)item);
		}

		void NetSteps.Communication.Common.Models.ICampaign.RemoveCampaignSubscriber(NetSteps.Communication.Common.Models.ICampaignSubscriber item)
		{
			CampaignSubscribers.Remove((CampaignSubscriber)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignAction), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignAction : NetSteps.Communication.Common.Models.ICampaignAction
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.ICampaign NetSteps.Communication.Common.Models.ICampaignAction.Campaign
		{
			get { return Campaign; }
			set { Campaign = (Campaign)value; }
		}

		NetSteps.Communication.Common.Models.ICampaignActionType NetSteps.Communication.Common.Models.ICampaignAction.CampaignActionType
		{
			get { return CampaignActionType; }
			set { CampaignActionType = (CampaignActionType)value; }
		}

		NetSteps.Communication.Common.Models.ITimeUnitType NetSteps.Communication.Common.Models.ICampaignAction.TimeUnitType
		{
			get { return TimeUnitType; }
			set { TimeUnitType = (TimeUnitType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAlertCampaignAction> NetSteps.Communication.Common.Models.ICampaignAction.AlertCampaignActions
		{
			get { return AlertCampaignActions.Cast<NetSteps.Communication.Common.Models.IAlertCampaignAction>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.AddAlertCampaignAction(NetSteps.Communication.Common.Models.IAlertCampaignAction item)
		{
			AlertCampaignActions.Add((AlertCampaignAction)item);
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.RemoveAlertCampaignAction(NetSteps.Communication.Common.Models.IAlertCampaignAction item)
		{
			AlertCampaignActions.Remove((AlertCampaignAction)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaignActionQueueItem> NetSteps.Communication.Common.Models.ICampaignAction.CampaignActionQueueItems
		{
			get { return CampaignActionQueueItems.Cast<NetSteps.Communication.Common.Models.ICampaignActionQueueItem>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.AddCampaignActionQueueItem(NetSteps.Communication.Common.Models.ICampaignActionQueueItem item)
		{
			CampaignActionQueueItems.Add((CampaignActionQueueItem)item);
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.RemoveCampaignActionQueueItem(NetSteps.Communication.Common.Models.ICampaignActionQueueItem item)
		{
			CampaignActionQueueItems.Remove((CampaignActionQueueItem)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaignActionTokenValue> NetSteps.Communication.Common.Models.ICampaignAction.CampaignActionTokenValues
		{
			get { return CampaignActionTokenValues.Cast<NetSteps.Communication.Common.Models.ICampaignActionTokenValue>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.AddCampaignActionTokenValue(NetSteps.Communication.Common.Models.ICampaignActionTokenValue item)
		{
			CampaignActionTokenValues.Add((CampaignActionTokenValue)item);
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.RemoveCampaignActionTokenValue(NetSteps.Communication.Common.Models.ICampaignActionTokenValue item)
		{
			CampaignActionTokenValues.Remove((CampaignActionTokenValue)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IEmailCampaignAction> NetSteps.Communication.Common.Models.ICampaignAction.EmailCampaignActions
		{
			get { return EmailCampaignActions.Cast<NetSteps.Communication.Common.Models.IEmailCampaignAction>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.AddEmailCampaignAction(NetSteps.Communication.Common.Models.IEmailCampaignAction item)
		{
			EmailCampaignActions.Add((EmailCampaignAction)item);
		}

		void NetSteps.Communication.Common.Models.ICampaignAction.RemoveEmailCampaignAction(NetSteps.Communication.Common.Models.IEmailCampaignAction item)
		{
			EmailCampaignActions.Remove((EmailCampaignAction)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignActionQueueHistory), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignActionQueueHistory : NetSteps.Communication.Common.Models.ICampaignActionQueueHistory
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.ICampaignActionQueueItem NetSteps.Communication.Common.Models.ICampaignActionQueueHistory.CampaignActionQueueItem
		{
			get { return CampaignActionQueueItem; }
			set { CampaignActionQueueItem = (CampaignActionQueueItem)value; }
		}

		NetSteps.Communication.Common.Models.IQueueItemStatus NetSteps.Communication.Common.Models.ICampaignActionQueueHistory.QueueItemStatus
		{
			get { return QueueItemStatus; }
			set { QueueItemStatus = (QueueItemStatus)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignActionQueueItem), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignActionQueueItem : NetSteps.Communication.Common.Models.ICampaignActionQueueItem
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.ICampaignAction NetSteps.Communication.Common.Models.ICampaignActionQueueItem.CampaignAction
		{
			get { return CampaignAction; }
			set { CampaignAction = (CampaignAction)value; }
		}

		NetSteps.Communication.Common.Models.IEventContext NetSteps.Communication.Common.Models.ICampaignActionQueueItem.EventContext
		{
			get { return EventContext; }
			set { EventContext = (EventContext)value; }
		}

		NetSteps.Communication.Common.Models.IQueueItemPriority NetSteps.Communication.Common.Models.ICampaignActionQueueItem.QueueItemPriority
		{
			get { return QueueItemPriority; }
			set { QueueItemPriority = (QueueItemPriority)value; }
		}

		NetSteps.Communication.Common.Models.IQueueItemStatus NetSteps.Communication.Common.Models.ICampaignActionQueueItem.QueueItemStatus
		{
			get { return QueueItemStatus; }
			set { QueueItemStatus = (QueueItemStatus)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignActionQueueHistory> NetSteps.Communication.Common.Models.ICampaignActionQueueItem.CampaignActionQueueHistories
		{
			get { return CampaignActionQueueHistories.Cast<NetSteps.Communication.Common.Models.ICampaignActionQueueHistory>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaignActionQueueItem.AddCampaignActionQueueHistory(NetSteps.Communication.Common.Models.ICampaignActionQueueHistory item)
		{
			CampaignActionQueueHistories.Add((CampaignActionQueueHistory)item);
		}

		void NetSteps.Communication.Common.Models.ICampaignActionQueueItem.RemoveCampaignActionQueueHistory(NetSteps.Communication.Common.Models.ICampaignActionQueueHistory item)
		{
			CampaignActionQueueHistories.Remove((CampaignActionQueueHistory)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignActionTokenValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignActionTokenValue : NetSteps.Communication.Common.Models.ICampaignActionTokenValue
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignActionType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignActionType : NetSteps.Communication.Common.Models.ICampaignActionType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignAction> NetSteps.Communication.Common.Models.ICampaignActionType.CampaignActions
		{
			get { return CampaignActions.Cast<NetSteps.Communication.Common.Models.ICampaignAction>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaignActionType.AddCampaignAction(NetSteps.Communication.Common.Models.ICampaignAction item)
		{
			CampaignActions.Add((CampaignAction)item);
		}

		void NetSteps.Communication.Common.Models.ICampaignActionType.RemoveCampaignAction(NetSteps.Communication.Common.Models.ICampaignAction item)
		{
			CampaignActions.Remove((CampaignAction)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignEmail), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignEmail : NetSteps.Communication.Common.Models.ICampaignEmail
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.ICampaign NetSteps.Communication.Common.Models.ICampaignEmail.Campaign
		{
			get { return Campaign; }
			set { Campaign = (Campaign)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignOptOut), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignOptOut : NetSteps.Communication.Common.Models.ICampaignOptOut
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignSubscriber), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignSubscriber : NetSteps.Communication.Common.Models.ICampaignSubscriber
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ICampaignType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CampaignType : NetSteps.Communication.Common.Models.ICampaignType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaign> NetSteps.Communication.Common.Models.ICampaignType.Campaigns
		{
			get { return Campaigns.Cast<NetSteps.Communication.Common.Models.ICampaign>(); }
		}

		void NetSteps.Communication.Common.Models.ICampaignType.AddCampaign(NetSteps.Communication.Common.Models.ICampaign item)
		{
			Campaigns.Add((Campaign)item);
		}

		void NetSteps.Communication.Common.Models.ICampaignType.RemoveCampaign(NetSteps.Communication.Common.Models.ICampaign item)
		{
			Campaigns.Remove((Campaign)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.ICatalog), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Catalog : NetSteps.Products.Common.Models.ICatalog
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.ICatalogItem> NetSteps.Products.Common.Models.ICatalog.CatalogItems
		{
			get { return CatalogItems.Cast<NetSteps.Products.Common.Models.ICatalogItem>(); }
		}

		void NetSteps.Products.Common.Models.ICatalog.AddCatalogItem(NetSteps.Products.Common.Models.ICatalogItem item)
		{
			CatalogItems.Add((CatalogItem)item);
		}

		void NetSteps.Products.Common.Models.ICatalog.RemoveCatalogItem(NetSteps.Products.Common.Models.ICatalogItem item)
		{
			CatalogItems.Remove((CatalogItem)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IDescriptionTranslation> NetSteps.Products.Common.Models.ICatalog.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.IDescriptionTranslation>(); }
		}

		void NetSteps.Products.Common.Models.ICatalog.AddTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Add((DescriptionTranslation)item);
		}

		void NetSteps.Products.Common.Models.ICatalog.RemoveTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Remove((DescriptionTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.ICatalogItem), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CatalogItem : NetSteps.Products.Common.Models.ICatalogItem
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.ICatalog NetSteps.Products.Common.Models.ICatalogItem.Catalog
		{
			get { return Catalog; }
			set { Catalog = (Catalog)value; }
		}

		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.ICatalogItem.Product
		{
			get { return Product; }
			set { Product = (Product)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.ICatalogType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CatalogType : NetSteps.Products.Common.Models.ICatalogType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.ICatalog> NetSteps.Products.Common.Models.ICatalogType.Catalogs
		{
			get { return Catalogs.Cast<NetSteps.Products.Common.Models.ICatalog>(); }
		}

		void NetSteps.Products.Common.Models.ICatalogType.AddCatalog(NetSteps.Products.Common.Models.ICatalog item)
		{
			Catalogs.Add((Catalog)item);
		}

		void NetSteps.Products.Common.Models.ICatalogType.RemoveCatalog(NetSteps.Products.Common.Models.ICatalog item)
		{
			Catalogs.Remove((Catalog)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Common.Models.ICategory), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Category : NetSteps.Common.Models.ICategory
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.ICategory> NetSteps.Common.Models.ICategory.ChildCategories
		{
			get { return ChildCategories.Cast<NetSteps.Common.Models.ICategory>(); }
		}

		void NetSteps.Common.Models.ICategory.AddChildCategory(NetSteps.Common.Models.ICategory item)
		{
			ChildCategories.Add((Category)item);
		}

		void NetSteps.Common.Models.ICategory.RemoveChildCategory(NetSteps.Common.Models.ICategory item)
		{
			ChildCategories.Remove((Category)item);
		}

		IEnumerable<NetSteps.Common.Models.ICategoryTranslation> NetSteps.Common.Models.ICategory.Translations
		{
			get { return Translations.Cast<NetSteps.Common.Models.ICategoryTranslation>(); }
		}

		void NetSteps.Common.Models.ICategory.AddTranslation(NetSteps.Common.Models.ICategoryTranslation item)
		{
			Translations.Add((CategoryTranslation)item);
		}

		void NetSteps.Common.Models.ICategory.RemoveTranslation(NetSteps.Common.Models.ICategoryTranslation item)
		{
			Translations.Remove((CategoryTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Common.Models.ICategoryTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CategoryTranslation : NetSteps.Common.Models.ICategoryTranslation
	{
	}

	[ContainerRegister(typeof(NetSteps.Common.Models.ICategoryType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CategoryType : NetSteps.Common.Models.ICategoryType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.ICategory> NetSteps.Common.Models.ICategoryType.Categories
		{
			get { return Categories.Cast<NetSteps.Common.Models.ICategory>(); }
		}

		void NetSteps.Common.Models.ICategoryType.AddCategory(NetSteps.Common.Models.ICategory item)
		{
			Categories.Add((Category)item);
		}

		void NetSteps.Common.Models.ICategoryType.RemoveCategory(NetSteps.Common.Models.ICategory item)
		{
			Categories.Remove((Category)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.ICommissions_AccountTitles_View), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Commissions_AccountTitles_View : NetSteps.Accounts.Common.Models.ICommissions_AccountTitles_View
	{
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.ICorporateUser), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CorporateUser : NetSteps.Accounts.Common.Models.ICorporateUser
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.ICorporateUser.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Locale.Common.Models.ICountry), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Country : NetSteps.Locale.Common.Models.ICountry
	{
	}

	[ContainerRegister(typeof(NetSteps.Payments.Common.Models.ICreditCardType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class CreditCardType : NetSteps.Payments.Common.Models.ICreditCardType
	{
	}

	[ContainerRegister(typeof(NetSteps.Locale.Common.Models.ICurrency), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Currency : NetSteps.Locale.Common.Models.ICurrency
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IDescriptionTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DescriptionTranslation : NetSteps.Content.Common.Models.IDescriptionTranslation
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDeviceNotification), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DeviceNotification : NetSteps.Communication.Common.Models.IDeviceNotification
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IAccountDevice NetSteps.Communication.Common.Models.IDeviceNotification.AccountDevice
		{
			get { return AccountDevice; }
			set { AccountDevice = (AccountDevice)value; }
		}

		NetSteps.Communication.Common.Models.IDomainEventQueueItem NetSteps.Communication.Common.Models.IDeviceNotification.DomainEventQueueItem
		{
			get { return DomainEventQueueItem; }
			set { DomainEventQueueItem = (DomainEventQueueItem)value; }
		}

		NetSteps.Communication.Common.Models.IQueueItemStatus NetSteps.Communication.Common.Models.IDeviceNotification.QueueItemStatus
		{
			get { return QueueItemStatus; }
			set { QueueItemStatus = (QueueItemStatus)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDeviceType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DeviceType : NetSteps.Communication.Common.Models.IDeviceType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAccountDevice> NetSteps.Communication.Common.Models.IDeviceType.AccountDevices
		{
			get { return AccountDevices.Cast<NetSteps.Communication.Common.Models.IAccountDevice>(); }
		}

		void NetSteps.Communication.Common.Models.IDeviceType.AddAccountDevice(NetSteps.Communication.Common.Models.IAccountDevice item)
		{
			AccountDevices.Add((AccountDevice)item);
		}

		void NetSteps.Communication.Common.Models.IDeviceType.RemoveAccountDevice(NetSteps.Communication.Common.Models.IAccountDevice item)
		{
			AccountDevices.Remove((AccountDevice)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDistributionList), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DistributionList : NetSteps.Communication.Common.Models.IDistributionList
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IDistributionSubscriber> NetSteps.Communication.Common.Models.IDistributionList.DistributionSubscribers
		{
			get { return DistributionSubscribers.Cast<NetSteps.Communication.Common.Models.IDistributionSubscriber>(); }
		}

		void NetSteps.Communication.Common.Models.IDistributionList.AddDistributionSubscriber(NetSteps.Communication.Common.Models.IDistributionSubscriber item)
		{
			DistributionSubscribers.Add((DistributionSubscriber)item);
		}

		void NetSteps.Communication.Common.Models.IDistributionList.RemoveDistributionSubscriber(NetSteps.Communication.Common.Models.IDistributionSubscriber item)
		{
			DistributionSubscribers.Remove((DistributionSubscriber)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDistributionListType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DistributionListType : NetSteps.Communication.Common.Models.IDistributionListType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IDistributionList> NetSteps.Communication.Common.Models.IDistributionListType.DistributionLists
		{
			get { return DistributionLists.Cast<NetSteps.Communication.Common.Models.IDistributionList>(); }
		}

		void NetSteps.Communication.Common.Models.IDistributionListType.AddDistributionList(NetSteps.Communication.Common.Models.IDistributionList item)
		{
			DistributionLists.Add((DistributionList)item);
		}

		void NetSteps.Communication.Common.Models.IDistributionListType.RemoveDistributionList(NetSteps.Communication.Common.Models.IDistributionList item)
		{
			DistributionLists.Remove((DistributionList)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDistributionSubscriber), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DistributionSubscriber : NetSteps.Communication.Common.Models.IDistributionSubscriber
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDomainEventQueueItem), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DomainEventQueueItem : NetSteps.Communication.Common.Models.IDomainEventQueueItem
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IDomainEventType NetSteps.Communication.Common.Models.IDomainEventQueueItem.DomainEventType
		{
			get { return DomainEventType; }
			set { DomainEventType = (DomainEventType)value; }
		}

		NetSteps.Communication.Common.Models.IEventContext NetSteps.Communication.Common.Models.IDomainEventQueueItem.EventContext
		{
			get { return EventContext; }
			set { EventContext = (EventContext)value; }
		}

		NetSteps.Communication.Common.Models.IQueueItemPriority NetSteps.Communication.Common.Models.IDomainEventQueueItem.QueueItemPriority
		{
			get { return QueueItemPriority; }
			set { QueueItemPriority = (QueueItemPriority)value; }
		}

		NetSteps.Communication.Common.Models.IQueueItemStatus NetSteps.Communication.Common.Models.IDomainEventQueueItem.QueueItemStatus
		{
			get { return QueueItemStatus; }
			set { QueueItemStatus = (QueueItemStatus)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IDeviceNotification> NetSteps.Communication.Common.Models.IDomainEventQueueItem.DeviceNotifications
		{
			get { return DeviceNotifications.Cast<NetSteps.Communication.Common.Models.IDeviceNotification>(); }
		}

		void NetSteps.Communication.Common.Models.IDomainEventQueueItem.AddDeviceNotification(NetSteps.Communication.Common.Models.IDeviceNotification item)
		{
			DeviceNotifications.Add((DeviceNotification)item);
		}

		void NetSteps.Communication.Common.Models.IDomainEventQueueItem.RemoveDeviceNotification(NetSteps.Communication.Common.Models.IDeviceNotification item)
		{
			DeviceNotifications.Remove((DeviceNotification)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDomainEventType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DomainEventType : NetSteps.Communication.Common.Models.IDomainEventType
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IDomainEventTypeCategory NetSteps.Communication.Common.Models.IDomainEventType.DomainEventTypeCategory
		{
			get { return DomainEventTypeCategory; }
			set { DomainEventTypeCategory = (DomainEventTypeCategory)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignOptOut> NetSteps.Communication.Common.Models.IDomainEventType.CampaignOptOuts
		{
			get { return CampaignOptOuts.Cast<NetSteps.Communication.Common.Models.ICampaignOptOut>(); }
		}

		void NetSteps.Communication.Common.Models.IDomainEventType.AddCampaignOptOut(NetSteps.Communication.Common.Models.ICampaignOptOut item)
		{
			CampaignOptOuts.Add((CampaignOptOut)item);
		}

		void NetSteps.Communication.Common.Models.IDomainEventType.RemoveCampaignOptOut(NetSteps.Communication.Common.Models.ICampaignOptOut item)
		{
			CampaignOptOuts.Remove((CampaignOptOut)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaign> NetSteps.Communication.Common.Models.IDomainEventType.Campaigns
		{
			get { return Campaigns.Cast<NetSteps.Communication.Common.Models.ICampaign>(); }
		}

		void NetSteps.Communication.Common.Models.IDomainEventType.AddCampaign(NetSteps.Communication.Common.Models.ICampaign item)
		{
			Campaigns.Add((Campaign)item);
		}

		void NetSteps.Communication.Common.Models.IDomainEventType.RemoveCampaign(NetSteps.Communication.Common.Models.ICampaign item)
		{
			Campaigns.Remove((Campaign)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IDomainEventQueueItem> NetSteps.Communication.Common.Models.IDomainEventType.DomainEventQueueItems
		{
			get { return DomainEventQueueItems.Cast<NetSteps.Communication.Common.Models.IDomainEventQueueItem>(); }
		}

		void NetSteps.Communication.Common.Models.IDomainEventType.AddDomainEventQueueItem(NetSteps.Communication.Common.Models.IDomainEventQueueItem item)
		{
			DomainEventQueueItems.Add((DomainEventQueueItem)item);
		}

		void NetSteps.Communication.Common.Models.IDomainEventType.RemoveDomainEventQueueItem(NetSteps.Communication.Common.Models.IDomainEventQueueItem item)
		{
			DomainEventQueueItems.Remove((DomainEventQueueItem)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IDomainEventTypeCategory), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DomainEventTypeCategory : NetSteps.Communication.Common.Models.IDomainEventTypeCategory
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IDomainEventType> NetSteps.Communication.Common.Models.IDomainEventTypeCategory.DomainEventTypes
		{
			get { return DomainEventTypes.Cast<NetSteps.Communication.Common.Models.IDomainEventType>(); }
		}

		void NetSteps.Communication.Common.Models.IDomainEventTypeCategory.AddDomainEventType(NetSteps.Communication.Common.Models.IDomainEventType item)
		{
			DomainEventTypes.Add((DomainEventType)item);
		}

		void NetSteps.Communication.Common.Models.IDomainEventTypeCategory.RemoveDomainEventType(NetSteps.Communication.Common.Models.IDomainEventType item)
		{
			DomainEventTypes.Remove((DomainEventType)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IDynamicKit), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DynamicKit : NetSteps.Products.Common.Models.IDynamicKit
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IDynamicKitPricingType NetSteps.Products.Common.Models.IDynamicKit.DynamicKitPricingType
		{
			get { return DynamicKitPricingType; }
			set { DynamicKitPricingType = (DynamicKitPricingType)value; }
		}

		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.IDynamicKit.Product
		{
			get { return Product; }
			set { Product = (Product)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IDynamicKitGroup> NetSteps.Products.Common.Models.IDynamicKit.DynamicKitGroups
		{
			get { return DynamicKitGroups.Cast<NetSteps.Products.Common.Models.IDynamicKitGroup>(); }
		}

		void NetSteps.Products.Common.Models.IDynamicKit.AddDynamicKitGroup(NetSteps.Products.Common.Models.IDynamicKitGroup item)
		{
			DynamicKitGroups.Add((DynamicKitGroup)item);
		}

		void NetSteps.Products.Common.Models.IDynamicKit.RemoveDynamicKitGroup(NetSteps.Products.Common.Models.IDynamicKitGroup item)
		{
			DynamicKitGroups.Remove((DynamicKitGroup)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IDynamicKitGroup), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DynamicKitGroup : NetSteps.Products.Common.Models.IDynamicKitGroup
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IDynamicKitGroupRule> NetSteps.Products.Common.Models.IDynamicKitGroup.DynamicKitGroupRules
		{
			get { return DynamicKitGroupRules.Cast<NetSteps.Products.Common.Models.IDynamicKitGroupRule>(); }
		}

		void NetSteps.Products.Common.Models.IDynamicKitGroup.AddDynamicKitGroupRule(NetSteps.Products.Common.Models.IDynamicKitGroupRule item)
		{
			DynamicKitGroupRules.Add((DynamicKitGroupRule)item);
		}

		void NetSteps.Products.Common.Models.IDynamicKitGroup.RemoveDynamicKitGroupRule(NetSteps.Products.Common.Models.IDynamicKitGroupRule item)
		{
			DynamicKitGroupRules.Remove((DynamicKitGroupRule)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IDescriptionTranslation> NetSteps.Products.Common.Models.IDynamicKitGroup.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.IDescriptionTranslation>(); }
		}

		void NetSteps.Products.Common.Models.IDynamicKitGroup.AddTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Add((DescriptionTranslation)item);
		}

		void NetSteps.Products.Common.Models.IDynamicKitGroup.RemoveTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Remove((DescriptionTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IDynamicKitGroupRule), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DynamicKitGroupRule : NetSteps.Products.Common.Models.IDynamicKitGroupRule
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IDynamicKitGroup NetSteps.Products.Common.Models.IDynamicKitGroupRule.DynamicKitGroup
		{
			get { return DynamicKitGroup; }
			set { DynamicKitGroup = (DynamicKitGroup)value; }
		}

		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.IDynamicKitGroupRule.Product
		{
			get { return Product; }
			set { Product = (Product)value; }
		}

		NetSteps.Products.Common.Models.IProductType NetSteps.Products.Common.Models.IDynamicKitGroupRule.ProductType
		{
			get { return ProductType; }
			set { ProductType = (ProductType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IDynamicKitPricingType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class DynamicKitPricingType : NetSteps.Products.Common.Models.IDynamicKitPricingType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IDynamicKit> NetSteps.Products.Common.Models.IDynamicKitPricingType.DynamicKits
		{
			get { return DynamicKits.Cast<NetSteps.Products.Common.Models.IDynamicKit>(); }
		}

		void NetSteps.Products.Common.Models.IDynamicKitPricingType.AddDynamicKit(NetSteps.Products.Common.Models.IDynamicKit item)
		{
			DynamicKits.Add((DynamicKit)item);
		}

		void NetSteps.Products.Common.Models.IDynamicKitPricingType.RemoveDynamicKit(NetSteps.Products.Common.Models.IDynamicKit item)
		{
			DynamicKits.Remove((DynamicKit)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailBodyTextType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailBodyTextType : NetSteps.Communication.Common.Models.IEmailBodyTextType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IEmailTemplate> NetSteps.Communication.Common.Models.IEmailBodyTextType.EmailTemplates
		{
			get { return EmailTemplates.Cast<NetSteps.Communication.Common.Models.IEmailTemplate>(); }
		}

		void NetSteps.Communication.Common.Models.IEmailBodyTextType.AddEmailTemplate(NetSteps.Communication.Common.Models.IEmailTemplate item)
		{
			EmailTemplates.Add((EmailTemplate)item);
		}

		void NetSteps.Communication.Common.Models.IEmailBodyTextType.RemoveEmailTemplate(NetSteps.Communication.Common.Models.IEmailTemplate item)
		{
			EmailTemplates.Remove((EmailTemplate)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailCampaignAction), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailCampaignAction : NetSteps.Communication.Common.Models.IEmailCampaignAction
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.ICampaignAction NetSteps.Communication.Common.Models.IEmailCampaignAction.CampaignAction
		{
			get { return CampaignAction; }
			set { CampaignAction = (CampaignAction)value; }
		}

		NetSteps.Communication.Common.Models.IEmailTemplate NetSteps.Communication.Common.Models.IEmailCampaignAction.EmailTemplate
		{
			get { return EmailTemplate; }
			set { EmailTemplate = (EmailTemplate)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IEmailSignature), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailSignature : NetSteps.Accounts.Common.Models.IEmailSignature
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IAccount NetSteps.Accounts.Common.Models.IEmailSignature.Account
		{
			get { return Account; }
			set { Account = (Account)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailTemplate), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailTemplate : NetSteps.Communication.Common.Models.IEmailTemplate
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IEmailBodyTextType NetSteps.Communication.Common.Models.IEmailTemplate.EmailBodyTextType
		{
			get { return EmailBodyTextType; }
			set { EmailBodyTextType = (EmailBodyTextType)value; }
		}

		NetSteps.Communication.Common.Models.IEmailTemplateType NetSteps.Communication.Common.Models.IEmailTemplate.EmailTemplateType
		{
			get { return EmailTemplateType; }
			set { EmailTemplateType = (EmailTemplateType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IEmailCampaignAction> NetSteps.Communication.Common.Models.IEmailTemplate.EmailCampaignActions
		{
			get { return EmailCampaignActions.Cast<NetSteps.Communication.Common.Models.IEmailCampaignAction>(); }
		}

		void NetSteps.Communication.Common.Models.IEmailTemplate.AddEmailCampaignAction(NetSteps.Communication.Common.Models.IEmailCampaignAction item)
		{
			EmailCampaignActions.Add((EmailCampaignAction)item);
		}

		void NetSteps.Communication.Common.Models.IEmailTemplate.RemoveEmailCampaignAction(NetSteps.Communication.Common.Models.IEmailCampaignAction item)
		{
			EmailCampaignActions.Remove((EmailCampaignAction)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IEmailTemplateTranslation> NetSteps.Communication.Common.Models.IEmailTemplate.EmailTemplateTranslations
		{
			get { return EmailTemplateTranslations.Cast<NetSteps.Communication.Common.Models.IEmailTemplateTranslation>(); }
		}

		void NetSteps.Communication.Common.Models.IEmailTemplate.AddEmailTemplateTranslation(NetSteps.Communication.Common.Models.IEmailTemplateTranslation item)
		{
			EmailTemplateTranslations.Add((EmailTemplateTranslation)item);
		}

		void NetSteps.Communication.Common.Models.IEmailTemplate.RemoveEmailTemplateTranslation(NetSteps.Communication.Common.Models.IEmailTemplateTranslation item)
		{
			EmailTemplateTranslations.Remove((EmailTemplateTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailTemplateAttribute), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailTemplateAttribute : NetSteps.Communication.Common.Models.IEmailTemplateAttribute
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailTemplateAttributeConnection), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailTemplateAttributeConnection : NetSteps.Communication.Common.Models.IEmailTemplateAttributeConnection
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailTemplateToken), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailTemplateToken : NetSteps.Communication.Common.Models.IEmailTemplateToken
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailTemplateTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailTemplateTranslation : NetSteps.Communication.Common.Models.IEmailTemplateTranslation
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailTemplateType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailTemplateType : NetSteps.Communication.Common.Models.IEmailTemplateType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IEmailTemplate> NetSteps.Communication.Common.Models.IEmailTemplateType.EmailTemplates
		{
			get { return EmailTemplates.Cast<NetSteps.Communication.Common.Models.IEmailTemplate>(); }
		}

		void NetSteps.Communication.Common.Models.IEmailTemplateType.AddEmailTemplate(NetSteps.Communication.Common.Models.IEmailTemplate item)
		{
			EmailTemplates.Add((EmailTemplate)item);
		}

		void NetSteps.Communication.Common.Models.IEmailTemplateType.RemoveEmailTemplate(NetSteps.Communication.Common.Models.IEmailTemplate item)
		{
			EmailTemplates.Remove((EmailTemplate)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IToken> NetSteps.Communication.Common.Models.IEmailTemplateType.Tokens
		{
			get { return Tokens.Cast<NetSteps.Communication.Common.Models.IToken>(); }
		}

		void NetSteps.Communication.Common.Models.IEmailTemplateType.AddToken(NetSteps.Communication.Common.Models.IToken item)
		{
			Tokens.Add((Token)item);
		}

		void NetSteps.Communication.Common.Models.IEmailTemplateType.RemoveToken(NetSteps.Communication.Common.Models.IToken item)
		{
			Tokens.Remove((Token)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEmailType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EmailType : NetSteps.Communication.Common.Models.IEmailType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAccountEmailLog> NetSteps.Communication.Common.Models.IEmailType.AccountEmailLogs
		{
			get { return AccountEmailLogs.Cast<NetSteps.Communication.Common.Models.IAccountEmailLog>(); }
		}

		void NetSteps.Communication.Common.Models.IEmailType.AddAccountEmailLog(NetSteps.Communication.Common.Models.IAccountEmailLog item)
		{
			AccountEmailLogs.Add((AccountEmailLog)item);
		}

		void NetSteps.Communication.Common.Models.IEmailType.RemoveAccountEmailLog(NetSteps.Communication.Common.Models.IAccountEmailLog item)
		{
			AccountEmailLogs.Remove((AccountEmailLog)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Logging.Common.Models.IErrorLog), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ErrorLog : NetSteps.Diagnostics.Logging.Common.Models.IErrorLog
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IEventContext), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class EventContext : NetSteps.Communication.Common.Models.IEventContext
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IFileResource), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class FileResource : NetSteps.Content.Common.Models.IFileResource
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IFileResourceProperty> NetSteps.Content.Common.Models.IFileResource.FileResourceProperties
		{
			get { return FileResourceProperties.Cast<NetSteps.Content.Common.Models.IFileResourceProperty>(); }
		}

		void NetSteps.Content.Common.Models.IFileResource.AddFileResourceProperty(NetSteps.Content.Common.Models.IFileResourceProperty item)
		{
			FileResourceProperties.Add((FileResourceProperty)item);
		}

		void NetSteps.Content.Common.Models.IFileResource.RemoveFileResourceProperty(NetSteps.Content.Common.Models.IFileResourceProperty item)
		{
			FileResourceProperties.Remove((FileResourceProperty)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IFileResourceProperty), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class FileResourceProperty : NetSteps.Content.Common.Models.IFileResourceProperty
	{
		#region Singular Navigation Properties
		NetSteps.Content.Common.Models.IFileResource NetSteps.Content.Common.Models.IFileResourceProperty.FileResource
		{
			get { return FileResource; }
			set { FileResource = (FileResource)value; }
		}

		NetSteps.Content.Common.Models.IFileResourcePropertyType NetSteps.Content.Common.Models.IFileResourceProperty.FileResourcePropertyType
		{
			get { return FileResourcePropertyType; }
			set { FileResourcePropertyType = (FileResourcePropertyType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IFileResourcePropertyType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class FileResourcePropertyType : NetSteps.Content.Common.Models.IFileResourcePropertyType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IFileResourceProperty> NetSteps.Content.Common.Models.IFileResourcePropertyType.FileResourceProperties
		{
			get { return FileResourceProperties.Cast<NetSteps.Content.Common.Models.IFileResourceProperty>(); }
		}

		void NetSteps.Content.Common.Models.IFileResourcePropertyType.AddFileResourceProperty(NetSteps.Content.Common.Models.IFileResourceProperty item)
		{
			FileResourceProperties.Add((FileResourceProperty)item);
		}

		void NetSteps.Content.Common.Models.IFileResourcePropertyType.RemoveFileResourceProperty(NetSteps.Content.Common.Models.IFileResourceProperty item)
		{
			FileResourceProperties.Remove((FileResourceProperty)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IFileResourceType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class FileResourceType : NetSteps.Content.Common.Models.IFileResourceType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IFileResource> NetSteps.Content.Common.Models.IFileResourceType.FileResources
		{
			get { return FileResources.Cast<NetSteps.Content.Common.Models.IFileResource>(); }
		}

		void NetSteps.Content.Common.Models.IFileResourceType.AddFileResource(NetSteps.Content.Common.Models.IFileResource item)
		{
			FileResources.Add((FileResource)item);
		}

		void NetSteps.Content.Common.Models.IFileResourceType.RemoveFileResource(NetSteps.Content.Common.Models.IFileResource item)
		{
			FileResources.Remove((FileResource)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IFunction), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Function : NetSteps.Accounts.Common.Models.IFunction
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IRole> NetSteps.Accounts.Common.Models.IFunction.Roles
		{
			get { return Roles.Cast<NetSteps.Accounts.Common.Models.IRole>(); }
		}

		void NetSteps.Accounts.Common.Models.IFunction.AddRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Add((Role)item);
		}

		void NetSteps.Accounts.Common.Models.IFunction.RemoveRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Remove((Role)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IUserFunctionOverride> NetSteps.Accounts.Common.Models.IFunction.UserFunctionOverrides
		{
			get { return UserFunctionOverrides.Cast<NetSteps.Accounts.Common.Models.IUserFunctionOverride>(); }
		}

		void NetSteps.Accounts.Common.Models.IFunction.AddUserFunctionOverride(NetSteps.Accounts.Common.Models.IUserFunctionOverride item)
		{
			UserFunctionOverrides.Add((UserFunctionOverride)item);
		}

		void NetSteps.Accounts.Common.Models.IFunction.RemoveUserFunctionOverride(NetSteps.Accounts.Common.Models.IUserFunctionOverride item)
		{
			UserFunctionOverrides.Remove((UserFunctionOverride)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IGender), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Gender : NetSteps.Accounts.Common.Models.IGender
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccount> NetSteps.Accounts.Common.Models.IGender.Accounts
		{
			get { return Accounts.Cast<NetSteps.Accounts.Common.Models.IAccount>(); }
		}

		void NetSteps.Accounts.Common.Models.IGender.AddAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Add((Account)item);
		}

		void NetSteps.Accounts.Common.Models.IGender.RemoveAccount(NetSteps.Accounts.Common.Models.IAccount item)
		{
			Accounts.Remove((Account)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Payments.Common.Models.IGiftCard), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class GiftCard : NetSteps.Payments.Common.Models.IGiftCard
	{
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IHostessRewardRule), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HostessRewardRule : NetSteps.Orders.Common.Models.IHostessRewardRule
	{
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IHostessRewardRuleType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HostessRewardRuleType : NetSteps.Orders.Common.Models.IHostessRewardRuleType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IHostessRewardRule> NetSteps.Orders.Common.Models.IHostessRewardRuleType.HostessRewardRules
		{
			get { return HostessRewardRules.Cast<NetSteps.Orders.Common.Models.IHostessRewardRule>(); }
		}

		void NetSteps.Orders.Common.Models.IHostessRewardRuleType.AddHostessRewardRule(NetSteps.Orders.Common.Models.IHostessRewardRule item)
		{
			HostessRewardRules.Add((HostessRewardRule)item);
		}

		void NetSteps.Orders.Common.Models.IHostessRewardRuleType.RemoveHostessRewardRule(NetSteps.Orders.Common.Models.IHostessRewardRule item)
		{
			HostessRewardRules.Remove((HostessRewardRule)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IHostessRewardType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HostessRewardType : NetSteps.Orders.Common.Models.IHostessRewardType
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlContent), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlContent : NetSteps.Content.Common.Models.IHtmlContent
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlContentHistory> NetSteps.Content.Common.Models.IHtmlContent.HtmlContentHistories
		{
			get { return HtmlContentHistories.Cast<NetSteps.Content.Common.Models.IHtmlContentHistory>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContent.AddHtmlContentHistory(NetSteps.Content.Common.Models.IHtmlContentHistory item)
		{
			HtmlContentHistories.Add((HtmlContentHistory)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContent.RemoveHtmlContentHistory(NetSteps.Content.Common.Models.IHtmlContentHistory item)
		{
			HtmlContentHistories.Remove((HtmlContentHistory)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IHtmlContentWorkflow> NetSteps.Content.Common.Models.IHtmlContent.HtmlContentWorkflows
		{
			get { return HtmlContentWorkflows.Cast<NetSteps.Content.Common.Models.IHtmlContentWorkflow>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContent.AddHtmlContentWorkflow(NetSteps.Content.Common.Models.IHtmlContentWorkflow item)
		{
			HtmlContentWorkflows.Add((HtmlContentWorkflow)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContent.RemoveHtmlContentWorkflow(NetSteps.Content.Common.Models.IHtmlContentWorkflow item)
		{
			HtmlContentWorkflows.Remove((HtmlContentWorkflow)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IHtmlElement> NetSteps.Content.Common.Models.IHtmlContent.HtmlElements
		{
			get { return HtmlElements.Cast<NetSteps.Content.Common.Models.IHtmlElement>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContent.AddHtmlElement(NetSteps.Content.Common.Models.IHtmlElement item)
		{
			HtmlElements.Add((HtmlElement)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContent.RemoveHtmlElement(NetSteps.Content.Common.Models.IHtmlElement item)
		{
			HtmlElements.Remove((HtmlElement)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IHtmlSectionChoice> NetSteps.Content.Common.Models.IHtmlContent.HtmlSectionChoices
		{
			get { return HtmlSectionChoices.Cast<NetSteps.Content.Common.Models.IHtmlSectionChoice>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContent.AddHtmlSectionChoice(NetSteps.Content.Common.Models.IHtmlSectionChoice item)
		{
			HtmlSectionChoices.Add((HtmlSectionChoice)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContent.RemoveHtmlSectionChoice(NetSteps.Content.Common.Models.IHtmlSectionChoice item)
		{
			HtmlSectionChoices.Remove((HtmlSectionChoice)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IHtmlSectionContent> NetSteps.Content.Common.Models.IHtmlContent.HtmlSectionContents
		{
			get { return HtmlSectionContents.Cast<NetSteps.Content.Common.Models.IHtmlSectionContent>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContent.AddHtmlSectionContent(NetSteps.Content.Common.Models.IHtmlSectionContent item)
		{
			HtmlSectionContents.Add((HtmlSectionContent)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContent.RemoveHtmlSectionContent(NetSteps.Content.Common.Models.IHtmlSectionContent item)
		{
			HtmlSectionContents.Remove((HtmlSectionContent)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlContentAccountStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlContentAccountStatus : NetSteps.Content.Common.Models.IHtmlContentAccountStatus
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlContentEditorType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlContentEditorType : NetSteps.Content.Common.Models.IHtmlContentEditorType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlSection> NetSteps.Content.Common.Models.IHtmlContentEditorType.HtmlSections
		{
			get { return HtmlSections.Cast<NetSteps.Content.Common.Models.IHtmlSection>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContentEditorType.AddHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Add((HtmlSection)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContentEditorType.RemoveHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Remove((HtmlSection)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlContentHistory), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlContentHistory : NetSteps.Content.Common.Models.IHtmlContentHistory
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlContentStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlContentStatus : NetSteps.Content.Common.Models.IHtmlContentStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlContentHistory> NetSteps.Content.Common.Models.IHtmlContentStatus.HtmlContentHistories
		{
			get { return HtmlContentHistories.Cast<NetSteps.Content.Common.Models.IHtmlContentHistory>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContentStatus.AddHtmlContentHistory(NetSteps.Content.Common.Models.IHtmlContentHistory item)
		{
			HtmlContentHistories.Add((HtmlContentHistory)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContentStatus.RemoveHtmlContentHistory(NetSteps.Content.Common.Models.IHtmlContentHistory item)
		{
			HtmlContentHistories.Remove((HtmlContentHistory)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IHtmlContent> NetSteps.Content.Common.Models.IHtmlContentStatus.HtmlContents
		{
			get { return HtmlContents.Cast<NetSteps.Content.Common.Models.IHtmlContent>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContentStatus.AddHtmlContent(NetSteps.Content.Common.Models.IHtmlContent item)
		{
			HtmlContents.Add((HtmlContent)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContentStatus.RemoveHtmlContent(NetSteps.Content.Common.Models.IHtmlContent item)
		{
			HtmlContents.Remove((HtmlContent)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlContentWorkflow), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlContentWorkflow : NetSteps.Content.Common.Models.IHtmlContentWorkflow
	{
		#region Singular Navigation Properties
		NetSteps.Content.Common.Models.IHtmlContent NetSteps.Content.Common.Models.IHtmlContentWorkflow.HtmlContent
		{
			get { return HtmlContent; }
			set { HtmlContent = (HtmlContent)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlContentWorkflowType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlContentWorkflowType : NetSteps.Content.Common.Models.IHtmlContentWorkflowType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlContentWorkflow> NetSteps.Content.Common.Models.IHtmlContentWorkflowType.HtmlContentWorkflows
		{
			get { return HtmlContentWorkflows.Cast<NetSteps.Content.Common.Models.IHtmlContentWorkflow>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlContentWorkflowType.AddHtmlContentWorkflow(NetSteps.Content.Common.Models.IHtmlContentWorkflow item)
		{
			HtmlContentWorkflows.Add((HtmlContentWorkflow)item);
		}

		void NetSteps.Content.Common.Models.IHtmlContentWorkflowType.RemoveHtmlContentWorkflow(NetSteps.Content.Common.Models.IHtmlContentWorkflow item)
		{
			HtmlContentWorkflows.Remove((HtmlContentWorkflow)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlElement), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlElement : NetSteps.Content.Common.Models.IHtmlElement
	{
		#region Singular Navigation Properties
		NetSteps.Content.Common.Models.IHtmlContent NetSteps.Content.Common.Models.IHtmlElement.HtmlContent
		{
			get { return HtmlContent; }
			set { HtmlContent = (HtmlContent)value; }
		}

		NetSteps.Content.Common.Models.IHtmlElementType NetSteps.Content.Common.Models.IHtmlElement.HtmlElementType
		{
			get { return HtmlElementType; }
			set { HtmlElementType = (HtmlElementType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlElementType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlElementType : NetSteps.Content.Common.Models.IHtmlElementType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlElement> NetSteps.Content.Common.Models.IHtmlElementType.HtmlElements
		{
			get { return HtmlElements.Cast<NetSteps.Content.Common.Models.IHtmlElement>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlElementType.AddHtmlElement(NetSteps.Content.Common.Models.IHtmlElement item)
		{
			HtmlElements.Add((HtmlElement)item);
		}

		void NetSteps.Content.Common.Models.IHtmlElementType.RemoveHtmlElement(NetSteps.Content.Common.Models.IHtmlElement item)
		{
			HtmlElements.Remove((HtmlElement)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlInputType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlInputType : NetSteps.Content.Common.Models.IHtmlInputType
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlSection), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlSection : NetSteps.Content.Common.Models.IHtmlSection
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlSectionChoice> NetSteps.Content.Common.Models.IHtmlSection.HtmlSectionChoices
		{
			get { return HtmlSectionChoices.Cast<NetSteps.Content.Common.Models.IHtmlSectionChoice>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlSection.AddHtmlSectionChoice(NetSteps.Content.Common.Models.IHtmlSectionChoice item)
		{
			HtmlSectionChoices.Add((HtmlSectionChoice)item);
		}

		void NetSteps.Content.Common.Models.IHtmlSection.RemoveHtmlSectionChoice(NetSteps.Content.Common.Models.IHtmlSectionChoice item)
		{
			HtmlSectionChoices.Remove((HtmlSectionChoice)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IHtmlSectionContent> NetSteps.Content.Common.Models.IHtmlSection.HtmlSectionContents
		{
			get { return HtmlSectionContents.Cast<NetSteps.Content.Common.Models.IHtmlSectionContent>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlSection.AddHtmlSectionContent(NetSteps.Content.Common.Models.IHtmlSectionContent item)
		{
			HtmlSectionContents.Add((HtmlSectionContent)item);
		}

		void NetSteps.Content.Common.Models.IHtmlSection.RemoveHtmlSectionContent(NetSteps.Content.Common.Models.IHtmlSectionContent item)
		{
			HtmlSectionContents.Remove((HtmlSectionContent)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlSectionChoice), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlSectionChoice : NetSteps.Content.Common.Models.IHtmlSectionChoice
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlSectionContent), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlSectionContent : NetSteps.Content.Common.Models.IHtmlSectionContent
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IHtmlSectionEditType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class HtmlSectionEditType : NetSteps.Content.Common.Models.IHtmlSectionEditType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlSection> NetSteps.Content.Common.Models.IHtmlSectionEditType.HtmlSections
		{
			get { return HtmlSections.Cast<NetSteps.Content.Common.Models.IHtmlSection>(); }
		}

		void NetSteps.Content.Common.Models.IHtmlSectionEditType.AddHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Add((HtmlSection)item);
		}

		void NetSteps.Content.Common.Models.IHtmlSectionEditType.RemoveHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Remove((HtmlSection)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IIntervalType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class IntervalType : NetSteps.Orders.Common.Models.IIntervalType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IAutoshipSchedule> NetSteps.Orders.Common.Models.IIntervalType.AutoshipSchedules
		{
			get { return AutoshipSchedules.Cast<NetSteps.Orders.Common.Models.IAutoshipSchedule>(); }
		}

		void NetSteps.Orders.Common.Models.IIntervalType.AddAutoshipSchedule(NetSteps.Orders.Common.Models.IAutoshipSchedule item)
		{
			AutoshipSchedules.Add((AutoshipSchedule)item);
		}

		void NetSteps.Orders.Common.Models.IIntervalType.RemoveAutoshipSchedule(NetSteps.Orders.Common.Models.IAutoshipSchedule item)
		{
			AutoshipSchedules.Remove((AutoshipSchedule)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Locale.Common.Models.ILanguage), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Language : NetSteps.Locale.Common.Models.ILanguage
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.ILayout), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Layout : NetSteps.Content.Common.Models.ILayout
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlSection> NetSteps.Content.Common.Models.ILayout.HtmlSections
		{
			get { return HtmlSections.Cast<NetSteps.Content.Common.Models.IHtmlSection>(); }
		}

		void NetSteps.Content.Common.Models.ILayout.AddHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Add((HtmlSection)item);
		}

		void NetSteps.Content.Common.Models.ILayout.RemoveHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Remove((HtmlSection)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IListValueType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ListValueType : NetSteps.Accounts.Common.Models.IListValueType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountListValue> NetSteps.Accounts.Common.Models.IListValueType.AccountListValues
		{
			get { return AccountListValues.Cast<NetSteps.Accounts.Common.Models.IAccountListValue>(); }
		}

		void NetSteps.Accounts.Common.Models.IListValueType.AddAccountListValue(NetSteps.Accounts.Common.Models.IAccountListValue item)
		{
			AccountListValues.Add((AccountListValue)item);
		}

		void NetSteps.Accounts.Common.Models.IListValueType.RemoveAccountListValue(NetSteps.Accounts.Common.Models.IAccountListValue item)
		{
			AccountListValues.Remove((AccountListValue)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.ILocalizedKind), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class LocalizedKind : NetSteps.Content.Common.Models.ILocalizedKind
	{
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.ILogisticsProvider), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class LogisticsProvider : NetSteps.Logistics.Common.Models.ILogisticsProvider
	{
		#region Singular Navigation Properties
		NetSteps.Addresses.Common.Models.IAddress NetSteps.Logistics.Common.Models.ILogisticsProvider.Address
		{
			get { return Address; }
			set { Address = (Address)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IMailAccount), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailAccount : NetSteps.Communication.Common.Models.IMailAccount
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IMailDomain), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailDomain : NetSteps.Communication.Common.Models.IMailDomain
	{
	}

	[ContainerRegister(typeof(NetSteps.Locale.Common.Models.IMarket), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Market : NetSteps.Locale.Common.Models.IMarket
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IMarketStoreFront), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MarketStoreFront : NetSteps.Products.Common.Models.IMarketStoreFront
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IMerchant), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Merchant : NetSteps.Products.Common.Models.IMerchant
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IBrand NetSteps.Products.Common.Models.IMerchant.Brand
		{
			get { return Brand; }
			set { Brand = (Brand)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Addresses.Common.Models.IAddress> NetSteps.Products.Common.Models.IMerchant.Addresses
		{
			get { return Addresses.Cast<NetSteps.Addresses.Common.Models.IAddress>(); }
		}

		void NetSteps.Products.Common.Models.IMerchant.AddAddress(NetSteps.Addresses.Common.Models.IAddress item)
		{
			Addresses.Add((Address)item);
		}

		void NetSteps.Products.Common.Models.IMerchant.RemoveAddress(NetSteps.Addresses.Common.Models.IAddress item)
		{
			Addresses.Remove((Address)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.INavigation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Navigation : NetSteps.Content.Common.Models.INavigation
	{
		#region Singular Navigation Properties
		NetSteps.Content.Common.Models.INavigation NetSteps.Content.Common.Models.INavigation.BaseNavigation
		{
			get { return BaseNavigation; }
			set { BaseNavigation = (Navigation)value; }
		}

		NetSteps.Content.Common.Models.INavigation NetSteps.Content.Common.Models.INavigation.ParentNavigation
		{
			get { return ParentNavigation; }
			set { ParentNavigation = (Navigation)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.INavigation> NetSteps.Content.Common.Models.INavigation.BaseChildrenNavigations
		{
			get { return BaseChildrenNavigations.Cast<NetSteps.Content.Common.Models.INavigation>(); }
		}

		void NetSteps.Content.Common.Models.INavigation.AddBaseChildrenNavigation(NetSteps.Content.Common.Models.INavigation item)
		{
			BaseChildrenNavigations.Add((Navigation)item);
		}

		void NetSteps.Content.Common.Models.INavigation.RemoveBaseChildrenNavigation(NetSteps.Content.Common.Models.INavigation item)
		{
			BaseChildrenNavigations.Remove((Navigation)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.INavigation> NetSteps.Content.Common.Models.INavigation.ChildNavigations
		{
			get { return ChildNavigations.Cast<NetSteps.Content.Common.Models.INavigation>(); }
		}

		void NetSteps.Content.Common.Models.INavigation.AddChildNavigation(NetSteps.Content.Common.Models.INavigation item)
		{
			ChildNavigations.Add((Navigation)item);
		}

		void NetSteps.Content.Common.Models.INavigation.RemoveChildNavigation(NetSteps.Content.Common.Models.INavigation item)
		{
			ChildNavigations.Remove((Navigation)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.INavigationTranslation> NetSteps.Content.Common.Models.INavigation.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.INavigationTranslation>(); }
		}

		void NetSteps.Content.Common.Models.INavigation.AddTranslation(NetSteps.Content.Common.Models.INavigationTranslation item)
		{
			Translations.Add((NavigationTranslation)item);
		}

		void NetSteps.Content.Common.Models.INavigation.RemoveTranslation(NetSteps.Content.Common.Models.INavigationTranslation item)
		{
			Translations.Remove((NavigationTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.INavigationTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class NavigationTranslation : NetSteps.Content.Common.Models.INavigationTranslation
	{
		#region Singular Navigation Properties
		NetSteps.Content.Common.Models.INavigation NetSteps.Content.Common.Models.INavigationTranslation.Navigation
		{
			get { return Navigation; }
			set { Navigation = (Navigation)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.INavigationType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class NavigationType : NetSteps.Content.Common.Models.INavigationType
	{
	}

	[ContainerRegister(typeof(NetSteps.Marketing.Common.Models.INews), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class News : NetSteps.Marketing.Common.Models.INews
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.INewsletter), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Newsletter : NetSteps.Communication.Common.Models.INewsletter
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.INewsletterTrackingStatistic> NetSteps.Communication.Common.Models.INewsletter.NewsletterTrackingStatistics
		{
			get { return NewsletterTrackingStatistics.Cast<NetSteps.Communication.Common.Models.INewsletterTrackingStatistic>(); }
		}

		void NetSteps.Communication.Common.Models.INewsletter.AddNewsletterTrackingStatistic(NetSteps.Communication.Common.Models.INewsletterTrackingStatistic item)
		{
			NewsletterTrackingStatistics.Add((NewsletterTrackingStatistic)item);
		}

		void NetSteps.Communication.Common.Models.INewsletter.RemoveNewsletterTrackingStatistic(NetSteps.Communication.Common.Models.INewsletterTrackingStatistic item)
		{
			NewsletterTrackingStatistics.Remove((NewsletterTrackingStatistic)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.INewsletterTrackingStatistic), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class NewsletterTrackingStatistic : NetSteps.Communication.Common.Models.INewsletterTrackingStatistic
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.INewsletter NetSteps.Communication.Common.Models.INewsletterTrackingStatistic.Newsletter
		{
			get { return Newsletter; }
			set { Newsletter = (Newsletter)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Marketing.Common.Models.INewsType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class NewsType : NetSteps.Marketing.Common.Models.INewsType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Marketing.Common.Models.INewsTypeLanguageSort> NetSteps.Marketing.Common.Models.INewsType.NewsTypeLanguageSorts
		{
			get { return NewsTypeLanguageSorts.Cast<NetSteps.Marketing.Common.Models.INewsTypeLanguageSort>(); }
		}

		void NetSteps.Marketing.Common.Models.INewsType.AddNewsTypeLanguageSort(NetSteps.Marketing.Common.Models.INewsTypeLanguageSort item)
		{
			NewsTypeLanguageSorts.Add((NewsTypeLanguageSort)item);
		}

		void NetSteps.Marketing.Common.Models.INewsType.RemoveNewsTypeLanguageSort(NetSteps.Marketing.Common.Models.INewsTypeLanguageSort item)
		{
			NewsTypeLanguageSorts.Remove((NewsTypeLanguageSort)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Marketing.Common.Models.INewsTypeLanguageSort), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class NewsTypeLanguageSort : NetSteps.Marketing.Common.Models.INewsTypeLanguageSort
	{
		#region Singular Navigation Properties
		NetSteps.Marketing.Common.Models.INewsType NetSteps.Marketing.Common.Models.INewsTypeLanguageSort.NewsType
		{
			get { return NewsType; }
			set { NewsType = (NewsType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Common.Models.INote), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Note : NetSteps.Common.Models.INote
	{
		#region Singular Navigation Properties
		NetSteps.Common.Models.INote NetSteps.Common.Models.INote.Note1
		{
			get { return Note1; }
			set { Note1 = (Note)value; }
		}

		NetSteps.Common.Models.INoteType NetSteps.Common.Models.INote.NoteType
		{
			get { return NoteType; }
			set { NoteType = (NoteType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.INote> NetSteps.Common.Models.INote.Notes1
		{
			get { return Notes1.Cast<NetSteps.Common.Models.INote>(); }
		}

		void NetSteps.Common.Models.INote.AddNotes1(NetSteps.Common.Models.INote item)
		{
			Notes1.Add((Note)item);
		}

		void NetSteps.Common.Models.INote.RemoveNotes1(NetSteps.Common.Models.INote item)
		{
			Notes1.Remove((Note)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Common.Models.INoteType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class NoteType : NetSteps.Common.Models.INoteType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.INote> NetSteps.Common.Models.INoteType.Notes
		{
			get { return Notes.Cast<NetSteps.Common.Models.INote>(); }
		}

		void NetSteps.Common.Models.INoteType.AddNote(NetSteps.Common.Models.INote item)
		{
			Notes.Add((Note)item);
		}

		void NetSteps.Common.Models.INoteType.RemoveNote(NetSteps.Common.Models.INote item)
		{
			Notes.Remove((Note)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IOptOut), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OptOut : NetSteps.Communication.Common.Models.IOptOut
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Common.Models.IOptOutType NetSteps.Communication.Common.Models.IOptOut.OptOutType
		{
			get { return OptOutType; }
			set { OptOutType = (OptOutType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IOptOutType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OptOutType : NetSteps.Communication.Common.Models.IOptOutType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignOptOut> NetSteps.Communication.Common.Models.IOptOutType.CampaignOptOuts
		{
			get { return CampaignOptOuts.Cast<NetSteps.Communication.Common.Models.ICampaignOptOut>(); }
		}

		void NetSteps.Communication.Common.Models.IOptOutType.AddCampaignOptOut(NetSteps.Communication.Common.Models.ICampaignOptOut item)
		{
			CampaignOptOuts.Add((CampaignOptOut)item);
		}

		void NetSteps.Communication.Common.Models.IOptOutType.RemoveCampaignOptOut(NetSteps.Communication.Common.Models.ICampaignOptOut item)
		{
			CampaignOptOuts.Remove((CampaignOptOut)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IOptOut> NetSteps.Communication.Common.Models.IOptOutType.OptOuts
		{
			get { return OptOuts.Cast<NetSteps.Communication.Common.Models.IOptOut>(); }
		}

		void NetSteps.Communication.Common.Models.IOptOutType.AddOptOut(NetSteps.Communication.Common.Models.IOptOut item)
		{
			OptOuts.Add((OptOut)item);
		}

		void NetSteps.Communication.Common.Models.IOptOutType.RemoveOptOut(NetSteps.Communication.Common.Models.IOptOut item)
		{
			OptOuts.Remove((OptOut)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrder), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Order : NetSteps.Orders.Common.Models.IOrder
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.INote> NetSteps.Orders.Common.Models.IOrder.Notes
		{
			get { return Notes.Cast<NetSteps.Common.Models.INote>(); }
		}

		void NetSteps.Orders.Common.Models.IOrder.AddNote(NetSteps.Common.Models.INote item)
		{
			Notes.Add((Note)item);
		}

		void NetSteps.Orders.Common.Models.IOrder.RemoveNote(NetSteps.Common.Models.INote item)
		{
			Notes.Remove((Note)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderAdjustment> NetSteps.Orders.Common.Models.IOrder.OrderAdjustments
		{
			get { return OrderAdjustments.Cast<NetSteps.Orders.Common.Models.IOrderAdjustment>(); }
		}

		void NetSteps.Orders.Common.Models.IOrder.AddOrderAdjustment(NetSteps.Orders.Common.Models.IOrderAdjustment item)
		{
			OrderAdjustments.Add((OrderAdjustment)item);
		}

		void NetSteps.Orders.Common.Models.IOrder.RemoveOrderAdjustment(NetSteps.Orders.Common.Models.IOrderAdjustment item)
		{
			OrderAdjustments.Remove((OrderAdjustment)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderCustomer> NetSteps.Orders.Common.Models.IOrder.OrderCustomers
		{
			get { return OrderCustomers.Cast<NetSteps.Orders.Common.Models.IOrderCustomer>(); }
		}

		void NetSteps.Orders.Common.Models.IOrder.AddOrderCustomer(NetSteps.Orders.Common.Models.IOrderCustomer item)
		{
			OrderCustomers.Add((OrderCustomer)item);
		}

		void NetSteps.Orders.Common.Models.IOrder.RemoveOrderCustomer(NetSteps.Orders.Common.Models.IOrderCustomer item)
		{
			OrderCustomers.Remove((OrderCustomer)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderPaymentResult> NetSteps.Orders.Common.Models.IOrder.OrderPaymentResults
		{
			get { return OrderPaymentResults.Cast<NetSteps.Orders.Common.Models.IOrderPaymentResult>(); }
		}

		void NetSteps.Orders.Common.Models.IOrder.AddOrderPaymentResult(NetSteps.Orders.Common.Models.IOrderPaymentResult item)
		{
			OrderPaymentResults.Add((OrderPaymentResult)item);
		}

		void NetSteps.Orders.Common.Models.IOrder.RemoveOrderPaymentResult(NetSteps.Orders.Common.Models.IOrderPaymentResult item)
		{
			OrderPaymentResults.Remove((OrderPaymentResult)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderPayment> NetSteps.Orders.Common.Models.IOrder.OrderPayments
		{
			get { return OrderPayments.Cast<NetSteps.Orders.Common.Models.IOrderPayment>(); }
		}

		void NetSteps.Orders.Common.Models.IOrder.AddOrderPayment(NetSteps.Orders.Common.Models.IOrderPayment item)
		{
			OrderPayments.Add((OrderPayment)item);
		}

		void NetSteps.Orders.Common.Models.IOrder.RemoveOrderPayment(NetSteps.Orders.Common.Models.IOrderPayment item)
		{
			OrderPayments.Remove((OrderPayment)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderShipment> NetSteps.Orders.Common.Models.IOrder.OrderShipments
		{
			get { return OrderShipments.Cast<NetSteps.Orders.Common.Models.IOrderShipment>(); }
		}

		void NetSteps.Orders.Common.Models.IOrder.AddOrderShipment(NetSteps.Orders.Common.Models.IOrderShipment item)
		{
			OrderShipments.Add((OrderShipment)item);
		}

		void NetSteps.Orders.Common.Models.IOrder.RemoveOrderShipment(NetSteps.Orders.Common.Models.IOrderShipment item)
		{
			OrderShipments.Remove((OrderShipment)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderAdjustment), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderAdjustment : NetSteps.Orders.Common.Models.IOrderAdjustment
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IOrderAdjustment.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification> NetSteps.Orders.Common.Models.IOrderAdjustment.OrderAdjustmentOrderLineModifications
		{
			get { return OrderAdjustmentOrderLineModifications.Cast<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderAdjustment.AddOrderAdjustmentOrderLineModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification item)
		{
			OrderAdjustmentOrderLineModifications.Add((OrderAdjustmentOrderLineModification)item);
		}

		void NetSteps.Orders.Common.Models.IOrderAdjustment.RemoveOrderAdjustmentOrderLineModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification item)
		{
			OrderAdjustmentOrderLineModifications.Remove((OrderAdjustmentOrderLineModification)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification> NetSteps.Orders.Common.Models.IOrderAdjustment.OrderAdjustmentOrderModifications
		{
			get { return OrderAdjustmentOrderModifications.Cast<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderAdjustment.AddOrderAdjustmentOrderModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification item)
		{
			OrderAdjustmentOrderModifications.Add((OrderAdjustmentOrderModification)item);
		}

		void NetSteps.Orders.Common.Models.IOrderAdjustment.RemoveOrderAdjustmentOrderModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification item)
		{
			OrderAdjustmentOrderModifications.Remove((OrderAdjustmentOrderModification)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderAdjustmentOrderLineModification : NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderAdjustment NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification.OrderAdjustment
		{
			get { return OrderAdjustment; }
			set { OrderAdjustment = (OrderAdjustment)value; }
		}

		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification.OrderItem
		{
			get { return OrderItem; }
			set { OrderItem = (OrderItem)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderAdjustmentOrderModification : NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderAdjustment NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification.OrderAdjustment
		{
			get { return OrderAdjustment; }
			set { OrderAdjustment = (OrderAdjustment)value; }
		}

		NetSteps.Orders.Common.Models.IOrderCustomer NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification.OrderCustomer
		{
			get { return OrderCustomer; }
			set { OrderCustomer = (OrderCustomer)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderCustomer), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderCustomer : NetSteps.Orders.Common.Models.IOrderCustomer
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IOrderCustomer.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification> NetSteps.Orders.Common.Models.IOrderCustomer.OrderAdjustmentOrderModifications
		{
			get { return OrderAdjustmentOrderModifications.Cast<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.AddOrderAdjustmentOrderModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification item)
		{
			OrderAdjustmentOrderModifications.Add((OrderAdjustmentOrderModification)item);
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.RemoveOrderAdjustmentOrderModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderModification item)
		{
			OrderAdjustmentOrderModifications.Remove((OrderAdjustmentOrderModification)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItem> NetSteps.Orders.Common.Models.IOrderCustomer.OrderItems
		{
			get { return OrderItems.Cast<NetSteps.Orders.Common.Models.IOrderItem>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.AddOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			OrderItems.Add((OrderItem)item);
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.RemoveOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			OrderItems.Remove((OrderItem)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderPaymentResult> NetSteps.Orders.Common.Models.IOrderCustomer.OrderPaymentResults
		{
			get { return OrderPaymentResults.Cast<NetSteps.Orders.Common.Models.IOrderPaymentResult>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.AddOrderPaymentResult(NetSteps.Orders.Common.Models.IOrderPaymentResult item)
		{
			OrderPaymentResults.Add((OrderPaymentResult)item);
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.RemoveOrderPaymentResult(NetSteps.Orders.Common.Models.IOrderPaymentResult item)
		{
			OrderPaymentResults.Remove((OrderPaymentResult)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderPayment> NetSteps.Orders.Common.Models.IOrderCustomer.OrderPayments
		{
			get { return OrderPayments.Cast<NetSteps.Orders.Common.Models.IOrderPayment>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.AddOrderPayment(NetSteps.Orders.Common.Models.IOrderPayment item)
		{
			OrderPayments.Add((OrderPayment)item);
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.RemoveOrderPayment(NetSteps.Orders.Common.Models.IOrderPayment item)
		{
			OrderPayments.Remove((OrderPayment)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderShipment> NetSteps.Orders.Common.Models.IOrderCustomer.OrderShipments
		{
			get { return OrderShipments.Cast<NetSteps.Orders.Common.Models.IOrderShipment>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.AddOrderShipment(NetSteps.Orders.Common.Models.IOrderShipment item)
		{
			OrderShipments.Add((OrderShipment)item);
		}

		void NetSteps.Orders.Common.Models.IOrderCustomer.RemoveOrderShipment(NetSteps.Orders.Common.Models.IOrderShipment item)
		{
			OrderShipments.Remove((OrderShipment)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderCustomerType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderCustomerType : NetSteps.Orders.Common.Models.IOrderCustomerType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderCustomer> NetSteps.Orders.Common.Models.IOrderCustomerType.OrderCustomers
		{
			get { return OrderCustomers.Cast<NetSteps.Orders.Common.Models.IOrderCustomer>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderCustomerType.AddOrderCustomer(NetSteps.Orders.Common.Models.IOrderCustomer item)
		{
			OrderCustomers.Add((OrderCustomer)item);
		}

		void NetSteps.Orders.Common.Models.IOrderCustomerType.RemoveOrderCustomer(NetSteps.Orders.Common.Models.IOrderCustomer item)
		{
			OrderCustomers.Remove((OrderCustomer)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItem), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItem : NetSteps.Orders.Common.Models.IOrderItem
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderCustomer NetSteps.Orders.Common.Models.IOrderItem.OrderCustomer
		{
			get { return OrderCustomer; }
			set { OrderCustomer = (OrderCustomer)value; }
		}

		NetSteps.Orders.Common.Models.IOrderItemReplacement NetSteps.Orders.Common.Models.IOrderItem.OrderItemReplacement
		{
			get { return OrderItemReplacement; }
			set { OrderItemReplacement = (OrderItemReplacement)value; }
		}

		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderItem.ParentOrderItem
		{
			get { return ParentOrderItem; }
			set { ParentOrderItem = (OrderItem)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderItem> NetSteps.Orders.Common.Models.IOrderItem.ChildOrderItems
		{
			get { return ChildOrderItems.Cast<NetSteps.Orders.Common.Models.IOrderItem>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddChildOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			ChildOrderItems.Add((OrderItem)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveChildOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			ChildOrderItems.Remove((OrderItem)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification> NetSteps.Orders.Common.Models.IOrderItem.OrderAdjustmentOrderLineModifications
		{
			get { return OrderAdjustmentOrderLineModifications.Cast<NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddOrderAdjustmentOrderLineModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification item)
		{
			OrderAdjustmentOrderLineModifications.Add((OrderAdjustmentOrderLineModification)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveOrderAdjustmentOrderLineModification(NetSteps.Orders.Common.Models.IOrderAdjustmentOrderLineModification item)
		{
			OrderAdjustmentOrderLineModifications.Remove((OrderAdjustmentOrderLineModification)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemMessage> NetSteps.Orders.Common.Models.IOrderItem.OrderItemMessages
		{
			get { return OrderItemMessages.Cast<NetSteps.Orders.Common.Models.IOrderItemMessage>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddOrderItemMessage(NetSteps.Orders.Common.Models.IOrderItemMessage item)
		{
			OrderItemMessages.Add((OrderItemMessage)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveOrderItemMessage(NetSteps.Orders.Common.Models.IOrderItemMessage item)
		{
			OrderItemMessages.Remove((OrderItemMessage)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemPrice> NetSteps.Orders.Common.Models.IOrderItem.OrderItemPrices
		{
			get { return OrderItemPrices.Cast<NetSteps.Orders.Common.Models.IOrderItemPrice>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddOrderItemPrice(NetSteps.Orders.Common.Models.IOrderItemPrice item)
		{
			OrderItemPrices.Add((OrderItemPrice)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveOrderItemPrice(NetSteps.Orders.Common.Models.IOrderItemPrice item)
		{
			OrderItemPrices.Remove((OrderItemPrice)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemProperty> NetSteps.Orders.Common.Models.IOrderItem.OrderItemProperties
		{
			get { return OrderItemProperties.Cast<NetSteps.Orders.Common.Models.IOrderItemProperty>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddOrderItemProperty(NetSteps.Orders.Common.Models.IOrderItemProperty item)
		{
			OrderItemProperties.Add((OrderItemProperty)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveOrderItemProperty(NetSteps.Orders.Common.Models.IOrderItemProperty item)
		{
			OrderItemProperties.Remove((OrderItemProperty)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemReturn> NetSteps.Orders.Common.Models.IOrderItem.OrderItemReturns
		{
			get { return OrderItemReturns.Cast<NetSteps.Orders.Common.Models.IOrderItemReturn>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddOrderItemReturn(NetSteps.Orders.Common.Models.IOrderItemReturn item)
		{
			OrderItemReturns.Add((OrderItemReturn)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveOrderItemReturn(NetSteps.Orders.Common.Models.IOrderItemReturn item)
		{
			OrderItemReturns.Remove((OrderItemReturn)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderShipmentPackageItem> NetSteps.Orders.Common.Models.IOrderItem.OrderShipmentPackageItems
		{
			get { return OrderShipmentPackageItems.Cast<NetSteps.Orders.Common.Models.IOrderShipmentPackageItem>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddOrderShipmentPackageItem(NetSteps.Orders.Common.Models.IOrderShipmentPackageItem item)
		{
			OrderShipmentPackageItems.Add((OrderShipmentPackageItem)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveOrderShipmentPackageItem(NetSteps.Orders.Common.Models.IOrderShipmentPackageItem item)
		{
			OrderShipmentPackageItems.Remove((OrderShipmentPackageItem)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemReturn> NetSteps.Orders.Common.Models.IOrderItem.OriginalOrderItemReturns
		{
			get { return OriginalOrderItemReturns.Cast<NetSteps.Orders.Common.Models.IOrderItemReturn>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItem.AddOriginalOrderItemReturn(NetSteps.Orders.Common.Models.IOrderItemReturn item)
		{
			OriginalOrderItemReturns.Add((OrderItemReturn)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItem.RemoveOriginalOrderItemReturn(NetSteps.Orders.Common.Models.IOrderItemReturn item)
		{
			OriginalOrderItemReturns.Remove((OrderItemReturn)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemMessage), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemMessage : NetSteps.Orders.Common.Models.IOrderItemMessage
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderItemMessage.OrderItem
		{
			get { return OrderItem; }
			set { OrderItem = (OrderItem)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemMessageDisplayKind), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemMessageDisplayKind : NetSteps.Orders.Common.Models.IOrderItemMessageDisplayKind
	{
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemParentType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemParentType : NetSteps.Orders.Common.Models.IOrderItemParentType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderItem> NetSteps.Orders.Common.Models.IOrderItemParentType.OrderItems
		{
			get { return OrderItems.Cast<NetSteps.Orders.Common.Models.IOrderItem>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItemParentType.AddOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			OrderItems.Add((OrderItem)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItemParentType.RemoveOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			OrderItems.Remove((OrderItem)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemPrice), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemPrice : NetSteps.Orders.Common.Models.IOrderItemPrice
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderItemPrice.OrderItem
		{
			get { return OrderItem; }
			set { OrderItem = (OrderItem)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemProperty), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemProperty : NetSteps.Orders.Common.Models.IOrderItemProperty
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderItemProperty.OrderItem
		{
			get { return OrderItem; }
			set { OrderItem = (OrderItem)value; }
		}

		NetSteps.Orders.Common.Models.IOrderItemPropertyType NetSteps.Orders.Common.Models.IOrderItemProperty.OrderItemPropertyType
		{
			get { return OrderItemPropertyType; }
			set { OrderItemPropertyType = (OrderItemPropertyType)value; }
		}

		NetSteps.Orders.Common.Models.IOrderItemPropertyValue NetSteps.Orders.Common.Models.IOrderItemProperty.OrderItemPropertyValue
		{
			get { return OrderItemPropertyValue; }
			set { OrderItemPropertyValue = (OrderItemPropertyValue)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemPropertyType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemPropertyType : NetSteps.Orders.Common.Models.IOrderItemPropertyType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemProperty> NetSteps.Orders.Common.Models.IOrderItemPropertyType.OrderItemProperties
		{
			get { return OrderItemProperties.Cast<NetSteps.Orders.Common.Models.IOrderItemProperty>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItemPropertyType.AddOrderItemProperty(NetSteps.Orders.Common.Models.IOrderItemProperty item)
		{
			OrderItemProperties.Add((OrderItemProperty)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItemPropertyType.RemoveOrderItemProperty(NetSteps.Orders.Common.Models.IOrderItemProperty item)
		{
			OrderItemProperties.Remove((OrderItemProperty)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemPropertyValue> NetSteps.Orders.Common.Models.IOrderItemPropertyType.OrderItemPropertyValues
		{
			get { return OrderItemPropertyValues.Cast<NetSteps.Orders.Common.Models.IOrderItemPropertyValue>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItemPropertyType.AddOrderItemPropertyValue(NetSteps.Orders.Common.Models.IOrderItemPropertyValue item)
		{
			OrderItemPropertyValues.Add((OrderItemPropertyValue)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItemPropertyType.RemoveOrderItemPropertyValue(NetSteps.Orders.Common.Models.IOrderItemPropertyValue item)
		{
			OrderItemPropertyValues.Remove((OrderItemPropertyValue)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemPropertyValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemPropertyValue : NetSteps.Orders.Common.Models.IOrderItemPropertyValue
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderItemPropertyType NetSteps.Orders.Common.Models.IOrderItemPropertyValue.OrderItemPropertyType
		{
			get { return OrderItemPropertyType; }
			set { OrderItemPropertyType = (OrderItemPropertyType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemProperty> NetSteps.Orders.Common.Models.IOrderItemPropertyValue.OrderItemProperties
		{
			get { return OrderItemProperties.Cast<NetSteps.Orders.Common.Models.IOrderItemProperty>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItemPropertyValue.AddOrderItemProperty(NetSteps.Orders.Common.Models.IOrderItemProperty item)
		{
			OrderItemProperties.Add((OrderItemProperty)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItemPropertyValue.RemoveOrderItemProperty(NetSteps.Orders.Common.Models.IOrderItemProperty item)
		{
			OrderItemProperties.Remove((OrderItemProperty)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemReplacement), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemReplacement : NetSteps.Orders.Common.Models.IOrderItemReplacement
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderItemReplacement.OrderItem
		{
			get { return OrderItem; }
			set { OrderItem = (OrderItem)value; }
		}

		NetSteps.Orders.Common.Models.IReplacementReason NetSteps.Orders.Common.Models.IOrderItemReplacement.ReplacementReason
		{
			get { return ReplacementReason; }
			set { ReplacementReason = (ReplacementReason)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemReturn), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemReturn : NetSteps.Orders.Common.Models.IOrderItemReturn
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderItemReturn.OrderItem
		{
			get { return OrderItem; }
			set { OrderItem = (OrderItem)value; }
		}

		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderItemReturn.OriginalOrderItem
		{
			get { return OriginalOrderItem; }
			set { OriginalOrderItem = (OrderItem)value; }
		}

		NetSteps.Orders.Common.Models.IReturnReason NetSteps.Orders.Common.Models.IOrderItemReturn.ReturnReason
		{
			get { return ReturnReason; }
			set { ReturnReason = (ReturnReason)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderItemType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderItemType : NetSteps.Orders.Common.Models.IOrderItemType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IHostessRewardRule> NetSteps.Orders.Common.Models.IOrderItemType.HostessRewardRules
		{
			get { return HostessRewardRules.Cast<NetSteps.Orders.Common.Models.IHostessRewardRule>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItemType.AddHostessRewardRule(NetSteps.Orders.Common.Models.IHostessRewardRule item)
		{
			HostessRewardRules.Add((HostessRewardRule)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItemType.RemoveHostessRewardRule(NetSteps.Orders.Common.Models.IHostessRewardRule item)
		{
			HostessRewardRules.Remove((HostessRewardRule)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IOrderItem> NetSteps.Orders.Common.Models.IOrderItemType.OrderItems
		{
			get { return OrderItems.Cast<NetSteps.Orders.Common.Models.IOrderItem>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderItemType.AddOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			OrderItems.Add((OrderItem)item);
		}

		void NetSteps.Orders.Common.Models.IOrderItemType.RemoveOrderItem(NetSteps.Orders.Common.Models.IOrderItem item)
		{
			OrderItems.Remove((OrderItem)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderPayment), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderPayment : NetSteps.Orders.Common.Models.IOrderPayment
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IOrderPayment.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		NetSteps.Orders.Common.Models.IOrderCustomer NetSteps.Orders.Common.Models.IOrderPayment.OrderCustomer
		{
			get { return OrderCustomer; }
			set { OrderCustomer = (OrderCustomer)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderPaymentResult> NetSteps.Orders.Common.Models.IOrderPayment.OrderPaymentResults
		{
			get { return OrderPaymentResults.Cast<NetSteps.Orders.Common.Models.IOrderPaymentResult>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderPayment.AddOrderPaymentResult(NetSteps.Orders.Common.Models.IOrderPaymentResult item)
		{
			OrderPaymentResults.Add((OrderPaymentResult)item);
		}

		void NetSteps.Orders.Common.Models.IOrderPayment.RemoveOrderPaymentResult(NetSteps.Orders.Common.Models.IOrderPaymentResult item)
		{
			OrderPaymentResults.Remove((OrderPaymentResult)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderPaymentResult), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderPaymentResult : NetSteps.Orders.Common.Models.IOrderPaymentResult
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IOrderPaymentResult.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		NetSteps.Orders.Common.Models.IOrderCustomer NetSteps.Orders.Common.Models.IOrderPaymentResult.OrderCustomer
		{
			get { return OrderCustomer; }
			set { OrderCustomer = (OrderCustomer)value; }
		}

		NetSteps.Orders.Common.Models.IOrderPayment NetSteps.Orders.Common.Models.IOrderPaymentResult.OrderPayment
		{
			get { return OrderPayment; }
			set { OrderPayment = (OrderPayment)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderPaymentStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderPaymentStatus : NetSteps.Orders.Common.Models.IOrderPaymentStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderPayment> NetSteps.Orders.Common.Models.IOrderPaymentStatus.OrderPayments
		{
			get { return OrderPayments.Cast<NetSteps.Orders.Common.Models.IOrderPayment>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderPaymentStatus.AddOrderPayment(NetSteps.Orders.Common.Models.IOrderPayment item)
		{
			OrderPayments.Add((OrderPayment)item);
		}

		void NetSteps.Orders.Common.Models.IOrderPaymentStatus.RemoveOrderPayment(NetSteps.Orders.Common.Models.IOrderPayment item)
		{
			OrderPayments.Remove((OrderPayment)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderShipment), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderShipment : NetSteps.Orders.Common.Models.IOrderShipment
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IOrderShipment.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		NetSteps.Orders.Common.Models.IOrderCustomer NetSteps.Orders.Common.Models.IOrderShipment.OrderCustomer
		{
			get { return OrderCustomer; }
			set { OrderCustomer = (OrderCustomer)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderShipmentPackage> NetSteps.Orders.Common.Models.IOrderShipment.OrderShipmentPackages
		{
			get { return OrderShipmentPackages.Cast<NetSteps.Orders.Common.Models.IOrderShipmentPackage>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderShipment.AddOrderShipmentPackage(NetSteps.Orders.Common.Models.IOrderShipmentPackage item)
		{
			OrderShipmentPackages.Add((OrderShipmentPackage)item);
		}

		void NetSteps.Orders.Common.Models.IOrderShipment.RemoveOrderShipmentPackage(NetSteps.Orders.Common.Models.IOrderShipmentPackage item)
		{
			OrderShipmentPackages.Remove((OrderShipmentPackage)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderShipmentPackage), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderShipmentPackage : NetSteps.Orders.Common.Models.IOrderShipmentPackage
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderShipment NetSteps.Orders.Common.Models.IOrderShipmentPackage.OrderShipment
		{
			get { return OrderShipment; }
			set { OrderShipment = (OrderShipment)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderShipmentPackageItem> NetSteps.Orders.Common.Models.IOrderShipmentPackage.OrderShipmentPackageItems
		{
			get { return OrderShipmentPackageItems.Cast<NetSteps.Orders.Common.Models.IOrderShipmentPackageItem>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderShipmentPackage.AddOrderShipmentPackageItem(NetSteps.Orders.Common.Models.IOrderShipmentPackageItem item)
		{
			OrderShipmentPackageItems.Add((OrderShipmentPackageItem)item);
		}

		void NetSteps.Orders.Common.Models.IOrderShipmentPackage.RemoveOrderShipmentPackageItem(NetSteps.Orders.Common.Models.IOrderShipmentPackageItem item)
		{
			OrderShipmentPackageItems.Remove((OrderShipmentPackageItem)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderShipmentPackageItem), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderShipmentPackageItem : NetSteps.Orders.Common.Models.IOrderShipmentPackageItem
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrderItem NetSteps.Orders.Common.Models.IOrderShipmentPackageItem.OrderItem
		{
			get { return OrderItem; }
			set { OrderItem = (OrderItem)value; }
		}

		NetSteps.Orders.Common.Models.IOrderShipmentPackage NetSteps.Orders.Common.Models.IOrderShipmentPackageItem.OrderShipmentPackage
		{
			get { return OrderShipmentPackage; }
			set { OrderShipmentPackage = (OrderShipmentPackage)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderShipmentsLog), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderShipmentsLog : NetSteps.Orders.Common.Models.IOrderShipmentsLog
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IOrderShipmentsLog.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderShipmentStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderShipmentStatus : NetSteps.Orders.Common.Models.IOrderShipmentStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderShipment> NetSteps.Orders.Common.Models.IOrderShipmentStatus.OrderShipments
		{
			get { return OrderShipments.Cast<NetSteps.Orders.Common.Models.IOrderShipment>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderShipmentStatus.AddOrderShipment(NetSteps.Orders.Common.Models.IOrderShipment item)
		{
			OrderShipments.Add((OrderShipment)item);
		}

		void NetSteps.Orders.Common.Models.IOrderShipmentStatus.RemoveOrderShipment(NetSteps.Orders.Common.Models.IOrderShipment item)
		{
			OrderShipments.Remove((OrderShipment)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderStatus : NetSteps.Orders.Common.Models.IOrderStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrder> NetSteps.Orders.Common.Models.IOrderStatus.Orders
		{
			get { return Orders.Cast<NetSteps.Orders.Common.Models.IOrder>(); }
		}

		void NetSteps.Orders.Common.Models.IOrderStatus.AddOrder(NetSteps.Orders.Common.Models.IOrder item)
		{
			Orders.Add((Order)item);
		}

		void NetSteps.Orders.Common.Models.IOrderStatus.RemoveOrder(NetSteps.Orders.Common.Models.IOrder item)
		{
			Orders.Remove((Order)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IOrderType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class OrderType : NetSteps.Orders.Common.Models.IOrderType
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IPage), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Page : NetSteps.Content.Common.Models.IPage
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IHtmlSection> NetSteps.Content.Common.Models.IPage.HtmlSections
		{
			get { return HtmlSections.Cast<NetSteps.Content.Common.Models.IHtmlSection>(); }
		}

		void NetSteps.Content.Common.Models.IPage.AddHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Add((HtmlSection)item);
		}

		void NetSteps.Content.Common.Models.IPage.RemoveHtmlSection(NetSteps.Content.Common.Models.IHtmlSection item)
		{
			HtmlSections.Remove((HtmlSection)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.INavigation> NetSteps.Content.Common.Models.IPage.Navigations
		{
			get { return Navigations.Cast<NetSteps.Content.Common.Models.INavigation>(); }
		}

		void NetSteps.Content.Common.Models.IPage.AddNavigation(NetSteps.Content.Common.Models.INavigation item)
		{
			Navigations.Add((Navigation)item);
		}

		void NetSteps.Content.Common.Models.IPage.RemoveNavigation(NetSteps.Content.Common.Models.INavigation item)
		{
			Navigations.Remove((Navigation)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IPageTranslation> NetSteps.Content.Common.Models.IPage.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.IPageTranslation>(); }
		}

		void NetSteps.Content.Common.Models.IPage.AddTranslation(NetSteps.Content.Common.Models.IPageTranslation item)
		{
			Translations.Add((PageTranslation)item);
		}

		void NetSteps.Content.Common.Models.IPage.RemoveTranslation(NetSteps.Content.Common.Models.IPageTranslation item)
		{
			Translations.Remove((PageTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IPageTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PageTranslation : NetSteps.Content.Common.Models.IPageTranslation
	{
		#region Singular Navigation Properties
		NetSteps.Content.Common.Models.IPage NetSteps.Content.Common.Models.IPageTranslation.Page
		{
			get { return Page; }
			set { Page = (Page)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IPageType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PageType : NetSteps.Content.Common.Models.IPageType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.ILayout> NetSteps.Content.Common.Models.IPageType.Layouts
		{
			get { return Layouts.Cast<NetSteps.Content.Common.Models.ILayout>(); }
		}

		void NetSteps.Content.Common.Models.IPageType.AddLayout(NetSteps.Content.Common.Models.ILayout item)
		{
			Layouts.Add((Layout)item);
		}

		void NetSteps.Content.Common.Models.IPageType.RemoveLayout(NetSteps.Content.Common.Models.ILayout item)
		{
			Layouts.Remove((Layout)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IPage> NetSteps.Content.Common.Models.IPageType.Pages
		{
			get { return Pages.Cast<NetSteps.Content.Common.Models.IPage>(); }
		}

		void NetSteps.Content.Common.Models.IPageType.AddPage(NetSteps.Content.Common.Models.IPage item)
		{
			Pages.Add((Page)item);
		}

		void NetSteps.Content.Common.Models.IPageType.RemovePage(NetSteps.Content.Common.Models.IPage item)
		{
			Pages.Remove((Page)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IParty), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Party : NetSteps.Orders.Common.Models.IParty
	{
		#region Singular Navigation Properties
		NetSteps.Addresses.Common.Models.IAddress NetSteps.Orders.Common.Models.IParty.Address
		{
			get { return Address; }
			set { Address = (Address)value; }
		}

		NetSteps.Orders.Common.Models.IOrder NetSteps.Orders.Common.Models.IParty.Order
		{
			get { return Order; }
			set { Order = (Order)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IPartyGuest> NetSteps.Orders.Common.Models.IParty.PartyGuests
		{
			get { return PartyGuests.Cast<NetSteps.Orders.Common.Models.IPartyGuest>(); }
		}

		void NetSteps.Orders.Common.Models.IParty.AddPartyGuest(NetSteps.Orders.Common.Models.IPartyGuest item)
		{
			PartyGuests.Add((PartyGuest)item);
		}

		void NetSteps.Orders.Common.Models.IParty.RemovePartyGuest(NetSteps.Orders.Common.Models.IPartyGuest item)
		{
			PartyGuests.Remove((PartyGuest)item);
		}

		IEnumerable<NetSteps.Orders.Common.Models.IPartyRsvp> NetSteps.Orders.Common.Models.IParty.PartyRsvps
		{
			get { return PartyRsvps.Cast<NetSteps.Orders.Common.Models.IPartyRsvp>(); }
		}

		void NetSteps.Orders.Common.Models.IParty.AddPartyRsvp(NetSteps.Orders.Common.Models.IPartyRsvp item)
		{
			PartyRsvps.Add((PartyRsvp)item);
		}

		void NetSteps.Orders.Common.Models.IParty.RemovePartyRsvp(NetSteps.Orders.Common.Models.IPartyRsvp item)
		{
			PartyRsvps.Remove((PartyRsvp)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IPartyGuest), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PartyGuest : NetSteps.Orders.Common.Models.IPartyGuest
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IParty NetSteps.Orders.Common.Models.IPartyGuest.Party
		{
			get { return Party; }
			set { Party = (Party)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IPartyRsvp> NetSteps.Orders.Common.Models.IPartyGuest.PartyRsvps
		{
			get { return PartyRsvps.Cast<NetSteps.Orders.Common.Models.IPartyRsvp>(); }
		}

		void NetSteps.Orders.Common.Models.IPartyGuest.AddPartyRsvp(NetSteps.Orders.Common.Models.IPartyRsvp item)
		{
			PartyRsvps.Add((PartyRsvp)item);
		}

		void NetSteps.Orders.Common.Models.IPartyGuest.RemovePartyRsvp(NetSteps.Orders.Common.Models.IPartyRsvp item)
		{
			PartyRsvps.Remove((PartyRsvp)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IPartyRsvp), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PartyRsvp : NetSteps.Orders.Common.Models.IPartyRsvp
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IParty NetSteps.Orders.Common.Models.IPartyRsvp.Party
		{
			get { return Party; }
			set { Party = (Party)value; }
		}

		NetSteps.Orders.Common.Models.IPartyGuest NetSteps.Orders.Common.Models.IPartyRsvp.PartyGuest
		{
			get { return PartyGuest; }
			set { PartyGuest = (PartyGuest)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Payments.Common.Models.IPaymentGateway), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PaymentGateway : NetSteps.Payments.Common.Models.IPaymentGateway
	{
	}

	[ContainerRegister(typeof(NetSteps.Payments.Common.Models.IPaymentOrderType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PaymentOrderType : NetSteps.Payments.Common.Models.IPaymentOrderType
	{
	}

	[ContainerRegister(typeof(NetSteps.Payments.Common.Models.IPaymentType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PaymentType : NetSteps.Payments.Common.Models.IPaymentType
	{
	}

	[ContainerRegister(typeof(NetSteps.Addresses.Common.Models.IPhoneType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PhoneType : NetSteps.Addresses.Common.Models.IPhoneType
	{
	}

	[ContainerRegister(typeof(NetSteps.Addresses.Common.Models.IPickupPoint), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PickupPoint : NetSteps.Addresses.Common.Models.IPickupPoint
	{
		#region Singular Navigation Properties
		NetSteps.Addresses.Common.Models.IAddress NetSteps.Addresses.Common.Models.IPickupPoint.Address
		{
			get { return Address; }
			set { Address = (Address)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IPolicy), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Policy : NetSteps.Accounts.Common.Models.IPolicy
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IPriceRelationshipType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PriceRelationshipType : NetSteps.Products.Common.Models.IPriceRelationshipType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IAccountPriceType> NetSteps.Products.Common.Models.IPriceRelationshipType.AccountPriceTypes
		{
			get { return AccountPriceTypes.Cast<NetSteps.Products.Common.Models.IAccountPriceType>(); }
		}

		void NetSteps.Products.Common.Models.IPriceRelationshipType.AddAccountPriceType(NetSteps.Products.Common.Models.IAccountPriceType item)
		{
			AccountPriceTypes.Add((AccountPriceType)item);
		}

		void NetSteps.Products.Common.Models.IPriceRelationshipType.RemoveAccountPriceType(NetSteps.Products.Common.Models.IAccountPriceType item)
		{
			AccountPriceTypes.Remove((AccountPriceType)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProduct), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Product : NetSteps.Products.Common.Models.IProduct
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProductVariantInfo NetSteps.Products.Common.Models.IProduct.ProductVariantInfo
		{
			get { return ProductVariantInfo; }
			set { ProductVariantInfo = (ProductVariantInfo)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IProductRelation> NetSteps.Products.Common.Models.IProduct.ChildProductRelations
		{
			get { return ChildProductRelations.Cast<NetSteps.Products.Common.Models.IProductRelation>(); }
		}

		void NetSteps.Products.Common.Models.IProduct.AddChildProductRelation(NetSteps.Products.Common.Models.IProductRelation item)
		{
			ChildProductRelations.Add((ProductRelation)item);
		}

		void NetSteps.Products.Common.Models.IProduct.RemoveChildProductRelation(NetSteps.Products.Common.Models.IProductRelation item)
		{
			ChildProductRelations.Remove((ProductRelation)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductFile> NetSteps.Products.Common.Models.IProduct.Files
		{
			get { return Files.Cast<NetSteps.Products.Common.Models.IProductFile>(); }
		}

		void NetSteps.Products.Common.Models.IProduct.AddFile(NetSteps.Products.Common.Models.IProductFile item)
		{
			Files.Add((ProductFile)item);
		}

		void NetSteps.Products.Common.Models.IProduct.RemoveFile(NetSteps.Products.Common.Models.IProductFile item)
		{
			Files.Remove((ProductFile)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductRelation> NetSteps.Products.Common.Models.IProduct.ParentProductRelations
		{
			get { return ParentProductRelations.Cast<NetSteps.Products.Common.Models.IProductRelation>(); }
		}

		void NetSteps.Products.Common.Models.IProduct.AddParentProductRelation(NetSteps.Products.Common.Models.IProductRelation item)
		{
			ParentProductRelations.Add((ProductRelation)item);
		}

		void NetSteps.Products.Common.Models.IProduct.RemoveParentProductRelation(NetSteps.Products.Common.Models.IProductRelation item)
		{
			ParentProductRelations.Remove((ProductRelation)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductPrice> NetSteps.Products.Common.Models.IProduct.Prices
		{
			get { return Prices.Cast<NetSteps.Products.Common.Models.IProductPrice>(); }
		}

		void NetSteps.Products.Common.Models.IProduct.AddPrice(NetSteps.Products.Common.Models.IProductPrice item)
		{
			Prices.Add((ProductPrice)item);
		}

		void NetSteps.Products.Common.Models.IProduct.RemovePrice(NetSteps.Products.Common.Models.IProductPrice item)
		{
			Prices.Remove((ProductPrice)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductProperty> NetSteps.Products.Common.Models.IProduct.Properties
		{
			get { return Properties.Cast<NetSteps.Products.Common.Models.IProductProperty>(); }
		}

		void NetSteps.Products.Common.Models.IProduct.AddProperty(NetSteps.Products.Common.Models.IProductProperty item)
		{
			Properties.Add((ProductProperty)item);
		}

		void NetSteps.Products.Common.Models.IProduct.RemoveProperty(NetSteps.Products.Common.Models.IProductProperty item)
		{
			Properties.Remove((ProductProperty)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IDescriptionTranslation> NetSteps.Products.Common.Models.IProduct.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.IDescriptionTranslation>(); }
		}

		void NetSteps.Products.Common.Models.IProduct.AddTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Add((DescriptionTranslation)item);
		}

		void NetSteps.Products.Common.Models.IProduct.RemoveTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Remove((DescriptionTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductBackOrderBehavior), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductBackOrderBehavior : NetSteps.Products.Common.Models.IProductBackOrderBehavior
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IProduct> NetSteps.Products.Common.Models.IProductBackOrderBehavior.Products
		{
			get { return Products.Cast<NetSteps.Products.Common.Models.IProduct>(); }
		}

		void NetSteps.Products.Common.Models.IProductBackOrderBehavior.AddProduct(NetSteps.Products.Common.Models.IProduct item)
		{
			Products.Add((Product)item);
		}

		void NetSteps.Products.Common.Models.IProductBackOrderBehavior.RemoveProduct(NetSteps.Products.Common.Models.IProduct item)
		{
			Products.Remove((Product)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductBase), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductBase : NetSteps.Products.Common.Models.IProductBase
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.ICategory> NetSteps.Products.Common.Models.IProductBase.Categories
		{
			get { return Categories.Cast<NetSteps.Common.Models.ICategory>(); }
		}

		void NetSteps.Products.Common.Models.IProductBase.AddCategory(NetSteps.Common.Models.ICategory item)
		{
			Categories.Add((Category)item);
		}

		void NetSteps.Products.Common.Models.IProductBase.RemoveCategory(NetSteps.Common.Models.ICategory item)
		{
			Categories.Remove((Category)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductBaseProperty> NetSteps.Products.Common.Models.IProductBase.ProductBaseProperties
		{
			get { return ProductBaseProperties.Cast<NetSteps.Products.Common.Models.IProductBaseProperty>(); }
		}

		void NetSteps.Products.Common.Models.IProductBase.AddProductBaseProperty(NetSteps.Products.Common.Models.IProductBaseProperty item)
		{
			ProductBaseProperties.Add((ProductBaseProperty)item);
		}

		void NetSteps.Products.Common.Models.IProductBase.RemoveProductBaseProperty(NetSteps.Products.Common.Models.IProductBaseProperty item)
		{
			ProductBaseProperties.Remove((ProductBaseProperty)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductBasePropertyValue> NetSteps.Products.Common.Models.IProductBase.ProductBasePropertyValues
		{
			get { return ProductBasePropertyValues.Cast<NetSteps.Products.Common.Models.IProductBasePropertyValue>(); }
		}

		void NetSteps.Products.Common.Models.IProductBase.AddProductBasePropertyValue(NetSteps.Products.Common.Models.IProductBasePropertyValue item)
		{
			ProductBasePropertyValues.Add((ProductBasePropertyValue)item);
		}

		void NetSteps.Products.Common.Models.IProductBase.RemoveProductBasePropertyValue(NetSteps.Products.Common.Models.IProductBasePropertyValue item)
		{
			ProductBasePropertyValues.Remove((ProductBasePropertyValue)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IDescriptionTranslation> NetSteps.Products.Common.Models.IProductBase.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.IDescriptionTranslation>(); }
		}

		void NetSteps.Products.Common.Models.IProductBase.AddTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Add((DescriptionTranslation)item);
		}

		void NetSteps.Products.Common.Models.IProductBase.RemoveTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Remove((DescriptionTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductBaseProperty), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductBaseProperty : NetSteps.Products.Common.Models.IProductBaseProperty
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProductBase NetSteps.Products.Common.Models.IProductBaseProperty.ProductBas
		{
			get { return ProductBas; }
			set { ProductBas = (ProductBase)value; }
		}

		NetSteps.Products.Common.Models.IProductPropertyType NetSteps.Products.Common.Models.IProductBaseProperty.ProductPropertyType
		{
			get { return ProductPropertyType; }
			set { ProductPropertyType = (ProductPropertyType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductBasePropertyValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductBasePropertyValue : NetSteps.Products.Common.Models.IProductBasePropertyValue
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProductBase NetSteps.Products.Common.Models.IProductBasePropertyValue.ProductBas
		{
			get { return ProductBas; }
			set { ProductBas = (ProductBase)value; }
		}

		NetSteps.Products.Common.Models.IProductPropertyValue NetSteps.Products.Common.Models.IProductBasePropertyValue.ProductPropertyValue
		{
			get { return ProductPropertyValue; }
			set { ProductPropertyValue = (ProductPropertyValue)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductFile), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductFile : NetSteps.Products.Common.Models.IProductFile
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductFileType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductFileType : NetSteps.Products.Common.Models.IProductFileType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IProductFile> NetSteps.Products.Common.Models.IProductFileType.ProductFiles
		{
			get { return ProductFiles.Cast<NetSteps.Products.Common.Models.IProductFile>(); }
		}

		void NetSteps.Products.Common.Models.IProductFileType.AddProductFile(NetSteps.Products.Common.Models.IProductFile item)
		{
			ProductFiles.Add((ProductFile)item);
		}

		void NetSteps.Products.Common.Models.IProductFileType.RemoveProductFile(NetSteps.Products.Common.Models.IProductFile item)
		{
			ProductFiles.Remove((ProductFile)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductMerchantLocationCache), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductMerchantLocationCache : NetSteps.Products.Common.Models.IProductMerchantLocationCache
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductPrice), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductPrice : NetSteps.Products.Common.Models.IProductPrice
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.IProductPrice.Product
		{
			get { return Product; }
			set { Product = (Product)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductPriceType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductPriceType : NetSteps.Products.Common.Models.IProductPriceType
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductProperty), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductProperty : NetSteps.Products.Common.Models.IProductProperty
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.IProductProperty.Product
		{
			get { return Product; }
			set { Product = (Product)value; }
		}

		NetSteps.Products.Common.Models.IProductPropertyType NetSteps.Products.Common.Models.IProductProperty.ProductPropertyType
		{
			get { return ProductPropertyType; }
			set { ProductPropertyType = (ProductPropertyType)value; }
		}

		NetSteps.Products.Common.Models.IProductPropertyValue NetSteps.Products.Common.Models.IProductProperty.ProductPropertyValue
		{
			get { return ProductPropertyValue; }
			set { ProductPropertyValue = (ProductPropertyValue)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductPropertyType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductPropertyType : NetSteps.Products.Common.Models.IProductPropertyType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IProductPropertyTypeRelation> NetSteps.Products.Common.Models.IProductPropertyType.ProductPropertyTypeRelations
		{
			get { return ProductPropertyTypeRelations.Cast<NetSteps.Products.Common.Models.IProductPropertyTypeRelation>(); }
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.AddProductPropertyTypeRelation(NetSteps.Products.Common.Models.IProductPropertyTypeRelation item)
		{
			ProductPropertyTypeRelations.Add((ProductPropertyTypeRelation)item);
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.RemoveProductPropertyTypeRelation(NetSteps.Products.Common.Models.IProductPropertyTypeRelation item)
		{
			ProductPropertyTypeRelations.Remove((ProductPropertyTypeRelation)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductPropertyTypeRelation> NetSteps.Products.Common.Models.IProductPropertyType.ProductPropertyTypeRelations1
		{
			get { return ProductPropertyTypeRelations1.Cast<NetSteps.Products.Common.Models.IProductPropertyTypeRelation>(); }
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.AddProductPropertyTypeRelations1(NetSteps.Products.Common.Models.IProductPropertyTypeRelation item)
		{
			ProductPropertyTypeRelations1.Add((ProductPropertyTypeRelation)item);
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.RemoveProductPropertyTypeRelations1(NetSteps.Products.Common.Models.IProductPropertyTypeRelation item)
		{
			ProductPropertyTypeRelations1.Remove((ProductPropertyTypeRelation)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductPropertyValue> NetSteps.Products.Common.Models.IProductPropertyType.ProductPropertyValues
		{
			get { return ProductPropertyValues.Cast<NetSteps.Products.Common.Models.IProductPropertyValue>(); }
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.AddProductPropertyValue(NetSteps.Products.Common.Models.IProductPropertyValue item)
		{
			ProductPropertyValues.Add((ProductPropertyValue)item);
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.RemoveProductPropertyValue(NetSteps.Products.Common.Models.IProductPropertyValue item)
		{
			ProductPropertyValues.Remove((ProductPropertyValue)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductType> NetSteps.Products.Common.Models.IProductPropertyType.ProductTypes
		{
			get { return ProductTypes.Cast<NetSteps.Products.Common.Models.IProductType>(); }
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.AddProductType(NetSteps.Products.Common.Models.IProductType item)
		{
			ProductTypes.Add((ProductType)item);
		}

		void NetSteps.Products.Common.Models.IProductPropertyType.RemoveProductType(NetSteps.Products.Common.Models.IProductType item)
		{
			ProductTypes.Remove((ProductType)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductPropertyTypeRelation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductPropertyTypeRelation : NetSteps.Products.Common.Models.IProductPropertyTypeRelation
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProductPropertyType NetSteps.Products.Common.Models.IProductPropertyTypeRelation.ProductPropertyType
		{
			get { return ProductPropertyType; }
			set { ProductPropertyType = (ProductPropertyType)value; }
		}

		NetSteps.Products.Common.Models.IProductPropertyType NetSteps.Products.Common.Models.IProductPropertyTypeRelation.ProductPropertyType1
		{
			get { return ProductPropertyType1; }
			set { ProductPropertyType1 = (ProductPropertyType)value; }
		}

		NetSteps.Products.Common.Models.IProductRelationsType NetSteps.Products.Common.Models.IProductPropertyTypeRelation.ProductRelationsType
		{
			get { return ProductRelationsType; }
			set { ProductRelationsType = (ProductRelationsType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductPropertyValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductPropertyValue : NetSteps.Products.Common.Models.IProductPropertyValue
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProductPropertyType NetSteps.Products.Common.Models.IProductPropertyValue.ProductPropertyType
		{
			get { return ProductPropertyType; }
			set { ProductPropertyType = (ProductPropertyType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IProductBasePropertyValue> NetSteps.Products.Common.Models.IProductPropertyValue.ProductBasePropertyValues
		{
			get { return ProductBasePropertyValues.Cast<NetSteps.Products.Common.Models.IProductBasePropertyValue>(); }
		}

		void NetSteps.Products.Common.Models.IProductPropertyValue.AddProductBasePropertyValue(NetSteps.Products.Common.Models.IProductBasePropertyValue item)
		{
			ProductBasePropertyValues.Add((ProductBasePropertyValue)item);
		}

		void NetSteps.Products.Common.Models.IProductPropertyValue.RemoveProductBasePropertyValue(NetSteps.Products.Common.Models.IProductBasePropertyValue item)
		{
			ProductBasePropertyValues.Remove((ProductBasePropertyValue)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductProperty> NetSteps.Products.Common.Models.IProductPropertyValue.ProductProperties
		{
			get { return ProductProperties.Cast<NetSteps.Products.Common.Models.IProductProperty>(); }
		}

		void NetSteps.Products.Common.Models.IProductPropertyValue.AddProductProperty(NetSteps.Products.Common.Models.IProductProperty item)
		{
			ProductProperties.Add((ProductProperty)item);
		}

		void NetSteps.Products.Common.Models.IProductPropertyValue.RemoveProductProperty(NetSteps.Products.Common.Models.IProductProperty item)
		{
			ProductProperties.Remove((ProductProperty)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductRelation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductRelation : NetSteps.Products.Common.Models.IProductRelation
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.IProductRelation.Product
		{
			get { return Product; }
			set { Product = (Product)value; }
		}

		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.IProductRelation.Product1
		{
			get { return Product1; }
			set { Product1 = (Product)value; }
		}

		NetSteps.Products.Common.Models.IProductRelationsType NetSteps.Products.Common.Models.IProductRelation.ProductRelationsType
		{
			get { return ProductRelationsType; }
			set { ProductRelationsType = (ProductRelationsType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductRelationsType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductRelationsType : NetSteps.Products.Common.Models.IProductRelationsType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IProductPropertyTypeRelation> NetSteps.Products.Common.Models.IProductRelationsType.ProductPropertyTypeRelations
		{
			get { return ProductPropertyTypeRelations.Cast<NetSteps.Products.Common.Models.IProductPropertyTypeRelation>(); }
		}

		void NetSteps.Products.Common.Models.IProductRelationsType.AddProductPropertyTypeRelation(NetSteps.Products.Common.Models.IProductPropertyTypeRelation item)
		{
			ProductPropertyTypeRelations.Add((ProductPropertyTypeRelation)item);
		}

		void NetSteps.Products.Common.Models.IProductRelationsType.RemoveProductPropertyTypeRelation(NetSteps.Products.Common.Models.IProductPropertyTypeRelation item)
		{
			ProductPropertyTypeRelations.Remove((ProductPropertyTypeRelation)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductRelation> NetSteps.Products.Common.Models.IProductRelationsType.ProductRelations
		{
			get { return ProductRelations.Cast<NetSteps.Products.Common.Models.IProductRelation>(); }
		}

		void NetSteps.Products.Common.Models.IProductRelationsType.AddProductRelation(NetSteps.Products.Common.Models.IProductRelation item)
		{
			ProductRelations.Add((ProductRelation)item);
		}

		void NetSteps.Products.Common.Models.IProductRelationsType.RemoveProductRelation(NetSteps.Products.Common.Models.IProductRelation item)
		{
			ProductRelations.Remove((ProductRelation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductType : NetSteps.Products.Common.Models.IProductType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IDynamicKitGroupRule> NetSteps.Products.Common.Models.IProductType.DynamicKitGroupRules
		{
			get { return DynamicKitGroupRules.Cast<NetSteps.Products.Common.Models.IDynamicKitGroupRule>(); }
		}

		void NetSteps.Products.Common.Models.IProductType.AddDynamicKitGroupRule(NetSteps.Products.Common.Models.IDynamicKitGroupRule item)
		{
			DynamicKitGroupRules.Add((DynamicKitGroupRule)item);
		}

		void NetSteps.Products.Common.Models.IProductType.RemoveDynamicKitGroupRule(NetSteps.Products.Common.Models.IDynamicKitGroupRule item)
		{
			DynamicKitGroupRules.Remove((DynamicKitGroupRule)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductBase> NetSteps.Products.Common.Models.IProductType.ProductBases
		{
			get { return ProductBases.Cast<NetSteps.Products.Common.Models.IProductBase>(); }
		}

		void NetSteps.Products.Common.Models.IProductType.AddProductBas(NetSteps.Products.Common.Models.IProductBase item)
		{
			ProductBases.Add((ProductBase)item);
		}

		void NetSteps.Products.Common.Models.IProductType.RemoveProductBas(NetSteps.Products.Common.Models.IProductBase item)
		{
			ProductBases.Remove((ProductBase)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IProductPropertyType> NetSteps.Products.Common.Models.IProductType.ProductPropertyTypes
		{
			get { return ProductPropertyTypes.Cast<NetSteps.Products.Common.Models.IProductPropertyType>(); }
		}

		void NetSteps.Products.Common.Models.IProductType.AddProductPropertyType(NetSteps.Products.Common.Models.IProductPropertyType item)
		{
			ProductPropertyTypes.Add((ProductPropertyType)item);
		}

		void NetSteps.Products.Common.Models.IProductType.RemoveProductPropertyType(NetSteps.Products.Common.Models.IProductPropertyType item)
		{
			ProductPropertyTypes.Remove((ProductPropertyType)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IProductVariantInfo), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProductVariantInfo : NetSteps.Products.Common.Models.IProductVariantInfo
	{
		#region Singular Navigation Properties
		NetSteps.Products.Common.Models.IProduct NetSteps.Products.Common.Models.IProductVariantInfo.Product
		{
			get { return Product; }
			set { Product = (Product)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IProxyLink), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ProxyLink : NetSteps.Content.Common.Models.IProxyLink
	{
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IPublicationChannel), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class PublicationChannel : NetSteps.Orders.Common.Models.IPublicationChannel
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IRedemption> NetSteps.Orders.Common.Models.IPublicationChannel.Redemptions
		{
			get { return Redemptions.Cast<NetSteps.Orders.Common.Models.IRedemption>(); }
		}

		void NetSteps.Orders.Common.Models.IPublicationChannel.AddRedemption(NetSteps.Orders.Common.Models.IRedemption item)
		{
			Redemptions.Add((Redemption)item);
		}

		void NetSteps.Orders.Common.Models.IPublicationChannel.RemoveRedemption(NetSteps.Orders.Common.Models.IRedemption item)
		{
			Redemptions.Remove((Redemption)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IQueueItemPriority), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class QueueItemPriority : NetSteps.Communication.Common.Models.IQueueItemPriority
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignActionQueueItem> NetSteps.Communication.Common.Models.IQueueItemPriority.CampaignActionQueueItems
		{
			get { return CampaignActionQueueItems.Cast<NetSteps.Communication.Common.Models.ICampaignActionQueueItem>(); }
		}

		void NetSteps.Communication.Common.Models.IQueueItemPriority.AddCampaignActionQueueItem(NetSteps.Communication.Common.Models.ICampaignActionQueueItem item)
		{
			CampaignActionQueueItems.Add((CampaignActionQueueItem)item);
		}

		void NetSteps.Communication.Common.Models.IQueueItemPriority.RemoveCampaignActionQueueItem(NetSteps.Communication.Common.Models.ICampaignActionQueueItem item)
		{
			CampaignActionQueueItems.Remove((CampaignActionQueueItem)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IDomainEventQueueItem> NetSteps.Communication.Common.Models.IQueueItemPriority.DomainEventQueueItems
		{
			get { return DomainEventQueueItems.Cast<NetSteps.Communication.Common.Models.IDomainEventQueueItem>(); }
		}

		void NetSteps.Communication.Common.Models.IQueueItemPriority.AddDomainEventQueueItem(NetSteps.Communication.Common.Models.IDomainEventQueueItem item)
		{
			DomainEventQueueItems.Add((DomainEventQueueItem)item);
		}

		void NetSteps.Communication.Common.Models.IQueueItemPriority.RemoveDomainEventQueueItem(NetSteps.Communication.Common.Models.IDomainEventQueueItem item)
		{
			DomainEventQueueItems.Remove((DomainEventQueueItem)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IQueueItemStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class QueueItemStatus : NetSteps.Communication.Common.Models.IQueueItemStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignActionQueueHistory> NetSteps.Communication.Common.Models.IQueueItemStatus.CampaignActionQueueHistories
		{
			get { return CampaignActionQueueHistories.Cast<NetSteps.Communication.Common.Models.ICampaignActionQueueHistory>(); }
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.AddCampaignActionQueueHistory(NetSteps.Communication.Common.Models.ICampaignActionQueueHistory item)
		{
			CampaignActionQueueHistories.Add((CampaignActionQueueHistory)item);
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.RemoveCampaignActionQueueHistory(NetSteps.Communication.Common.Models.ICampaignActionQueueHistory item)
		{
			CampaignActionQueueHistories.Remove((CampaignActionQueueHistory)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaignActionQueueItem> NetSteps.Communication.Common.Models.IQueueItemStatus.CampaignActionQueueItems
		{
			get { return CampaignActionQueueItems.Cast<NetSteps.Communication.Common.Models.ICampaignActionQueueItem>(); }
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.AddCampaignActionQueueItem(NetSteps.Communication.Common.Models.ICampaignActionQueueItem item)
		{
			CampaignActionQueueItems.Add((CampaignActionQueueItem)item);
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.RemoveCampaignActionQueueItem(NetSteps.Communication.Common.Models.ICampaignActionQueueItem item)
		{
			CampaignActionQueueItems.Remove((CampaignActionQueueItem)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IDeviceNotification> NetSteps.Communication.Common.Models.IQueueItemStatus.DeviceNotifications
		{
			get { return DeviceNotifications.Cast<NetSteps.Communication.Common.Models.IDeviceNotification>(); }
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.AddDeviceNotification(NetSteps.Communication.Common.Models.IDeviceNotification item)
		{
			DeviceNotifications.Add((DeviceNotification)item);
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.RemoveDeviceNotification(NetSteps.Communication.Common.Models.IDeviceNotification item)
		{
			DeviceNotifications.Remove((DeviceNotification)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IDomainEventQueueItem> NetSteps.Communication.Common.Models.IQueueItemStatus.DomainEventQueueItems
		{
			get { return DomainEventQueueItems.Cast<NetSteps.Communication.Common.Models.IDomainEventQueueItem>(); }
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.AddDomainEventQueueItem(NetSteps.Communication.Common.Models.IDomainEventQueueItem item)
		{
			DomainEventQueueItems.Add((DomainEventQueueItem)item);
		}

		void NetSteps.Communication.Common.Models.IQueueItemStatus.RemoveDomainEventQueueItem(NetSteps.Communication.Common.Models.IDomainEventQueueItem item)
		{
			DomainEventQueueItems.Remove((DomainEventQueueItem)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IRedemption), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Redemption : NetSteps.Orders.Common.Models.IRedemption
	{
		#region Singular Navigation Properties
		NetSteps.Orders.Common.Models.IRedemptionMethod NetSteps.Orders.Common.Models.IRedemption.RedemptionMethod
		{
			get { return RedemptionMethod; }
			set { RedemptionMethod = (RedemptionMethod)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IPublicationChannel> NetSteps.Orders.Common.Models.IRedemption.PublicationChannels
		{
			get { return PublicationChannels.Cast<NetSteps.Orders.Common.Models.IPublicationChannel>(); }
		}

		void NetSteps.Orders.Common.Models.IRedemption.AddPublicationChannel(NetSteps.Orders.Common.Models.IPublicationChannel item)
		{
			PublicationChannels.Add((PublicationChannel)item);
		}

		void NetSteps.Orders.Common.Models.IRedemption.RemovePublicationChannel(NetSteps.Orders.Common.Models.IPublicationChannel item)
		{
			PublicationChannels.Remove((PublicationChannel)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IRedemptionMethod), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class RedemptionMethod : NetSteps.Orders.Common.Models.IRedemptionMethod
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IRedemption> NetSteps.Orders.Common.Models.IRedemptionMethod.Redemptions
		{
			get { return Redemptions.Cast<NetSteps.Orders.Common.Models.IRedemption>(); }
		}

		void NetSteps.Orders.Common.Models.IRedemptionMethod.AddRedemption(NetSteps.Orders.Common.Models.IRedemption item)
		{
			Redemptions.Add((Redemption)item);
		}

		void NetSteps.Orders.Common.Models.IRedemptionMethod.RemoveRedemption(NetSteps.Orders.Common.Models.IRedemption item)
		{
			Redemptions.Remove((Redemption)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IReplacementReason), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ReplacementReason : NetSteps.Orders.Common.Models.IReplacementReason
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Orders.Common.Models.IOrderItemReplacement> NetSteps.Orders.Common.Models.IReplacementReason.OrderItemReplacements
		{
			get { return OrderItemReplacements.Cast<NetSteps.Orders.Common.Models.IOrderItemReplacement>(); }
		}

		void NetSteps.Orders.Common.Models.IReplacementReason.AddOrderItemReplacement(NetSteps.Orders.Common.Models.IOrderItemReplacement item)
		{
			OrderItemReplacements.Add((OrderItemReplacement)item);
		}

		void NetSteps.Orders.Common.Models.IReplacementReason.RemoveOrderItemReplacement(NetSteps.Orders.Common.Models.IOrderItemReplacement item)
		{
			OrderItemReplacements.Remove((OrderItemReplacement)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IReturnReason), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ReturnReason : NetSteps.Orders.Common.Models.IReturnReason
	{
	}

	[ContainerRegister(typeof(NetSteps.Orders.Common.Models.IReturnType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ReturnType : NetSteps.Orders.Common.Models.IReturnType
	{
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IRole), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Role : NetSteps.Accounts.Common.Models.IRole
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IRoleType NetSteps.Accounts.Common.Models.IRole.RoleType
		{
			get { return RoleType; }
			set { RoleType = (RoleType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IAccountType> NetSteps.Accounts.Common.Models.IRole.AccountTypes
		{
			get { return AccountTypes.Cast<NetSteps.Accounts.Common.Models.IAccountType>(); }
		}

		void NetSteps.Accounts.Common.Models.IRole.AddAccountType(NetSteps.Accounts.Common.Models.IAccountType item)
		{
			AccountTypes.Add((AccountType)item);
		}

		void NetSteps.Accounts.Common.Models.IRole.RemoveAccountType(NetSteps.Accounts.Common.Models.IAccountType item)
		{
			AccountTypes.Remove((AccountType)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IFunction> NetSteps.Accounts.Common.Models.IRole.Functions
		{
			get { return Functions.Cast<NetSteps.Accounts.Common.Models.IFunction>(); }
		}

		void NetSteps.Accounts.Common.Models.IRole.AddFunction(NetSteps.Accounts.Common.Models.IFunction item)
		{
			Functions.Add((Function)item);
		}

		void NetSteps.Accounts.Common.Models.IRole.RemoveFunction(NetSteps.Accounts.Common.Models.IFunction item)
		{
			Functions.Remove((Function)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IUser> NetSteps.Accounts.Common.Models.IRole.Users
		{
			get { return Users.Cast<NetSteps.Accounts.Common.Models.IUser>(); }
		}

		void NetSteps.Accounts.Common.Models.IRole.AddUser(NetSteps.Accounts.Common.Models.IUser item)
		{
			Users.Add((User)item);
		}

		void NetSteps.Accounts.Common.Models.IRole.RemoveUser(NetSteps.Accounts.Common.Models.IUser item)
		{
			Users.Remove((User)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IRoleType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class RoleType : NetSteps.Accounts.Common.Models.IRoleType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IRole> NetSteps.Accounts.Common.Models.IRoleType.Roles
		{
			get { return Roles.Cast<NetSteps.Accounts.Common.Models.IRole>(); }
		}

		void NetSteps.Accounts.Common.Models.IRoleType.AddRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Add((Role)item);
		}

		void NetSteps.Accounts.Common.Models.IRoleType.RemoveRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Remove((Role)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IShippingMethod), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ShippingMethod : NetSteps.Logistics.Common.Models.IShippingMethod
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.IDescriptionTranslation> NetSteps.Logistics.Common.Models.IShippingMethod.Translations
		{
			get { return Translations.Cast<NetSteps.Content.Common.Models.IDescriptionTranslation>(); }
		}

		void NetSteps.Logistics.Common.Models.IShippingMethod.AddTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Add((DescriptionTranslation)item);
		}

		void NetSteps.Logistics.Common.Models.IShippingMethod.RemoveTranslation(NetSteps.Content.Common.Models.IDescriptionTranslation item)
		{
			Translations.Remove((DescriptionTranslation)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IShippingOrderType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ShippingOrderType : NetSteps.Logistics.Common.Models.IShippingOrderType
	{
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IShippingRate), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ShippingRate : NetSteps.Logistics.Common.Models.IShippingRate
	{
		#region Singular Navigation Properties
		NetSteps.Logistics.Common.Models.IShippingRateGroup NetSteps.Logistics.Common.Models.IShippingRate.ShippingRateGroup
		{
			get { return ShippingRateGroup; }
			set { ShippingRateGroup = (ShippingRateGroup)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IShippingRateGroup), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ShippingRateGroup : NetSteps.Logistics.Common.Models.IShippingRateGroup
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Logistics.Common.Models.IShippingOrderType> NetSteps.Logistics.Common.Models.IShippingRateGroup.ShippingOrderTypes
		{
			get { return ShippingOrderTypes.Cast<NetSteps.Logistics.Common.Models.IShippingOrderType>(); }
		}

		void NetSteps.Logistics.Common.Models.IShippingRateGroup.AddShippingOrderType(NetSteps.Logistics.Common.Models.IShippingOrderType item)
		{
			ShippingOrderTypes.Add((ShippingOrderType)item);
		}

		void NetSteps.Logistics.Common.Models.IShippingRateGroup.RemoveShippingOrderType(NetSteps.Logistics.Common.Models.IShippingOrderType item)
		{
			ShippingOrderTypes.Remove((ShippingOrderType)item);
		}

		IEnumerable<NetSteps.Logistics.Common.Models.IShippingRate> NetSteps.Logistics.Common.Models.IShippingRateGroup.ShippingRates
		{
			get { return ShippingRates.Cast<NetSteps.Logistics.Common.Models.IShippingRate>(); }
		}

		void NetSteps.Logistics.Common.Models.IShippingRateGroup.AddShippingRate(NetSteps.Logistics.Common.Models.IShippingRate item)
		{
			ShippingRates.Add((ShippingRate)item);
		}

		void NetSteps.Logistics.Common.Models.IShippingRateGroup.RemoveShippingRate(NetSteps.Logistics.Common.Models.IShippingRate item)
		{
			ShippingRates.Remove((ShippingRate)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IShippingRateType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ShippingRateType : NetSteps.Logistics.Common.Models.IShippingRateType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Logistics.Common.Models.IShippingRate> NetSteps.Logistics.Common.Models.IShippingRateType.ShippingRates
		{
			get { return ShippingRates.Cast<NetSteps.Logistics.Common.Models.IShippingRate>(); }
		}

		void NetSteps.Logistics.Common.Models.IShippingRateType.AddShippingRate(NetSteps.Logistics.Common.Models.IShippingRate item)
		{
			ShippingRates.Add((ShippingRate)item);
		}

		void NetSteps.Logistics.Common.Models.IShippingRateType.RemoveShippingRate(NetSteps.Logistics.Common.Models.IShippingRate item)
		{
			ShippingRates.Remove((ShippingRate)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IShippingRegion), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class ShippingRegion : NetSteps.Logistics.Common.Models.IShippingRegion
	{
		#region Singular Navigation Properties
		NetSteps.Logistics.Common.Models.IWarehouse NetSteps.Logistics.Common.Models.IShippingRegion.Warehouse
		{
			get { return Warehouse; }
			set { Warehouse = (Warehouse)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Logistics.Common.Models.IShippingOrderType> NetSteps.Logistics.Common.Models.IShippingRegion.ShippingOrderTypes
		{
			get { return ShippingOrderTypes.Cast<NetSteps.Logistics.Common.Models.IShippingOrderType>(); }
		}

		void NetSteps.Logistics.Common.Models.IShippingRegion.AddShippingOrderType(NetSteps.Logistics.Common.Models.IShippingOrderType item)
		{
			ShippingOrderTypes.Add((ShippingOrderType)item);
		}

		void NetSteps.Logistics.Common.Models.IShippingRegion.RemoveShippingOrderType(NetSteps.Logistics.Common.Models.IShippingOrderType item)
		{
			ShippingOrderTypes.Remove((ShippingOrderType)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISite), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Site : NetSteps.Sites.Common.Models.ISite
	{
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISiteSetting), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteSetting : NetSteps.Sites.Common.Models.ISiteSetting
	{
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISiteSettingItem), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteSettingItem : NetSteps.Sites.Common.Models.ISiteSettingItem
	{
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISiteSettingValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteSettingValue : NetSteps.Sites.Common.Models.ISiteSettingValue
	{
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISiteStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteStatus : NetSteps.Sites.Common.Models.ISiteStatus
	{
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISiteStatusChangeReason), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteStatusChangeReason : NetSteps.Sites.Common.Models.ISiteStatusChangeReason
	{
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISiteType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteType : NetSteps.Sites.Common.Models.ISiteType
	{
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.ISiteUrl), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteUrl : NetSteps.Sites.Common.Models.ISiteUrl
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.ISiteWidget), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SiteWidget : NetSteps.Content.Common.Models.ISiteWidget
	{
		#region Singular Navigation Properties
		NetSteps.Content.Common.Models.IWidget NetSteps.Content.Common.Models.ISiteWidget.Widget
		{
			get { return Widget; }
			set { Widget = (Widget)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Addresses.Common.Models.IStateProvince), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class StateProvince : NetSteps.Addresses.Common.Models.IStateProvince
	{
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Logging.Common.Models.IStatistic), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Statistic : NetSteps.Diagnostics.Logging.Common.Models.IStatistic
	{
		#region Singular Navigation Properties
		NetSteps.Diagnostics.Logging.Common.Models.IStatisticType NetSteps.Diagnostics.Logging.Common.Models.IStatistic.StatisticType
		{
			get { return StatisticType; }
			set { StatisticType = (StatisticType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue> NetSteps.Diagnostics.Logging.Common.Models.IStatistic.StatisticValues
		{
			get { return StatisticValues.Cast<NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue>(); }
		}

		void NetSteps.Diagnostics.Logging.Common.Models.IStatistic.AddStatisticValue(NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue item)
		{
			StatisticValues.Add((StatisticValue)item);
		}

		void NetSteps.Diagnostics.Logging.Common.Models.IStatistic.RemoveStatisticValue(NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue item)
		{
			StatisticValues.Remove((StatisticValue)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Logging.Common.Models.IStatisticType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class StatisticType : NetSteps.Diagnostics.Logging.Common.Models.IStatisticType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Diagnostics.Logging.Common.Models.IStatistic> NetSteps.Diagnostics.Logging.Common.Models.IStatisticType.Statistics
		{
			get { return Statistics.Cast<NetSteps.Diagnostics.Logging.Common.Models.IStatistic>(); }
		}

		void NetSteps.Diagnostics.Logging.Common.Models.IStatisticType.AddStatistic(NetSteps.Diagnostics.Logging.Common.Models.IStatistic item)
		{
			Statistics.Add((Statistic)item);
		}

		void NetSteps.Diagnostics.Logging.Common.Models.IStatisticType.RemoveStatistic(NetSteps.Diagnostics.Logging.Common.Models.IStatistic item)
		{
			Statistics.Remove((Statistic)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class StatisticValue : NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue
	{
		#region Singular Navigation Properties
		NetSteps.Diagnostics.Logging.Common.Models.IStatistic NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue.Statistic
		{
			get { return Statistic; }
			set { Statistic = (Statistic)value; }
		}

		NetSteps.Diagnostics.Logging.Common.Models.IStatisticValueType NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue.StatisticValueType
		{
			get { return StatisticValueType; }
			set { StatisticValueType = (StatisticValueType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Diagnostics.Logging.Common.Models.IStatisticValueType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class StatisticValueType : NetSteps.Diagnostics.Logging.Common.Models.IStatisticValueType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue> NetSteps.Diagnostics.Logging.Common.Models.IStatisticValueType.StatisticValues
		{
			get { return StatisticValues.Cast<NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue>(); }
		}

		void NetSteps.Diagnostics.Logging.Common.Models.IStatisticValueType.AddStatisticValue(NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue item)
		{
			StatisticValues.Add((StatisticValue)item);
		}

		void NetSteps.Diagnostics.Logging.Common.Models.IStatisticValueType.RemoveStatisticValue(NetSteps.Diagnostics.Logging.Common.Models.IStatisticValue item)
		{
			StatisticValues.Remove((StatisticValue)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.IStoreFront), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class StoreFront : NetSteps.Products.Common.Models.IStoreFront
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IAccountPriceType> NetSteps.Products.Common.Models.IStoreFront.AccountPriceTypes
		{
			get { return AccountPriceTypes.Cast<NetSteps.Products.Common.Models.IAccountPriceType>(); }
		}

		void NetSteps.Products.Common.Models.IStoreFront.AddAccountPriceType(NetSteps.Products.Common.Models.IAccountPriceType item)
		{
			AccountPriceTypes.Add((AccountPriceType)item);
		}

		void NetSteps.Products.Common.Models.IStoreFront.RemoveAccountPriceType(NetSteps.Products.Common.Models.IAccountPriceType item)
		{
			AccountPriceTypes.Remove((AccountPriceType)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.ICatalog> NetSteps.Products.Common.Models.IStoreFront.Catalogs
		{
			get { return Catalogs.Cast<NetSteps.Products.Common.Models.ICatalog>(); }
		}

		void NetSteps.Products.Common.Models.IStoreFront.AddCatalog(NetSteps.Products.Common.Models.ICatalog item)
		{
			Catalogs.Add((Catalog)item);
		}

		void NetSteps.Products.Common.Models.IStoreFront.RemoveCatalog(NetSteps.Products.Common.Models.ICatalog item)
		{
			Catalogs.Remove((Catalog)item);
		}

		IEnumerable<NetSteps.Products.Common.Models.IMarketStoreFront> NetSteps.Products.Common.Models.IStoreFront.MarketStoreFronts
		{
			get { return MarketStoreFronts.Cast<NetSteps.Products.Common.Models.IMarketStoreFront>(); }
		}

		void NetSteps.Products.Common.Models.IStoreFront.AddMarketStoreFront(NetSteps.Products.Common.Models.IMarketStoreFront item)
		{
			MarketStoreFronts.Add((MarketStoreFront)item);
		}

		void NetSteps.Products.Common.Models.IStoreFront.RemoveMarketStoreFront(NetSteps.Products.Common.Models.IMarketStoreFront item)
		{
			MarketStoreFronts.Remove((MarketStoreFront)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ISupportTicket), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SupportTicket : NetSteps.Communication.Common.Models.ISupportTicket
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Common.Models.INote> NetSteps.Communication.Common.Models.ISupportTicket.Notes
		{
			get { return Notes.Cast<NetSteps.Common.Models.INote>(); }
		}

		void NetSteps.Communication.Common.Models.ISupportTicket.AddNote(NetSteps.Common.Models.INote item)
		{
			Notes.Add((Note)item);
		}

		void NetSteps.Communication.Common.Models.ISupportTicket.RemoveNote(NetSteps.Common.Models.INote item)
		{
			Notes.Remove((Note)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ISupportTicketCategory), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SupportTicketCategory : NetSteps.Communication.Common.Models.ISupportTicketCategory
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ISupportTicket> NetSteps.Communication.Common.Models.ISupportTicketCategory.SupportTickets
		{
			get { return SupportTickets.Cast<NetSteps.Communication.Common.Models.ISupportTicket>(); }
		}

		void NetSteps.Communication.Common.Models.ISupportTicketCategory.AddSupportTicket(NetSteps.Communication.Common.Models.ISupportTicket item)
		{
			SupportTickets.Add((SupportTicket)item);
		}

		void NetSteps.Communication.Common.Models.ISupportTicketCategory.RemoveSupportTicket(NetSteps.Communication.Common.Models.ISupportTicket item)
		{
			SupportTickets.Remove((SupportTicket)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ISupportTicketPriority), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SupportTicketPriority : NetSteps.Communication.Common.Models.ISupportTicketPriority
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ISupportTicket> NetSteps.Communication.Common.Models.ISupportTicketPriority.SupportTickets
		{
			get { return SupportTickets.Cast<NetSteps.Communication.Common.Models.ISupportTicket>(); }
		}

		void NetSteps.Communication.Common.Models.ISupportTicketPriority.AddSupportTicket(NetSteps.Communication.Common.Models.ISupportTicket item)
		{
			SupportTickets.Add((SupportTicket)item);
		}

		void NetSteps.Communication.Common.Models.ISupportTicketPriority.RemoveSupportTicket(NetSteps.Communication.Common.Models.ISupportTicket item)
		{
			SupportTickets.Remove((SupportTicket)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ISupportTicketStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SupportTicketStatus : NetSteps.Communication.Common.Models.ISupportTicketStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ISupportTicket> NetSteps.Communication.Common.Models.ISupportTicketStatus.SupportTickets
		{
			get { return SupportTickets.Cast<NetSteps.Communication.Common.Models.ISupportTicket>(); }
		}

		void NetSteps.Communication.Common.Models.ISupportTicketStatus.AddSupportTicket(NetSteps.Communication.Common.Models.ISupportTicket item)
		{
			SupportTickets.Add((SupportTicket)item);
		}

		void NetSteps.Communication.Common.Models.ISupportTicketStatus.RemoveSupportTicket(NetSteps.Communication.Common.Models.ISupportTicket item)
		{
			SupportTickets.Remove((SupportTicket)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Taxes.Common.Models.ITaxCache), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class TaxCache : NetSteps.Taxes.Common.Models.ITaxCache
	{
	}

	[ContainerRegister(typeof(NetSteps.Taxes.Common.Models.ITaxCacheOverride), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class TaxCacheOverride : NetSteps.Taxes.Common.Models.ITaxCacheOverride
	{
	}

	[ContainerRegister(typeof(NetSteps.Taxes.Common.Models.ITaxCategory), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class TaxCategory : NetSteps.Taxes.Common.Models.ITaxCategory
	{
	}

	[ContainerRegister(typeof(NetSteps.Taxes.Common.Models.ITaxDataSource), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class TaxDataSource : NetSteps.Taxes.Common.Models.ITaxDataSource
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Taxes.Common.Models.ITaxCache> NetSteps.Taxes.Common.Models.ITaxDataSource.TaxCaches
		{
			get { return TaxCaches.Cast<NetSteps.Taxes.Common.Models.ITaxCache>(); }
		}

		void NetSteps.Taxes.Common.Models.ITaxDataSource.AddTaxCache(NetSteps.Taxes.Common.Models.ITaxCache item)
		{
			TaxCaches.Add((TaxCache)item);
		}

		void NetSteps.Taxes.Common.Models.ITaxDataSource.RemoveTaxCache(NetSteps.Taxes.Common.Models.ITaxCache item)
		{
			TaxCaches.Remove((TaxCache)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.ITermTranslation), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class TermTranslation : NetSteps.Content.Common.Models.ITermTranslation
	{
	}

	[ContainerRegister(typeof(NetSteps.Products.Common.Models.ITestimonial), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Testimonial : NetSteps.Products.Common.Models.ITestimonial
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Products.Common.Models.IProductBase> NetSteps.Products.Common.Models.ITestimonial.ProductBases
		{
			get { return ProductBases.Cast<NetSteps.Products.Common.Models.IProductBase>(); }
		}

		void NetSteps.Products.Common.Models.ITestimonial.AddProductBas(NetSteps.Products.Common.Models.IProductBase item)
		{
			ProductBases.Add((ProductBase)item);
		}

		void NetSteps.Products.Common.Models.ITestimonial.RemoveProductBas(NetSteps.Products.Common.Models.IProductBase item)
		{
			ProductBases.Remove((ProductBase)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.ITimeUnitType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class TimeUnitType : NetSteps.Communication.Common.Models.ITimeUnitType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.ICampaignAction> NetSteps.Communication.Common.Models.ITimeUnitType.CampaignActions
		{
			get { return CampaignActions.Cast<NetSteps.Communication.Common.Models.ICampaignAction>(); }
		}

		void NetSteps.Communication.Common.Models.ITimeUnitType.AddCampaignAction(NetSteps.Communication.Common.Models.ICampaignAction item)
		{
			CampaignActions.Add((CampaignAction)item);
		}

		void NetSteps.Communication.Common.Models.ITimeUnitType.RemoveCampaignAction(NetSteps.Communication.Common.Models.ICampaignAction item)
		{
			CampaignActions.Remove((CampaignAction)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Common.Models.IToken), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Token : NetSteps.Communication.Common.Models.IToken
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Common.Models.IAlertTemplate> NetSteps.Communication.Common.Models.IToken.AlertTemplates
		{
			get { return AlertTemplates.Cast<NetSteps.Communication.Common.Models.IAlertTemplate>(); }
		}

		void NetSteps.Communication.Common.Models.IToken.AddAlertTemplate(NetSteps.Communication.Common.Models.IAlertTemplate item)
		{
			AlertTemplates.Add((AlertTemplate)item);
		}

		void NetSteps.Communication.Common.Models.IToken.RemoveAlertTemplate(NetSteps.Communication.Common.Models.IAlertTemplate item)
		{
			AlertTemplates.Remove((AlertTemplate)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.ICampaignActionTokenValue> NetSteps.Communication.Common.Models.IToken.CampaignActionTokenValues
		{
			get { return CampaignActionTokenValues.Cast<NetSteps.Communication.Common.Models.ICampaignActionTokenValue>(); }
		}

		void NetSteps.Communication.Common.Models.IToken.AddCampaignActionTokenValue(NetSteps.Communication.Common.Models.ICampaignActionTokenValue item)
		{
			CampaignActionTokenValues.Add((CampaignActionTokenValue)item);
		}

		void NetSteps.Communication.Common.Models.IToken.RemoveCampaignActionTokenValue(NetSteps.Communication.Common.Models.ICampaignActionTokenValue item)
		{
			CampaignActionTokenValues.Remove((CampaignActionTokenValue)item);
		}

		IEnumerable<NetSteps.Communication.Common.Models.IEmailTemplateType> NetSteps.Communication.Common.Models.IToken.EmailTemplateTypes
		{
			get { return EmailTemplateTypes.Cast<NetSteps.Communication.Common.Models.IEmailTemplateType>(); }
		}

		void NetSteps.Communication.Common.Models.IToken.AddEmailTemplateType(NetSteps.Communication.Common.Models.IEmailTemplateType item)
		{
			EmailTemplateTypes.Add((EmailTemplateType)item);
		}

		void NetSteps.Communication.Common.Models.IToken.RemoveEmailTemplateType(NetSteps.Communication.Common.Models.IEmailTemplateType item)
		{
			EmailTemplateTypes.Remove((EmailTemplateType)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Sites.Common.Models.IUrlRedirect), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class UrlRedirect : NetSteps.Sites.Common.Models.IUrlRedirect
	{
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IUser), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class User : NetSteps.Accounts.Common.Models.IUser
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IRole> NetSteps.Accounts.Common.Models.IUser.Roles
		{
			get { return Roles.Cast<NetSteps.Accounts.Common.Models.IRole>(); }
		}

		void NetSteps.Accounts.Common.Models.IUser.AddRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Add((Role)item);
		}

		void NetSteps.Accounts.Common.Models.IUser.RemoveRole(NetSteps.Accounts.Common.Models.IRole item)
		{
			Roles.Remove((Role)item);
		}

		IEnumerable<NetSteps.Accounts.Common.Models.IUserFunctionOverride> NetSteps.Accounts.Common.Models.IUser.UserFunctionOverrides
		{
			get { return UserFunctionOverrides.Cast<NetSteps.Accounts.Common.Models.IUserFunctionOverride>(); }
		}

		void NetSteps.Accounts.Common.Models.IUser.AddUserFunctionOverride(NetSteps.Accounts.Common.Models.IUserFunctionOverride item)
		{
			UserFunctionOverrides.Add((UserFunctionOverride)item);
		}

		void NetSteps.Accounts.Common.Models.IUser.RemoveUserFunctionOverride(NetSteps.Accounts.Common.Models.IUserFunctionOverride item)
		{
			UserFunctionOverrides.Remove((UserFunctionOverride)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IUserFunctionOverride), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class UserFunctionOverride : NetSteps.Accounts.Common.Models.IUserFunctionOverride
	{
		#region Singular Navigation Properties
		NetSteps.Accounts.Common.Models.IFunction NetSteps.Accounts.Common.Models.IUserFunctionOverride.Function
		{
			get { return Function; }
			set { Function = (Function)value; }
		}

		NetSteps.Accounts.Common.Models.IUser NetSteps.Accounts.Common.Models.IUserFunctionOverride.User
		{
			get { return User; }
			set { User = (User)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IUserSiteWidget), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class UserSiteWidget : NetSteps.Content.Common.Models.IUserSiteWidget
	{
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IUserStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class UserStatus : NetSteps.Accounts.Common.Models.IUserStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IUser> NetSteps.Accounts.Common.Models.IUserStatus.Users
		{
			get { return Users.Cast<NetSteps.Accounts.Common.Models.IUser>(); }
		}

		void NetSteps.Accounts.Common.Models.IUserStatus.AddUser(NetSteps.Accounts.Common.Models.IUser item)
		{
			Users.Add((User)item);
		}

		void NetSteps.Accounts.Common.Models.IUserStatus.RemoveUser(NetSteps.Accounts.Common.Models.IUser item)
		{
			Users.Remove((User)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Accounts.Common.Models.IUserType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class UserType : NetSteps.Accounts.Common.Models.IUserType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Accounts.Common.Models.IUser> NetSteps.Accounts.Common.Models.IUserType.Users
		{
			get { return Users.Cast<NetSteps.Accounts.Common.Models.IUser>(); }
		}

		void NetSteps.Accounts.Common.Models.IUserType.AddUser(NetSteps.Accounts.Common.Models.IUser item)
		{
			Users.Add((User)item);
		}

		void NetSteps.Accounts.Common.Models.IUserType.RemoveUser(NetSteps.Accounts.Common.Models.IUser item)
		{
			Users.Remove((User)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IWarehouse), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Warehouse : NetSteps.Logistics.Common.Models.IWarehouse
	{
		#region Singular Navigation Properties
		NetSteps.Addresses.Common.Models.IAddress NetSteps.Logistics.Common.Models.IWarehouse.Address
		{
			get { return Address; }
			set { Address = (Address)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Logistics.Common.Models.IShippingRegion> NetSteps.Logistics.Common.Models.IWarehouse.ShippingRegions
		{
			get { return ShippingRegions.Cast<NetSteps.Logistics.Common.Models.IShippingRegion>(); }
		}

		void NetSteps.Logistics.Common.Models.IWarehouse.AddShippingRegion(NetSteps.Logistics.Common.Models.IShippingRegion item)
		{
			ShippingRegions.Add((ShippingRegion)item);
		}

		void NetSteps.Logistics.Common.Models.IWarehouse.RemoveShippingRegion(NetSteps.Logistics.Common.Models.IShippingRegion item)
		{
			ShippingRegions.Remove((ShippingRegion)item);
		}

		IEnumerable<NetSteps.Logistics.Common.Models.IWarehouseProduct> NetSteps.Logistics.Common.Models.IWarehouse.WarehouseProducts
		{
			get { return WarehouseProducts.Cast<NetSteps.Logistics.Common.Models.IWarehouseProduct>(); }
		}

		void NetSteps.Logistics.Common.Models.IWarehouse.AddWarehouseProduct(NetSteps.Logistics.Common.Models.IWarehouseProduct item)
		{
			WarehouseProducts.Add((WarehouseProduct)item);
		}

		void NetSteps.Logistics.Common.Models.IWarehouse.RemoveWarehouseProduct(NetSteps.Logistics.Common.Models.IWarehouseProduct item)
		{
			WarehouseProducts.Remove((WarehouseProduct)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Logistics.Common.Models.IWarehouseProduct), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class WarehouseProduct : NetSteps.Logistics.Common.Models.IWarehouseProduct
	{
	}

	[ContainerRegister(typeof(NetSteps.Content.Common.Models.IWidget), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class Widget : NetSteps.Content.Common.Models.IWidget
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Content.Common.Models.ISiteWidget> NetSteps.Content.Common.Models.IWidget.SiteWidgets
		{
			get { return SiteWidgets.Cast<NetSteps.Content.Common.Models.ISiteWidget>(); }
		}

		void NetSteps.Content.Common.Models.IWidget.AddSiteWidget(NetSteps.Content.Common.Models.ISiteWidget item)
		{
			SiteWidgets.Add((SiteWidget)item);
		}

		void NetSteps.Content.Common.Models.IWidget.RemoveSiteWidget(NetSteps.Content.Common.Models.ISiteWidget item)
		{
			SiteWidgets.Remove((SiteWidget)item);
		}

		IEnumerable<NetSteps.Content.Common.Models.IUserSiteWidget> NetSteps.Content.Common.Models.IWidget.UserSiteWidgets
		{
			get { return UserSiteWidgets.Cast<NetSteps.Content.Common.Models.IUserSiteWidget>(); }
		}

		void NetSteps.Content.Common.Models.IWidget.AddUserSiteWidget(NetSteps.Content.Common.Models.IUserSiteWidget item)
		{
			UserSiteWidgets.Add((UserSiteWidget)item);
		}

		void NetSteps.Content.Common.Models.IWidget.RemoveUserSiteWidget(NetSteps.Content.Common.Models.IUserSiteWidget item)
		{
			UserSiteWidgets.Remove((UserSiteWidget)item);
		}

		#endregion
	}

}

namespace NetSteps.Data.Entities.Mail
{
	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IAddressType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class AddressType : NetSteps.Communication.Mail.Common.Models.IAddressType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress> NetSteps.Communication.Mail.Common.Models.IAddressType.MailMessageGroupAddresses
		{
			get { return MailMessageGroupAddresses.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IAddressType.AddMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Add((MailMessageGroupAddress)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IAddressType.RemoveMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Remove((MailMessageGroupAddress)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailAttachment), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailAttachment : NetSteps.Communication.Mail.Common.Models.IMailAttachment
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment> NetSteps.Communication.Mail.Common.Models.IMailAttachment.MailMessageAttachments
		{
			get { return MailMessageAttachments.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailAttachment.AddMailMessageAttachment(NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment item)
		{
			MailMessageAttachments.Add((MailMessageAttachment)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailAttachment.RemoveMailMessageAttachment(NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment item)
		{
			MailMessageAttachments.Remove((MailMessageAttachment)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailFolderType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailFolderType : NetSteps.Communication.Mail.Common.Models.IMailFolderType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessage> NetSteps.Communication.Mail.Common.Models.IMailFolderType.MailMessages
		{
			get { return MailMessages.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessage>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailFolderType.AddMailMessage(NetSteps.Communication.Mail.Common.Models.IMailMessage item)
		{
			MailMessages.Add((MailMessage)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailFolderType.RemoveMailMessage(NetSteps.Communication.Mail.Common.Models.IMailMessage item)
		{
			MailMessages.Remove((MailMessage)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessage), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessage : NetSteps.Communication.Mail.Common.Models.IMailMessage
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Mail.Common.Models.IMailFolderType NetSteps.Communication.Mail.Common.Models.IMailMessage.MailFolderType
		{
			get { return MailFolderType; }
			set { MailFolderType = (MailFolderType)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IMailMessagePriority NetSteps.Communication.Mail.Common.Models.IMailMessage.MailMessagePriority
		{
			get { return MailMessagePriority; }
			set { MailMessagePriority = (MailMessagePriority)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IMailMessageType NetSteps.Communication.Mail.Common.Models.IMailMessage.MailMessageType
		{
			get { return MailMessageType; }
			set { MailMessageType = (MailMessageType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment> NetSteps.Communication.Mail.Common.Models.IMailMessage.MailMessageAttachments
		{
			get { return MailMessageAttachments.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessage.AddMailMessageAttachment(NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment item)
		{
			MailMessageAttachments.Add((MailMessageAttachment)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessage.RemoveMailMessageAttachment(NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment item)
		{
			MailMessageAttachments.Remove((MailMessageAttachment)item);
		}

		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageGroup> NetSteps.Communication.Mail.Common.Models.IMailMessage.MailMessageGroups
		{
			get { return MailMessageGroups.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageGroup>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessage.AddMailMessageGroup(NetSteps.Communication.Mail.Common.Models.IMailMessageGroup item)
		{
			MailMessageGroups.Add((MailMessageGroup)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessage.RemoveMailMessageGroup(NetSteps.Communication.Mail.Common.Models.IMailMessageGroup item)
		{
			MailMessageGroups.Remove((MailMessageGroup)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessageAttachment : NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Mail.Common.Models.IMailAttachment NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment.MailAttachment
		{
			get { return MailAttachment; }
			set { MailAttachment = (MailAttachment)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IMailMessage NetSteps.Communication.Mail.Common.Models.IMailMessageAttachment.MailMessage
		{
			get { return MailMessage; }
			set { MailMessage = (MailMessage)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessageGroup), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessageGroup : NetSteps.Communication.Mail.Common.Models.IMailMessageGroup
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Mail.Common.Models.IMailMessage NetSteps.Communication.Mail.Common.Models.IMailMessageGroup.MailMessage
		{
			get { return MailMessage; }
			set { MailMessage = (MailMessage)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress> NetSteps.Communication.Mail.Common.Models.IMailMessageGroup.MailMessageGroupAddresses
		{
			get { return MailMessageGroupAddresses.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageGroup.AddMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Add((MailMessageGroupAddress)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageGroup.RemoveMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Remove((MailMessageGroupAddress)item);
		}

		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit> NetSteps.Communication.Mail.Common.Models.IMailMessageGroup.MailMessageGroupStatusAudits
		{
			get { return MailMessageGroupStatusAudits.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageGroup.AddMailMessageGroupStatusAudit(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit item)
		{
			MailMessageGroupStatusAudits.Add((MailMessageGroupStatusAudit)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageGroup.RemoveMailMessageGroupStatusAudit(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit item)
		{
			MailMessageGroupStatusAudits.Remove((MailMessageGroupStatusAudit)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessageGroupAddress : NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Mail.Common.Models.IAddressType NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress.AddressType
		{
			get { return AddressType; }
			set { AddressType = (AddressType)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IMailMessageGroup NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress.MailMessageGroup
		{
			get { return MailMessageGroup; }
			set { MailMessageGroup = (MailMessageGroup)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IRecipientStatus NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress.RecipientStatus
		{
			get { return RecipientStatus; }
			set { RecipientStatus = (RecipientStatus)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IRecipientType NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress.RecipientType
		{
			get { return RecipientType; }
			set { RecipientType = (RecipientType)value; }
		}

		#endregion

		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent> NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress.MailMessageRecipientEvents
		{
			get { return MailMessageRecipientEvents.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress.AddMailMessageRecipientEvent(NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent item)
		{
			MailMessageRecipientEvents.Add((MailMessageRecipientEvent)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress.RemoveMailMessageRecipientEvent(NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent item)
		{
			MailMessageRecipientEvents.Remove((MailMessageRecipientEvent)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessageGroupStatusAudit : NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Mail.Common.Models.IMailMessageGroup NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit.MailMessageGroup
		{
			get { return MailMessageGroup; }
			set { MailMessageGroup = (MailMessageGroup)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IMessageGroupStatus NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit.MessageGroupStatus
		{
			get { return MessageGroupStatus; }
			set { MessageGroupStatus = (MessageGroupStatus)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessagePriority), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessagePriority : NetSteps.Communication.Mail.Common.Models.IMailMessagePriority
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessage> NetSteps.Communication.Mail.Common.Models.IMailMessagePriority.MailMessages
		{
			get { return MailMessages.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessage>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessagePriority.AddMailMessage(NetSteps.Communication.Mail.Common.Models.IMailMessage item)
		{
			MailMessages.Add((MailMessage)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessagePriority.RemoveMailMessage(NetSteps.Communication.Mail.Common.Models.IMailMessage item)
		{
			MailMessages.Remove((MailMessage)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessageRecipientEvent : NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent
	{
		#region Singular Navigation Properties
		NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent.MailMessageGroupAddress
		{
			get { return MailMessageGroupAddress; }
			set { MailMessageGroupAddress = (MailMessageGroupAddress)value; }
		}

		NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEventType NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent.MailMessageRecipientEventType
		{
			get { return MailMessageRecipientEventType; }
			set { MailMessageRecipientEventType = (MailMessageRecipientEventType)value; }
		}

		#endregion

	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEventType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessageRecipientEventType : NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEventType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent> NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEventType.MailMessageRecipientEvents
		{
			get { return MailMessageRecipientEvents.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEventType.AddMailMessageRecipientEvent(NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent item)
		{
			MailMessageRecipientEvents.Add((MailMessageRecipientEvent)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEventType.RemoveMailMessageRecipientEvent(NetSteps.Communication.Mail.Common.Models.IMailMessageRecipientEvent item)
		{
			MailMessageRecipientEvents.Remove((MailMessageRecipientEvent)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMailMessageType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MailMessageType : NetSteps.Communication.Mail.Common.Models.IMailMessageType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessage> NetSteps.Communication.Mail.Common.Models.IMailMessageType.MailMessages
		{
			get { return MailMessages.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessage>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageType.AddMailMessage(NetSteps.Communication.Mail.Common.Models.IMailMessage item)
		{
			MailMessages.Add((MailMessage)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMailMessageType.RemoveMailMessage(NetSteps.Communication.Mail.Common.Models.IMailMessage item)
		{
			MailMessages.Remove((MailMessage)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IMessageGroupStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class MessageGroupStatus : NetSteps.Communication.Mail.Common.Models.IMessageGroupStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit> NetSteps.Communication.Mail.Common.Models.IMessageGroupStatus.MailMessageGroupStatusAudits
		{
			get { return MailMessageGroupStatusAudits.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IMessageGroupStatus.AddMailMessageGroupStatusAudit(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit item)
		{
			MailMessageGroupStatusAudits.Add((MailMessageGroupStatusAudit)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IMessageGroupStatus.RemoveMailMessageGroupStatusAudit(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupStatusAudit item)
		{
			MailMessageGroupStatusAudits.Remove((MailMessageGroupStatusAudit)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IRecipientStatus), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class RecipientStatus : NetSteps.Communication.Mail.Common.Models.IRecipientStatus
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress> NetSteps.Communication.Mail.Common.Models.IRecipientStatus.MailMessageGroupAddresses
		{
			get { return MailMessageGroupAddresses.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IRecipientStatus.AddMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Add((MailMessageGroupAddress)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IRecipientStatus.RemoveMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Remove((MailMessageGroupAddress)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.IRecipientType), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class RecipientType : NetSteps.Communication.Mail.Common.Models.IRecipientType
	{
		#region Collection Navigation Properties
		IEnumerable<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress> NetSteps.Communication.Mail.Common.Models.IRecipientType.MailMessageGroupAddresses
		{
			get { return MailMessageGroupAddresses.Cast<NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress>(); }
		}

		void NetSteps.Communication.Mail.Common.Models.IRecipientType.AddMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Add((MailMessageGroupAddress)item);
		}

		void NetSteps.Communication.Mail.Common.Models.IRecipientType.RemoveMailMessageGroupAddress(NetSteps.Communication.Mail.Common.Models.IMailMessageGroupAddress item)
		{
			MailMessageGroupAddresses.Remove((MailMessageGroupAddress)item);
		}

		#endregion
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.ISitesAccount), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SitesAccount : NetSteps.Communication.Mail.Common.Models.ISitesAccount
	{
	}

	[ContainerRegister(typeof(NetSteps.Communication.Mail.Common.Models.ISitesCampaignSubscriber), RegistrationBehaviors.Default, ScopeBehavior = ScopeBehavior.InstancePerRequest)]
	public partial class SitesCampaignSubscriber : NetSteps.Communication.Mail.Common.Models.ISitesCampaignSubscriber
	{
	}

}
