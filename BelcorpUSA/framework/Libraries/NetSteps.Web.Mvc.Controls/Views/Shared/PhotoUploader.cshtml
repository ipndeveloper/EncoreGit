@model NetSteps.Web.Mvc.Controls.Models.PhotoUploaderModel
<script type="text/javascript">
    $(function () {
        var uploader = new qq.FileUploader({
            element: document.getElementById('@(Model.Mode)Upload'),
            params: {
                folder: '@Model.Folder'
            },
            action: '@Href("~/Edit/UploadPhoto")',
            allowedExtensions: ['jpg', 'jpeg', 'png', 'gif', 'tif', 'tiff', 'bmp'],
            messages: {
                typeError: '@Html.Term("InvalidExtension", "{0} has invalid extension. Only {1} are allowed.", "{file}", "{extensions}")',
                sizeError: '@Html.Term("FileTooLarge", "{0} is too large, maximum file size is {1}.", "{file}", "{sizeLimit}")',
                minSizeError: '@Html.Term("FileTooSmall", "{0} is too small, minimum file size is {1}.", "{file}", "{minSizeLimit}")',
                emptyError: '@Html.Term("EmptyFile", "{0} is empty, please select files again without it.", "{file}")',
                onLeave: '@Html.Term("FilesStillUploading", "The files are being uploaded, if you leave now the upload will be canceled.")'
            },
            template: '<div class="qq-uploader">' +
					'<div class="qq-upload-drop-area"><span>@Html.Term("DropFilesHereToUpload", "Drop files here to upload")</span></div>' +
					'<div class="qq-upload-button emButton NS-qq-upload-button"><span class="uploaderLabel">@Html.Term("UploadAFile", "Upload a file")</span></div>' +
					'<ul class="qq-upload-list"></ul>' +
				 '</div>',
            fileTemplate: '<li>' +
					'<span class="qq-upload-file"></span>' +
					'<span class="qq-upload-spinner"></span>' +
					'<span class="qq-upload-size"></span>' +
					'<a class="qq-upload-cancel" href="javascript:void(0);">@Html.Term("Cancel")</a>' +
					'<span class="qq-upload-failed-text">@Html.Term("Failed")</span>' +
				'</li>',
            onComplete: function (id, fileName, response) {
                $('#@(Model.Mode)Container').show();
                $('#@(Model.Mode)PreviewImage').attr('src', response.fileName);
            }
        });
    });

	</script>

<div id="@(Model.Mode)PhotoCropper" class="NS-PhotoEditor">
    <div id="@(Model.Mode)Upload" class="NS-PhotoUploadButton">
    </div>
    <div id="@(Model.Mode)Container" class="NS-PhotoContainer">
        <h2 class="UI-mainBg brdrAll pad5 previewPhotoTitle">
            @Html.Term("Preview", "Preview")</h2>
        <div id="@(Model.Mode)PreviewContainer" style="overflow: hidden;">
            <img src="@(Model.Content == null ? "" : Model.Content.GetImage().GetHtmlAttributeValue("src"))" alt="" id="@(Model.Mode)PreviewImage" class="image" />
        </div>
    </div>
</div>
